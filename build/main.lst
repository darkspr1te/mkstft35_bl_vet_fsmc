ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_SDIO_SD_Init:
  26              	.LFB137:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** #include "stm32f4xx_hal_uart.h"
  43:Src/main.c    **** #include "fatfs.h"
  44:Src/main.c    **** #include "mkstft35.h"
  45:Src/main.c    **** #include "firmware.h"
  46:Src/main.c    **** #include "stm32_adafruit_lcd.h"
  47:Src/main.c    **** #include "mainApp.h"
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** RTC_HandleTypeDef hrtc;
  54:Src/main.c    **** 
  55:Src/main.c    **** SRAM_HandleTypeDef hsram1;
  56:Src/main.c    **** 
  57:Src/main.c    **** 
  58:Src/main.c    **** TIM_HandleTypeDef htim2;
  59:Src/main.c    **** UART_HandleTypeDef huart1;
  60:Src/main.c    **** UART_HandleTypeDef huart3;
  61:Src/main.c    **** UART_HandleTypeDef huart6;
  62:Src/main.c    **** 
  63:Src/main.c    **** SD_HandleTypeDef hsd;
  64:Src/main.c    **** HAL_SD_CardInfoTypeDef SDCardInfo;
  65:Src/main.c    **** 
  66:Src/main.c    **** 
  67:Src/main.c    **** SPI_HandleTypeDef hspi1;
  68:Src/main.c    **** char txt[30];
  69:Src/main.c    **** uint8_t retSD; /* Return value for SD */
  70:Src/main.c    **** char SDPath[4]; /* SD logical drive path */
  71:Src/main.c    **** FATFS SDFatFS; /* File system object for SD logical drive */
  72:Src/main.c    **** FIL SDFile; /* File object for SD */
  73:Src/main.c    **** 
  74:Src/main.c    **** FATFS sdFileSystem;		// 0:/
  75:Src/main.c    **** const uint32_t *mcuFirstPageAddr = (const uint32_t *) (0x8000000 + BOOT_SECT);
  76:Src/main.c    **** /* DMA stuff trying to fix sdcard */
  77:Src/main.c    **** DMA_HandleTypeDef hdma_sdio_tx;
  78:Src/main.c    **** DMA_HandleTypeDef hdma_sdio_rx;
  79:Src/main.c    **** //
  80:Src/main.c    **** typedef void (*pFunction)(void);
  81:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  82:Src/main.c    **** void SystemClock_Config(void);
  83:Src/main.c    **** static void MX_DMA_Init(void);
  84:Src/main.c    **** static void MX_GPIO_Init(void);
  85:Src/main.c    **** static void MX_RTC_Init(void);
  86:Src/main.c    **** static void MX_FSMC_Init(void);
  87:Src/main.c    **** static void MX_USART1_UART_Init(void);
  88:Src/main.c    **** static void MX_USART3_UART_Init(void);
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 3


  89:Src/main.c    **** static void MX_USART6_UART_Init(void);
  90:Src/main.c    **** static void MX_SDIO_SD_Init(void);
  91:Src/main.c    **** /* USER CODE BEGIN PFP */
  92:Src/main.c    **** 
  93:Src/main.c    ****   FRESULT res;
  94:Src/main.c    **** 
  95:Src/main.c    ****   uint8_t fName[] = "mkstft35.bin\0";
  96:Src/main.c    ****   //fname = "0:/mkstft35.bin"
  97:Src/main.c    ****   //fname = FIRMWARE
  98:Src/main.c    ****   int sd_pin=0;
  99:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 100:Src/main.c    **** void mainApp(void);
 101:Src/main.c    **** 
 102:Src/main.c    **** 
 103:Src/main.c    **** /**
 104:Src/main.c    ****   * @brief  The application entry point.
 105:Src/main.c    ****   *
 106:Src/main.c    ****   * @retval None
 107:Src/main.c    ****   */
 108:Src/main.c    **** 
 109:Src/main.c    **** int main(void)
 110:Src/main.c    **** {
 111:Src/main.c    **** 
 112:Src/main.c    ****   HAL_Init();
 113:Src/main.c    **** 
 114:Src/main.c    **** 
 115:Src/main.c    ****   SystemClock_Config();
 116:Src/main.c    **** 
 117:Src/main.c    **** 
 118:Src/main.c    ****   MX_GPIO_Init();
 119:Src/main.c    **** 
 120:Src/main.c    ****  // MX_RTC_Init();
 121:Src/main.c    ****   MX_USART1_UART_Init();
 122:Src/main.c    ****   char SD_CD = HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_3);
 123:Src/main.c    ****   if (!SD_CD)
 124:Src/main.c    ****     {
 125:Src/main.c    ****     printf("SD CARD detected %d\n\r",SD_CD);
 126:Src/main.c    ****     }
 127:Src/main.c    ****   else 
 128:Src/main.c    ****   {
 129:Src/main.c    ****     printf("SD CARD not detected %d\n\r",SD_CD);
 130:Src/main.c    ****     MX_FSMC_Init();
 131:Src/main.c    ****     int error_lcd = BSP_LCD_Init();
 132:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_RED);
 133:Src/main.c    ****     firmware_run();
 134:Src/main.c    ****   //alt 
 135:Src/main.c    ****  // Jump_To_App();
 136:Src/main.c    ****   //Bootloader_JumpToApplication();
 137:Src/main.c    ****   //mainApp();
 138:Src/main.c    **** 
 139:Src/main.c    ****   }
 140:Src/main.c    ****  // MX_USART3_UART_Init();
 141:Src/main.c    ****  // MX_USART6_UART_Init();
 142:Src/main.c    ****   //HAL_UART_MspInit(&huart1);
 143:Src/main.c    ****   MX_FSMC_Init();
 144:Src/main.c    ****   //MX_DMA_Init();
 145:Src/main.c    ****   //init sdcard and read
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 4


 146:Src/main.c    ****   MX_SDIO_SD_Init();
 147:Src/main.c    ****  //for maybe spi mode sdcard
 148:Src/main.c    ****  // MX_SPI1_Init();
 149:Src/main.c    ****  
 150:Src/main.c    ****   MX_FATFS_Init();
 151:Src/main.c    ****   int error_lcd = BSP_LCD_Init();
 152:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_BLUE);
 153:Src/main.c    ****   snprintf(txt, 30, "test lcd text   ");
 154:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_MAGENTA);
 155:Src/main.c    ****   BSP_LCD_DisplayStringAt(0, SCR_HT - CHARSIZEY, (uint8_t *)txt, LEFT_MODE);
 156:Src/main.c    ****   printf("\n\r\n\r\n\rBooting\n\r");
 157:Src/main.c    ****   printf("Software version: %s\r\n",SOFTWARE_VERSION);
 158:Src/main.c    ****   printf("Board Build: \"%s\"\r\n",HARDWARE);    
 159:Src/main.c    ****   printf("Loader Variant: %s\n\r",LOADER_VARIANT);
 160:Src/main.c    ****   printf("about to setup sd-card\n\r");
 161:Src/main.c    **** 
 162:Src/main.c    ****   unsigned char result;
 163:Src/main.c    ****   
 164:Src/main.c    ****   //open device
 165:Src/main.c    ****   result = f_mount(&SDFatFS, SDPath, 1);
 166:Src/main.c    ****   //result=FR_OK;
 167:Src/main.c    **** 
 168:Src/main.c    ****     if (result == FR_OK)
 169:Src/main.c    ****   {
 170:Src/main.c    ****   	  printf("SD Card Open Success\r\n");
 171:Src/main.c    ****      } else {
 172:Src/main.c    ****    
 173:Src/main.c    **** 	  printf("MAIN: FatFs Init Failed Code: %d\r\n", (int)result);
 174:Src/main.c    **** 
 175:Src/main.c    ****     }
 176:Src/main.c    **** /*
 177:Src/main.c    ****   sd_pin = HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_3);
 178:Src/main.c    **** 
 179:Src/main.c    ****   if (sd_pin == 1)
 180:Src/main.c    ****   {
 181:Src/main.c    ****     printf("sd card pin detect high\n\r");
 182:Src/main.c    ****   }
 183:Src/main.c    ****   else
 184:Src/main.c    ****   {
 185:Src/main.c    **** 
 186:Src/main.c    ****     printf("sd card pin detect low\n\r");
 187:Src/main.c    ****   }
 188:Src/main.c    ****   */
 189:Src/main.c    ****  res = FR_OK;
 190:Src/main.c    ****  //res = f_open(&SDFile,(char *)fName, FA_OPEN_EXISTING | FA_READ);
 191:Src/main.c    ****   if (res == FR_OK)
 192:Src/main.c    ****   {
 193:Src/main.c    **** 	  
 194:Src/main.c    **** 	 // printf("Firmware File Found,jumping to flash routine\n\r");
 195:Src/main.c    ****     res == flash(fName);
 196:Src/main.c    ****     HAL_FLASH_Lock();
 197:Src/main.c    ****    
 198:Src/main.c    ****     if (res == FR_OK)
 199:Src/main.c    ****     {
 200:Src/main.c    ****       printf("Flash success\n\r");
 201:Src/main.c    ****     }
 202:Src/main.c    ****     else
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 5


 203:Src/main.c    ****     {
 204:Src/main.c    ****       printf("MAIN: Flash error code:%d\n\r",res);
 205:Src/main.c    ****     }
 206:Src/main.c    ****    // while (1);
 207:Src/main.c    ****   } 
 208:Src/main.c    ****   else
 209:Src/main.c    **** 	if (res != FR_OK)
 210:Src/main.c    **** 	{
 211:Src/main.c    **** 	  printf("MAIN: Failed to open firmware file %s wirth error :%d\n\r",fName,res);
 212:Src/main.c    **** 	}
 213:Src/main.c    ****   else 
 214:Src/main.c    ****   {
 215:Src/main.c    ****     printf("unknown flash error %d\n\r",res);
 216:Src/main.c    ****   }
 217:Src/main.c    ****   
 218:Src/main.c    ****   firmware_deinit();
 219:Src/main.c    ****   
 220:Src/main.c    ****   firmware_run();
 221:Src/main.c    ****   //alt 
 222:Src/main.c    ****   //Jump_To_App();
 223:Src/main.c    ****   Bootloader_JumpToApplication();
 224:Src/main.c    ****  // go_to(0x0800C000);
 225:Src/main.c    ****   //mainApp();
 226:Src/main.c    ****   while (1)
 227:Src/main.c    ****   {
 228:Src/main.c    **** 
 229:Src/main.c    ****     printf("\r\nLcd Init Error\r\n");
 230:Src/main.c    **** 
 231:Src/main.c    ****   }
 232:Src/main.c    **** 
 233:Src/main.c    **** 
 234:Src/main.c    **** }
 235:Src/main.c    **** //move vector table 
 236:Src/main.c    **** inline void moveVectorTable(uint32_t Offset)
 237:Src/main.c    **** {
 238:Src/main.c    ****     // __disable_irq();
 239:Src/main.c    ****     SCB->VTOR = FLASH_BASE | Offset;
 240:Src/main.c    **** }
 241:Src/main.c    **** 
 242:Src/main.c    **** #define APPLICATION_START_ADDRESS   0x0800C000U
 243:Src/main.c    **** static void JumpToApplication(void)
 244:Src/main.c    **** {
 245:Src/main.c    ****     if (((*(__IO uint32_t*)APPLICATION_START_ADDRESS) & 0x2FFE0000 ) == 0x20000000)
 246:Src/main.c    ****     {
 247:Src/main.c    ****         /* First, disable all IRQs */
 248:Src/main.c    ****         __disable_irq();
 249:Src/main.c    **** 
 250:Src/main.c    ****         /* Get the main application start address */
 251:Src/main.c    ****         uint32_t jump_address = *(__IO uint32_t *)(APPLICATION_START_ADDRESS + 4);
 252:Src/main.c    **** 
 253:Src/main.c    ****         /* Set the main stack pointer to to the application start address */
 254:Src/main.c    ****         __set_MSP(*(__IO uint32_t *)APPLICATION_START_ADDRESS);
 255:Src/main.c    **** 
 256:Src/main.c    ****         // Create function pointer for the main application
 257:Src/main.c    ****         void (*pmain_app)(void) = (void (*)(void))(jump_address);
 258:Src/main.c    **** 
 259:Src/main.c    ****         // Now jump to the main application
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 6


 260:Src/main.c    ****         pmain_app();
 261:Src/main.c    ****     }
 262:Src/main.c    ****     
 263:Src/main.c    **** }
 264:Src/main.c    **** 
 265:Src/main.c    **** //goto application
 266:Src/main.c    ****  static uint8_t go_to(uint32_t myfunc)
 267:Src/main.c    **** {
 268:Src/main.c    **** 	uint8_t ret = 0;
 269:Src/main.c    **** 	void(*ptr)(void);
 270:Src/main.c    **** 	if((*(volatile uint32_t *)myfunc & 0x2ffe0000) == 0x20000000)
 271:Src/main.c    **** 	{
 272:Src/main.c    **** 
 273:Src/main.c    **** 		__set_MSP((*(volatile uint32_t *)myfunc));
 274:Src/main.c    **** 		ptr = (void(*)(void))(*(__IO uint32_t*)(myfunc+4));
 275:Src/main.c    **** 
 276:Src/main.c    **** 		ptr();
 277:Src/main.c    **** 	}
 278:Src/main.c    **** 	return ret;      
 279:Src/main.c    **** }
 280:Src/main.c    **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 281:Src/main.c    **** { 
 282:Src/main.c    ****   /* Check the parameters */
 283:Src/main.c    ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 284:Src/main.c    ****   assert_param(IS_NVIC_OFFSET(Offset));  
 285:Src/main.c    ****    
 286:Src/main.c    ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 287:Src/main.c    **** }
 288:Src/main.c    **** 
 289:Src/main.c    **** #define APP_ADDRESS (uint32_t)0x0800C000
 290:Src/main.c    **** #define APP_VECT (uint32_t)0xC000
 291:Src/main.c    **** //from mks sources
 292:Src/main.c    **** #define NVIC_VectTab_FLASH           ((uint32_t)0x08000000)
 293:Src/main.c    **** //Jump to application
 294:Src/main.c    **** void Bootloader_JumpToApplication(void)
 295:Src/main.c    **** {
 296:Src/main.c    ****     uint32_t  JumpAddress = *(__IO uint32_t*)(APP_ADDRESS + 4);
 297:Src/main.c    ****     pFunction Jump        = (pFunction)JumpAddress;
 298:Src/main.c    **** 
 299:Src/main.c    ****     HAL_RCC_DeInit();
 300:Src/main.c    ****     HAL_DeInit();
 301:Src/main.c    **** 
 302:Src/main.c    ****     SysTick->CTRL = 0;
 303:Src/main.c    ****     SysTick->LOAD = 0;
 304:Src/main.c    ****     SysTick->VAL  = 0;
 305:Src/main.c    ****   uint32_t address =  *(uint32_t *)(APP_ADDRESS);
 306:Src/main.c    ****    uint32_t val = * (uint32_t *) address;
 307:Src/main.c    ****    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0xC000);
 308:Src/main.c    ****    printf("about to jump");
 309:Src/main.c    **** //#if(SET_VECTOR_TABLE)
 310:Src/main.c    ****     //SCB->VTOR = APP_ADDRESS;
 311:Src/main.c    ****   //  SCB->VTOR = APP_VECT ;
 312:Src/main.c    **** //#endif
 313:Src/main.c    **** 
 314:Src/main.c    ****     //__set_MSP(*(__IO uint32_t*)APP_ADDRESS);
 315:Src/main.c    ****     __set_MSP(val);
 316:Src/main.c    ****     __asm volatile ("cpsid i");
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 7


 317:Src/main.c    ****     Jump();
 318:Src/main.c    **** }
 319:Src/main.c    **** 
 320:Src/main.c    ****  void Jump_To_App(void)
 321:Src/main.c    ****  {
 322:Src/main.c    ****      // f_mount(NULL, SPISD_Path, 1);
 323:Src/main.c    ****     //  HAL_SPI_MspDeInit(&hspi1);
 324:Src/main.c    ****      // HAL_TIM_Base_MspDeInit(&htim2);
 325:Src/main.c    ****       printf("Vect at %x",MAIN_PR_OFFSET);
 326:Src/main.c    ****       printf("jump @ %x",mcuFirstPageAddr);
 327:Src/main.c    ****       HAL_Delay(500);
 328:Src/main.c    ****       __HAL_RCC_GPIOA_CLK_DISABLE();
 329:Src/main.c    ****       __HAL_RCC_GPIOB_CLK_DISABLE();
 330:Src/main.c    ****       __HAL_RCC_GPIOC_CLK_DISABLE();
 331:Src/main.c    ****       __HAL_RCC_GPIOD_CLK_DISABLE();
 332:Src/main.c    ****       __HAL_RCC_GPIOE_CLK_DISABLE();
 333:Src/main.c    ****     HAL_SD_MspDeInit(&hsd);
 334:Src/main.c    ****      
 335:Src/main.c    **** 
 336:Src/main.c    ****       // Disabling SysTick interrupt
 337:Src/main.c    ****       SysTick->CTRL = 0;
 338:Src/main.c    ****       moveVectorTable(MAIN_PR_OFFSET);
 339:Src/main.c    ****        __set_MSP(*mcuFirstPageAddr);
 340:Src/main.c    ****       // booting really
 341:Src/main.c    ****       pFunction resetHandler = (pFunction) *(uint32_t *) (mcuFirstPageAddr + 4);
 342:Src/main.c    ****       //Callable resetHandler = (Callable) (*(mcuFirstPageAddr + 1) );
 343:Src/main.c    ****      
 344:Src/main.c    ****       resetHandler();
 345:Src/main.c    ****  }
 346:Src/main.c    **** 
 347:Src/main.c    **** /** 
 348:Src/main.c    ****   * Enable DMA controller clock
 349:Src/main.c    ****   */
 350:Src/main.c    **** static void MX_DMA_Init(void) 
 351:Src/main.c    **** {
 352:Src/main.c    ****   /* DMA controller clock enable */
 353:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* DMA interrupt init */
 356:Src/main.c    ****   /* DMA2_Stream3_IRQn interrupt configuration */
 357:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 358:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 359:Src/main.c    ****   /* DMA2_Stream6_IRQn interrupt configuration */
 360:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 5, 0);
 361:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 362:Src/main.c    **** 
 363:Src/main.c    **** }
 364:Src/main.c    **** 
 365:Src/main.c    **** /* SPI1 init function */
 366:Src/main.c    **** void MX_SPI1_Init(void)
 367:Src/main.c    **** {
 368:Src/main.c    **** 
 369:Src/main.c    ****   hspi1.Instance = SPI1;
 370:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 371:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 372:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 373:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 8


 374:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 375:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 376:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 377:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 378:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 379:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 380:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 381:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 382:Src/main.c    ****   {
 383:Src/main.c    ****     Error_Handler();
 384:Src/main.c    ****   }
 385:Src/main.c    **** 
 386:Src/main.c    **** }
 387:Src/main.c    **** 
 388:Src/main.c    **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
 389:Src/main.c    **** {
 390:Src/main.c    **** 
 391:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 392:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 393:Src/main.c    ****   {
 394:Src/main.c    ****   
 395:Src/main.c    ****     /* SPI1 clock enable */
 396:Src/main.c    ****     __HAL_RCC_SPI1_CLK_ENABLE();
 397:Src/main.c    ****   
 398:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 399:Src/main.c    ****     /**SPI1 GPIO Configuration    
 400:Src/main.c    ****     PA5     ------> SPI1_SCK
 401:Src/main.c    ****     PA6     ------> SPI1_MISO
 402:Src/main.c    ****     PA7     ------> SPI1_MOSI 
 403:Src/main.c    ****     */
 404:Src/main.c    ****     GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 405:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 406:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 407:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 408:Src/main.c    **** 
 409:Src/main.c    ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
 410:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 411:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 412:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 413:Src/main.c    **** 
 414:Src/main.c    ****  
 415:Src/main.c    ****   }
 416:Src/main.c    **** }
 417:Src/main.c    **** 
 418:Src/main.c    **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 419:Src/main.c    **** {
 420:Src/main.c    **** 
 421:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 422:Src/main.c    ****   {
 423:Src/main.c    ****  
 424:Src/main.c    ****     /* Peripheral clock disable */
 425:Src/main.c    ****     __HAL_RCC_SPI1_CLK_DISABLE();
 426:Src/main.c    ****   
 427:Src/main.c    ****     /**SPI1 GPIO Configuration    
 428:Src/main.c    ****     PA5     ------> SPI1_SCK
 429:Src/main.c    ****     PA6     ------> SPI1_MISO
 430:Src/main.c    ****     PA7     ------> SPI1_MOSI 
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 9


 431:Src/main.c    ****     */
 432:Src/main.c    ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 433:Src/main.c    **** 
 434:Src/main.c    ****     /* SPI1 interrupt Deinit */
 435:Src/main.c    ****     HAL_NVIC_DisableIRQ(SPI1_IRQn);
 436:Src/main.c    ****   
 437:Src/main.c    ****   }
 438:Src/main.c    **** } 
 439:Src/main.c    **** /**
 440:Src/main.c    ****   * @brief SDIO Initialization Function
 441:Src/main.c    ****   * @param None
 442:Src/main.c    ****   * @retval None
 443:Src/main.c    ****   */
 444:Src/main.c    **** static void MX_SDIO_SD_Init(void)
 445:Src/main.c    **** {
  28              		.loc 1 445 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 446:Src/main.c    **** 
 447:Src/main.c    ****   /* USER CODE BEGIN SDIO_Init 0 */
 448:Src/main.c    **** 
 449:Src/main.c    ****   /* USER CODE END SDIO_Init 0 */
 450:Src/main.c    **** 
 451:Src/main.c    ****   /* USER CODE BEGIN SDIO_Init 1 */
 452:Src/main.c    **** 
 453:Src/main.c    ****   /* USER CODE END SDIO_Init 1 */
 454:Src/main.c    ****   hsd.Instance = SDIO;
  33              		.loc 1 454 3 view .LVU1
  34              		.loc 1 454 16 is_stmt 0 view .LVU2
  35 0000 054B     		ldr	r3, .L2
  36 0002 064A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 455:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
  38              		.loc 1 455 3 is_stmt 1 view .LVU3
  39              		.loc 1 455 22 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
  41 0008 5A60     		str	r2, [r3, #4]
 456:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  42              		.loc 1 456 3 is_stmt 1 view .LVU5
  43              		.loc 1 456 24 is_stmt 0 view .LVU6
  44 000a 9A60     		str	r2, [r3, #8]
 457:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  45              		.loc 1 457 3 is_stmt 1 view .LVU7
  46              		.loc 1 457 27 is_stmt 0 view .LVU8
  47 000c DA60     		str	r2, [r3, #12]
 458:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  48              		.loc 1 458 3 is_stmt 1 view .LVU9
  49              		.loc 1 458 20 is_stmt 0 view .LVU10
  50 000e 1A61     		str	r2, [r3, #16]
 459:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  51              		.loc 1 459 3 is_stmt 1 view .LVU11
  52              		.loc 1 459 32 is_stmt 0 view .LVU12
  53 0010 5A61     		str	r2, [r3, #20]
 460:Src/main.c    ****   hsd.Init.ClockDiv = 3;
  54              		.loc 1 460 3 is_stmt 1 view .LVU13
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 10


  55              		.loc 1 460 21 is_stmt 0 view .LVU14
  56 0012 0322     		movs	r2, #3
  57 0014 9A61     		str	r2, [r3, #24]
 461:Src/main.c    ****   /*
 462:Src/main.c    ****   int hal_error = HAL_SD_Init(&hsd);
 463:Src/main.c    ****   if (hal_error == HAL_OK)
 464:Src/main.c    ****   {
 465:Src/main.c    ****     printf("HAL_SD_Init ok\n\r");
 466:Src/main.c    ****   }
 467:Src/main.c    ****   else
 468:Src/main.c    ****   if (hal_error == HAL_ERROR)
 469:Src/main.c    ****   {
 470:Src/main.c    ****     printf("HAL_SD_Init fail result %d\n\n",hal_error);
 471:Src/main.c    ****   }
 472:Src/main.c    ****   hal_error = HAL_SD_InitCard(&hsd);
 473:Src/main.c    ****  if (hal_error==HAL_OK)
 474:Src/main.c    ****   {
 475:Src/main.c    ****     printf("HAL_SD_InitCard ok\n\r");
 476:Src/main.c    ****   }
 477:Src/main.c    ****   else
 478:Src/main.c    ****   {
 479:Src/main.c    ****     printf("HAL_SD_Init result %d\n\r",hal_error);
 480:Src/main.c    ****   }
 481:Src/main.c    ****  */
 482:Src/main.c    ****    /* USER CODE BEGIN SDIO_Init 2 */
 483:Src/main.c    **** 
 484:Src/main.c    ****   /* USER CODE END SDIO_Init 2 */
 485:Src/main.c    **** 
 486:Src/main.c    **** }
  58              		.loc 1 486 1 view .LVU15
  59 0016 7047     		bx	lr
  60              	.L3:
  61              		.align	2
  62              	.L2:
  63 0018 00000000 		.word	hsd
  64 001c 002C0140 		.word	1073818624
  65              		.cfi_endproc
  66              	.LFE137:
  68              		.section	.text.MX_GPIO_Init,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MX_GPIO_Init:
  76              	.LFB143:
 487:Src/main.c    **** 
 488:Src/main.c    **** /**
 489:Src/main.c    ****   * @brief System Clock Configuration
 490:Src/main.c    ****   * @retval None
 491:Src/main.c    ****   */
 492:Src/main.c    **** void SystemClock_Config(void)
 493:Src/main.c    **** {
 494:Src/main.c    **** 
 495:Src/main.c    ****  RCC_OscInitTypeDef RCC_OscInitStruct;
 496:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 497:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 11


 498:Src/main.c    **** 
 499:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 500:Src/main.c    ****     */
 501:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 502:Src/main.c    **** 
 503:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 504:Src/main.c    **** 
 505:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 506:Src/main.c    ****     */
 507:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 508:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 509:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 510:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 511:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 512:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 513:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 514:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 515:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 516:Src/main.c    ****   {
 517:Src/main.c    ****     Error_Handler();
 518:Src/main.c    ****   }
 519:Src/main.c    **** 
 520:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 521:Src/main.c    ****     */
 522:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 523:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 524:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 525:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 526:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 527:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 528:Src/main.c    **** 
 529:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 530:Src/main.c    ****   {
 531:Src/main.c    ****     Error_Handler();
 532:Src/main.c    ****   }
 533:Src/main.c    ****   
 534:Src/main.c    **** 
 535:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 536:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 537:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 538:Src/main.c    ****   {
 539:Src/main.c    ****     Error_Handler();
 540:Src/main.c    ****   }
 541:Src/main.c    **** 
 542:Src/main.c    ****     /**Configure the Systick interrupt time 
 543:Src/main.c    ****     */
 544:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 545:Src/main.c    **** 
 546:Src/main.c    ****     /**Configure the Systick 
 547:Src/main.c    ****     */
 548:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 549:Src/main.c    **** 
 550:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 551:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);   
 552:Src/main.c    **** }
 553:Src/main.c    **** 
 554:Src/main.c    **** /* RTC init function */
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 12


 555:Src/main.c    **** static void MX_RTC_Init(void)
 556:Src/main.c    **** {
 557:Src/main.c    **** 
 558:Src/main.c    ****  
 559:Src/main.c    ****   hrtc.Instance = RTC;
 560:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 561:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 562:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 563:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 564:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 565:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 566:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 567:Src/main.c    ****   {
 568:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 569:Src/main.c    ****   }
 570:Src/main.c    **** 
 571:Src/main.c    **** }
 572:Src/main.c    **** 
 573:Src/main.c    **** /**
 574:Src/main.c    ****   * @brief USART1 Initialization Function
 575:Src/main.c    ****   * @param None
 576:Src/main.c    ****   * @retval None
 577:Src/main.c    ****   */
 578:Src/main.c    **** void MX_USART1_UART_Init(void)
 579:Src/main.c    **** {
 580:Src/main.c    **** 
 581:Src/main.c    **** 
 582:Src/main.c    ****   huart1.Instance = USART1;
 583:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 584:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 585:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 586:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 587:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 588:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 589:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 590:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 591:Src/main.c    ****   {
 592:Src/main.c    ****     Error_Handler();
 593:Src/main.c    ****   }
 594:Src/main.c    **** 
 595:Src/main.c    **** 
 596:Src/main.c    **** }
 597:Src/main.c    **** 
 598:Src/main.c    **** /**
 599:Src/main.c    ****   * @brief USART3 Initialization Function
 600:Src/main.c    ****   * @param None
 601:Src/main.c    ****   * @retval None
 602:Src/main.c    ****   */
 603:Src/main.c    **** void MX_USART3_UART_Init(void)
 604:Src/main.c    **** {
 605:Src/main.c    **** 
 606:Src/main.c    **** 
 607:Src/main.c    ****   huart3.Instance = USART3;
 608:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 609:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 610:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 611:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 13


 612:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 613:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 614:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 615:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 616:Src/main.c    ****   {
 617:Src/main.c    ****     Error_Handler();
 618:Src/main.c    ****   }
 619:Src/main.c    **** 
 620:Src/main.c    **** 
 621:Src/main.c    **** }
 622:Src/main.c    **** 
 623:Src/main.c    **** /**
 624:Src/main.c    ****   * @brief USART6 Initialization Function
 625:Src/main.c    ****   * @param None
 626:Src/main.c    ****   * @retval None
 627:Src/main.c    ****   */
 628:Src/main.c    ****  void MX_USART6_UART_Init(void)
 629:Src/main.c    **** {
 630:Src/main.c    **** 
 631:Src/main.c    **** 
 632:Src/main.c    ****   huart6.Instance = USART6;
 633:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 634:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 635:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 636:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 637:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 638:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 639:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 640:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 641:Src/main.c    ****   {
 642:Src/main.c    ****     Error_Handler();
 643:Src/main.c    ****   }
 644:Src/main.c    **** 
 645:Src/main.c    **** 
 646:Src/main.c    **** }
 647:Src/main.c    **** /** Configure pins as 
 648:Src/main.c    ****         * Analog 
 649:Src/main.c    ****         * Input 
 650:Src/main.c    ****         * Output
 651:Src/main.c    ****         * EVENT_OUT
 652:Src/main.c    ****         * EXTI
 653:Src/main.c    **** */
 654:Src/main.c    **** static void MX_GPIO_Init(void)
 655:Src/main.c    **** {
  77              		.loc 1 655 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 48
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 24
  84              		.cfi_offset 4, -24
  85              		.cfi_offset 5, -20
  86              		.cfi_offset 6, -16
  87              		.cfi_offset 7, -12
  88              		.cfi_offset 8, -8
  89              		.cfi_offset 14, -4
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 14


  90 0004 8CB0     		sub	sp, sp, #48
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 72
 656:Src/main.c    **** 
 657:Src/main.c    ****   /* GPIO Ports Clock Enable */
 658:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  93              		.loc 1 658 3 view .LVU17
  94              	.LBB10:
  95              		.loc 1 658 3 view .LVU18
  96 0006 0024     		movs	r4, #0
  97 0008 0194     		str	r4, [sp, #4]
  98              		.loc 1 658 3 view .LVU19
  99 000a 2E4B     		ldr	r3, .L6
 100 000c 1A6B     		ldr	r2, [r3, #48]
 101 000e 42F00402 		orr	r2, r2, #4
 102 0012 1A63     		str	r2, [r3, #48]
 103              		.loc 1 658 3 view .LVU20
 104 0014 1A6B     		ldr	r2, [r3, #48]
 105 0016 02F00402 		and	r2, r2, #4
 106 001a 0192     		str	r2, [sp, #4]
 107              		.loc 1 658 3 view .LVU21
 108 001c 019A     		ldr	r2, [sp, #4]
 109              	.LBE10:
 659:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 110              		.loc 1 659 3 view .LVU22
 111              	.LBB11:
 112              		.loc 1 659 3 view .LVU23
 113 001e 0294     		str	r4, [sp, #8]
 114              		.loc 1 659 3 view .LVU24
 115 0020 1A6B     		ldr	r2, [r3, #48]
 116 0022 42F08002 		orr	r2, r2, #128
 117 0026 1A63     		str	r2, [r3, #48]
 118              		.loc 1 659 3 view .LVU25
 119 0028 1A6B     		ldr	r2, [r3, #48]
 120 002a 02F08002 		and	r2, r2, #128
 121 002e 0292     		str	r2, [sp, #8]
 122              		.loc 1 659 3 view .LVU26
 123 0030 029A     		ldr	r2, [sp, #8]
 124              	.LBE11:
 660:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 125              		.loc 1 660 3 view .LVU27
 126              	.LBB12:
 127              		.loc 1 660 3 view .LVU28
 128 0032 0394     		str	r4, [sp, #12]
 129              		.loc 1 660 3 view .LVU29
 130 0034 1A6B     		ldr	r2, [r3, #48]
 131 0036 42F01002 		orr	r2, r2, #16
 132 003a 1A63     		str	r2, [r3, #48]
 133              		.loc 1 660 3 view .LVU30
 134 003c 1A6B     		ldr	r2, [r3, #48]
 135 003e 02F01002 		and	r2, r2, #16
 136 0042 0392     		str	r2, [sp, #12]
 137              		.loc 1 660 3 view .LVU31
 138 0044 039A     		ldr	r2, [sp, #12]
 139              	.LBE12:
 661:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 140              		.loc 1 661 3 view .LVU32
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 15


 141              	.LBB13:
 142              		.loc 1 661 3 view .LVU33
 143 0046 0494     		str	r4, [sp, #16]
 144              		.loc 1 661 3 view .LVU34
 145 0048 1A6B     		ldr	r2, [r3, #48]
 146 004a 42F00802 		orr	r2, r2, #8
 147 004e 1A63     		str	r2, [r3, #48]
 148              		.loc 1 661 3 view .LVU35
 149 0050 1A6B     		ldr	r2, [r3, #48]
 150 0052 02F00802 		and	r2, r2, #8
 151 0056 0492     		str	r2, [sp, #16]
 152              		.loc 1 661 3 view .LVU36
 153 0058 049A     		ldr	r2, [sp, #16]
 154              	.LBE13:
 662:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 155              		.loc 1 662 3 view .LVU37
 156              	.LBB14:
 157              		.loc 1 662 3 view .LVU38
 158 005a 0594     		str	r4, [sp, #20]
 159              		.loc 1 662 3 view .LVU39
 160 005c 1A6B     		ldr	r2, [r3, #48]
 161 005e 42F00102 		orr	r2, r2, #1
 162 0062 1A63     		str	r2, [r3, #48]
 163              		.loc 1 662 3 view .LVU40
 164 0064 1A6B     		ldr	r2, [r3, #48]
 165 0066 02F00102 		and	r2, r2, #1
 166 006a 0592     		str	r2, [sp, #20]
 167              		.loc 1 662 3 view .LVU41
 168 006c 059A     		ldr	r2, [sp, #20]
 169              	.LBE14:
 663:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 170              		.loc 1 663 3 view .LVU42
 171              	.LBB15:
 172              		.loc 1 663 3 view .LVU43
 173 006e 0694     		str	r4, [sp, #24]
 174              		.loc 1 663 3 view .LVU44
 175 0070 1A6B     		ldr	r2, [r3, #48]
 176 0072 42F00202 		orr	r2, r2, #2
 177 0076 1A63     		str	r2, [r3, #48]
 178              		.loc 1 663 3 view .LVU45
 179 0078 1B6B     		ldr	r3, [r3, #48]
 180 007a 03F00203 		and	r3, r3, #2
 181 007e 0693     		str	r3, [sp, #24]
 182              		.loc 1 663 3 view .LVU46
 183 0080 069B     		ldr	r3, [sp, #24]
 184              	.LBE15:
 664:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 185              		.loc 1 664 3 view .LVU47
 186              		.loc 1 664 20 is_stmt 0 view .LVU48
 187 0082 0B94     		str	r4, [sp, #44]
 665:Src/main.c    ****    GPIO_InitStruct.Pin = GPIO_PIN_1;
 188              		.loc 1 665 4 is_stmt 1 view .LVU49
 189              		.loc 1 665 24 is_stmt 0 view .LVU50
 190 0084 0225     		movs	r5, #2
 191 0086 0795     		str	r5, [sp, #28]
 666:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 192              		.loc 1 666 5 is_stmt 1 view .LVU51
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 16


 193              		.loc 1 666 26 is_stmt 0 view .LVU52
 194 0088 0895     		str	r5, [sp, #32]
 667:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 195              		.loc 1 667 5 is_stmt 1 view .LVU53
 196              		.loc 1 667 26 is_stmt 0 view .LVU54
 197 008a 4FF00108 		mov	r8, #1
 198 008e CDF82480 		str	r8, [sp, #36]
 668:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 199              		.loc 1 668 5 is_stmt 1 view .LVU55
 200              		.loc 1 668 27 is_stmt 0 view .LVU56
 201 0092 0326     		movs	r6, #3
 202 0094 0A96     		str	r6, [sp, #40]
 669:Src/main.c    **** HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 203              		.loc 1 669 1 is_stmt 1 view .LVU57
 204 0096 0C4F     		ldr	r7, .L6+4
 205 0098 07A9     		add	r1, sp, #28
 206 009a 3846     		mov	r0, r7
 207 009c FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL0:
 670:Src/main.c    **** HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_SET); 
 209              		.loc 1 670 1 view .LVU58
 210 00a0 4246     		mov	r2, r8
 211 00a2 2946     		mov	r1, r5
 212 00a4 3846     		mov	r0, r7
 213 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL1:
 671:Src/main.c    **** 
 672:Src/main.c    ****  GPIO_InitStruct.Pin = GPIO_PIN_3;
 215              		.loc 1 672 2 view .LVU59
 216              		.loc 1 672 22 is_stmt 0 view .LVU60
 217 00aa 0823     		movs	r3, #8
 218 00ac 0793     		str	r3, [sp, #28]
 673:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 219              		.loc 1 673 5 is_stmt 1 view .LVU61
 220              		.loc 1 673 26 is_stmt 0 view .LVU62
 221 00ae 0894     		str	r4, [sp, #32]
 674:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 222              		.loc 1 674 5 is_stmt 1 view .LVU63
 223              		.loc 1 674 26 is_stmt 0 view .LVU64
 224 00b0 0994     		str	r4, [sp, #36]
 675:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 225              		.loc 1 675 5 is_stmt 1 view .LVU65
 226              		.loc 1 675 27 is_stmt 0 view .LVU66
 227 00b2 0A96     		str	r6, [sp, #40]
 676:Src/main.c    ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 228              		.loc 1 676 5 is_stmt 1 view .LVU67
 229 00b4 07A9     		add	r1, sp, #28
 230 00b6 0548     		ldr	r0, .L6+8
 231 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 232              	.LVL2:
 677:Src/main.c    ****   /* USER CODE BEGIN SDIO_MspInit 1 */
 678:Src/main.c    ****   
 679:Src/main.c    **** }
 233              		.loc 1 679 1 is_stmt 0 view .LVU68
 234 00bc 0CB0     		add	sp, sp, #48
 235              	.LCFI2:
 236              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 17


 237              		@ sp needed
 238 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 239              	.L7:
 240 00c2 00BF     		.align	2
 241              	.L6:
 242 00c4 00380240 		.word	1073887232
 243 00c8 00000240 		.word	1073872896
 244 00cc 000C0240 		.word	1073875968
 245              		.cfi_endproc
 246              	.LFE143:
 248              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 249              		.align	1
 250              		.global	NVIC_SetVectorTable
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv4-sp-d16
 256              	NVIC_SetVectorTable:
 257              	.LVL3:
 258              	.LFB130:
 281:Src/main.c    ****   /* Check the parameters */
 259              		.loc 1 281 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 283:Src/main.c    ****   assert_param(IS_NVIC_OFFSET(Offset));  
 264              		.loc 1 283 3 view .LVU70
 284:Src/main.c    ****    
 265              		.loc 1 284 3 view .LVU71
 286:Src/main.c    **** }
 266              		.loc 1 286 3 view .LVU72
 286:Src/main.c    **** }
 267              		.loc 1 286 38 is_stmt 0 view .LVU73
 268 0000 21F06041 		bic	r1, r1, #-536870912
 269              	.LVL4:
 286:Src/main.c    **** }
 270              		.loc 1 286 38 view .LVU74
 271 0004 21F07F01 		bic	r1, r1, #127
 286:Src/main.c    **** }
 272              		.loc 1 286 28 view .LVU75
 273 0008 0143     		orrs	r1, r1, r0
 286:Src/main.c    **** }
 274              		.loc 1 286 13 view .LVU76
 275 000a 014B     		ldr	r3, .L9
 276 000c 9960     		str	r1, [r3, #8]
 287:Src/main.c    **** 
 277              		.loc 1 287 1 view .LVU77
 278 000e 7047     		bx	lr
 279              	.L10:
 280              		.align	2
 281              	.L9:
 282 0010 00ED00E0 		.word	-536810240
 283              		.cfi_endproc
 284              	.LFE130:
 286              		.section	.text.Bootloader_JumpToApplication,"ax",%progbits
 287              		.align	1
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 18


 288              		.global	Bootloader_JumpToApplication
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	Bootloader_JumpToApplication:
 295              	.LFB131:
 295:Src/main.c    ****     uint32_t  JumpAddress = *(__IO uint32_t*)(APP_ADDRESS + 4);
 296              		.loc 1 295 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 B0B5     		push	{r4, r5, r7, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 16
 303              		.cfi_offset 4, -16
 304              		.cfi_offset 5, -12
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 00AF     		add	r7, sp, #0
 308              	.LCFI4:
 309              		.cfi_def_cfa_register 7
 296:Src/main.c    ****     pFunction Jump        = (pFunction)JumpAddress;
 310              		.loc 1 296 5 view .LVU79
 296:Src/main.c    ****     pFunction Jump        = (pFunction)JumpAddress;
 311              		.loc 1 296 15 is_stmt 0 view .LVU80
 312 0004 0D4B     		ldr	r3, .L13
 313 0006 1C68     		ldr	r4, [r3]
 314              	.LVL5:
 297:Src/main.c    **** 
 315              		.loc 1 297 5 is_stmt 1 view .LVU81
 299:Src/main.c    ****     HAL_DeInit();
 316              		.loc 1 299 5 view .LVU82
 317 0008 FFF7FEFF 		bl	HAL_RCC_DeInit
 318              	.LVL6:
 300:Src/main.c    **** 
 319              		.loc 1 300 5 view .LVU83
 320 000c FFF7FEFF 		bl	HAL_DeInit
 321              	.LVL7:
 302:Src/main.c    ****     SysTick->LOAD = 0;
 322              		.loc 1 302 5 view .LVU84
 302:Src/main.c    ****     SysTick->LOAD = 0;
 323              		.loc 1 302 19 is_stmt 0 view .LVU85
 324 0010 0B4B     		ldr	r3, .L13+4
 325 0012 0022     		movs	r2, #0
 326 0014 1A60     		str	r2, [r3]
 303:Src/main.c    ****     SysTick->VAL  = 0;
 327              		.loc 1 303 5 is_stmt 1 view .LVU86
 303:Src/main.c    ****     SysTick->VAL  = 0;
 328              		.loc 1 303 19 is_stmt 0 view .LVU87
 329 0016 5A60     		str	r2, [r3, #4]
 304:Src/main.c    ****   uint32_t address =  *(uint32_t *)(APP_ADDRESS);
 330              		.loc 1 304 5 is_stmt 1 view .LVU88
 304:Src/main.c    ****   uint32_t address =  *(uint32_t *)(APP_ADDRESS);
 331              		.loc 1 304 19 is_stmt 0 view .LVU89
 332 0018 9A60     		str	r2, [r3, #8]
 305:Src/main.c    ****    uint32_t val = * (uint32_t *) address;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 19


 333              		.loc 1 305 3 is_stmt 1 view .LVU90
 305:Src/main.c    ****    uint32_t val = * (uint32_t *) address;
 334              		.loc 1 305 12 is_stmt 0 view .LVU91
 335 001a 0A4B     		ldr	r3, .L13+8
 336 001c 1B68     		ldr	r3, [r3]
 337              	.LVL8:
 306:Src/main.c    ****    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0xC000);
 338              		.loc 1 306 4 is_stmt 1 view .LVU92
 306:Src/main.c    ****    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0xC000);
 339              		.loc 1 306 13 is_stmt 0 view .LVU93
 340 001e 1D68     		ldr	r5, [r3]
 341              	.LVL9:
 307:Src/main.c    ****    printf("about to jump");
 342              		.loc 1 307 4 is_stmt 1 view .LVU94
 343 0020 4FF44041 		mov	r1, #49152
 344 0024 4FF00060 		mov	r0, #134217728
 345 0028 FFF7FEFF 		bl	NVIC_SetVectorTable
 346              	.LVL10:
 308:Src/main.c    **** //#if(SET_VECTOR_TABLE)
 347              		.loc 1 308 4 view .LVU95
 348 002c 0648     		ldr	r0, .L13+12
 349 002e FFF7FEFF 		bl	printf
 350              	.LVL11:
 315:Src/main.c    ****     __asm volatile ("cpsid i");
 351              		.loc 1 315 5 view .LVU96
 352              	.LBB16:
 353              	.LBI16:
 354              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 20


  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 21


  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 22


 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 355              		.loc 2 188 57 view .LVU97
 356              	.LBB17:
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 357              		.loc 2 190 3 view .LVU98
 358              		.syntax unified
 359              	@ 190 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 360 0032 85F30888 		MSR msp, r5
 361              	
 362              	@ 0 "" 2
 363              	.LVL12:
 364              		.loc 2 190 3 is_stmt 0 view .LVU99
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 23


 365              		.thumb
 366              		.syntax unified
 367              	.LBE17:
 368              	.LBE16:
 316:Src/main.c    ****     Jump();
 369              		.loc 1 316 5 is_stmt 1 view .LVU100
 370              		.syntax unified
 371              	@ 316 "Src/main.c" 1
 372 0036 72B6     		cpsid i
 373              	@ 0 "" 2
 317:Src/main.c    **** }
 374              		.loc 1 317 5 view .LVU101
 375              		.thumb
 376              		.syntax unified
 377 0038 A047     		blx	r4
 378              	.LVL13:
 318:Src/main.c    **** 
 379              		.loc 1 318 1 is_stmt 0 view .LVU102
 380 003a B0BD     		pop	{r4, r5, r7, pc}
 381              	.LVL14:
 382              	.L14:
 318:Src/main.c    **** 
 383              		.loc 1 318 1 view .LVU103
 384              		.align	2
 385              	.L13:
 386 003c 04C00008 		.word	134266884
 387 0040 10E000E0 		.word	-536813552
 388 0044 00C00008 		.word	134266880
 389 0048 00000000 		.word	.LC0
 390              		.cfi_endproc
 391              	.LFE131:
 393              		.section	.text.Jump_To_App,"ax",%progbits
 394              		.align	1
 395              		.global	Jump_To_App
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	Jump_To_App:
 402              	.LFB132:
 321:Src/main.c    ****      // f_mount(NULL, SPISD_Path, 1);
 403              		.loc 1 321 2 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407 0000 98B5     		push	{r3, r4, r7, lr}
 408              	.LCFI5:
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 3, -16
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 7, -8
 413              		.cfi_offset 14, -4
 414 0002 00AF     		add	r7, sp, #0
 415              	.LCFI6:
 416              		.cfi_def_cfa_register 7
 325:Src/main.c    ****       printf("jump @ %x",mcuFirstPageAddr);
 417              		.loc 1 325 7 view .LVU105
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 24


 418 0004 4FF44041 		mov	r1, #49152
 419 0008 1848     		ldr	r0, .L17
 420 000a FFF7FEFF 		bl	printf
 421              	.LVL15:
 326:Src/main.c    ****       HAL_Delay(500);
 422              		.loc 1 326 7 view .LVU106
 423 000e 184C     		ldr	r4, .L17+4
 424 0010 2168     		ldr	r1, [r4]
 425 0012 1848     		ldr	r0, .L17+8
 426 0014 FFF7FEFF 		bl	printf
 427              	.LVL16:
 327:Src/main.c    ****       __HAL_RCC_GPIOA_CLK_DISABLE();
 428              		.loc 1 327 7 view .LVU107
 429 0018 4FF4FA70 		mov	r0, #500
 430 001c FFF7FEFF 		bl	HAL_Delay
 431              	.LVL17:
 328:Src/main.c    ****       __HAL_RCC_GPIOB_CLK_DISABLE();
 432              		.loc 1 328 7 view .LVU108
 433 0020 154B     		ldr	r3, .L17+12
 434 0022 1A6B     		ldr	r2, [r3, #48]
 435 0024 22F00102 		bic	r2, r2, #1
 436 0028 1A63     		str	r2, [r3, #48]
 329:Src/main.c    ****       __HAL_RCC_GPIOC_CLK_DISABLE();
 437              		.loc 1 329 7 view .LVU109
 438 002a 1A6B     		ldr	r2, [r3, #48]
 439 002c 22F00202 		bic	r2, r2, #2
 440 0030 1A63     		str	r2, [r3, #48]
 330:Src/main.c    ****       __HAL_RCC_GPIOD_CLK_DISABLE();
 441              		.loc 1 330 7 view .LVU110
 442 0032 1A6B     		ldr	r2, [r3, #48]
 443 0034 22F00402 		bic	r2, r2, #4
 444 0038 1A63     		str	r2, [r3, #48]
 331:Src/main.c    ****       __HAL_RCC_GPIOE_CLK_DISABLE();
 445              		.loc 1 331 7 view .LVU111
 446 003a 1A6B     		ldr	r2, [r3, #48]
 447 003c 22F00802 		bic	r2, r2, #8
 448 0040 1A63     		str	r2, [r3, #48]
 332:Src/main.c    ****     HAL_SD_MspDeInit(&hsd);
 449              		.loc 1 332 7 view .LVU112
 450 0042 1A6B     		ldr	r2, [r3, #48]
 451 0044 22F01002 		bic	r2, r2, #16
 452 0048 1A63     		str	r2, [r3, #48]
 333:Src/main.c    ****      
 453              		.loc 1 333 5 view .LVU113
 454 004a 0C48     		ldr	r0, .L17+16
 455 004c FFF7FEFF 		bl	HAL_SD_MspDeInit
 456              	.LVL18:
 337:Src/main.c    ****       moveVectorTable(MAIN_PR_OFFSET);
 457              		.loc 1 337 7 view .LVU114
 337:Src/main.c    ****       moveVectorTable(MAIN_PR_OFFSET);
 458              		.loc 1 337 21 is_stmt 0 view .LVU115
 459 0050 0B4B     		ldr	r3, .L17+20
 460 0052 0022     		movs	r2, #0
 461 0054 1A60     		str	r2, [r3]
 338:Src/main.c    ****        __set_MSP(*mcuFirstPageAddr);
 462              		.loc 1 338 7 is_stmt 1 view .LVU116
 463              	.LVL19:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 25


 464              	.LBB18:
 465              	.LBI18:
 236:Src/main.c    **** {
 466              		.loc 1 236 13 view .LVU117
 467              	.LBB19:
 239:Src/main.c    **** }
 468              		.loc 1 239 5 view .LVU118
 239:Src/main.c    **** }
 469              		.loc 1 239 15 is_stmt 0 view .LVU119
 470 0056 03F54F63 		add	r3, r3, #3312
 471 005a 0A4A     		ldr	r2, .L17+24
 472 005c 9A60     		str	r2, [r3, #8]
 473              	.LVL20:
 239:Src/main.c    **** }
 474              		.loc 1 239 15 view .LVU120
 475              	.LBE19:
 476              	.LBE18:
 339:Src/main.c    ****       // booting really
 477              		.loc 1 339 8 is_stmt 1 view .LVU121
 478 005e 2368     		ldr	r3, [r4]
 479 0060 1A68     		ldr	r2, [r3]
 480              	.LVL21:
 481              	.LBB20:
 482              	.LBI20:
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 483              		.loc 2 188 57 view .LVU122
 484              	.LBB21:
 485              		.loc 2 190 3 view .LVU123
 486              		.syntax unified
 487              	@ 190 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 488 0062 82F30888 		MSR msp, r2
 489              	
 490              	@ 0 "" 2
 491              	.LVL22:
 492              		.loc 2 190 3 is_stmt 0 view .LVU124
 493              		.thumb
 494              		.syntax unified
 495              	.LBE21:
 496              	.LBE20:
 341:Src/main.c    ****       //Callable resetHandler = (Callable) (*(mcuFirstPageAddr + 1) );
 497              		.loc 1 341 7 is_stmt 1 view .LVU125
 341:Src/main.c    ****       //Callable resetHandler = (Callable) (*(mcuFirstPageAddr + 1) );
 498              		.loc 1 341 44 is_stmt 0 view .LVU126
 499 0066 1B69     		ldr	r3, [r3, #16]
 500              	.LVL23:
 344:Src/main.c    ****  }
 501              		.loc 1 344 7 is_stmt 1 view .LVU127
 502 0068 9847     		blx	r3
 503              	.LVL24:
 345:Src/main.c    **** 
 504              		.loc 1 345 2 is_stmt 0 view .LVU128
 505 006a 98BD     		pop	{r3, r4, r7, pc}
 506              	.L18:
 507              		.align	2
 508              	.L17:
 509 006c 00000000 		.word	.LC1
 510 0070 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 26


 511 0074 0C000000 		.word	.LC2
 512 0078 00380240 		.word	1073887232
 513 007c 00000000 		.word	hsd
 514 0080 10E000E0 		.word	-536813552
 515 0084 00C00008 		.word	134266880
 516              		.cfi_endproc
 517              	.LFE132:
 519              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 520              		.align	1
 521              		.global	HAL_SPI_MspInit
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv4-sp-d16
 527              	HAL_SPI_MspInit:
 528              	.LVL25:
 529              	.LFB135:
 389:Src/main.c    **** 
 530              		.loc 1 389 1 is_stmt 1 view -0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 32
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 389:Src/main.c    **** 
 534              		.loc 1 389 1 is_stmt 0 view .LVU130
 535 0000 30B5     		push	{r4, r5, lr}
 536              	.LCFI7:
 537              		.cfi_def_cfa_offset 12
 538              		.cfi_offset 4, -12
 539              		.cfi_offset 5, -8
 540              		.cfi_offset 14, -4
 541 0002 89B0     		sub	sp, sp, #36
 542              	.LCFI8:
 543              		.cfi_def_cfa_offset 48
 391:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 544              		.loc 1 391 3 is_stmt 1 view .LVU131
 391:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 545              		.loc 1 391 20 is_stmt 0 view .LVU132
 546 0004 0023     		movs	r3, #0
 547 0006 0393     		str	r3, [sp, #12]
 548 0008 0493     		str	r3, [sp, #16]
 549 000a 0593     		str	r3, [sp, #20]
 550 000c 0693     		str	r3, [sp, #24]
 551 000e 0793     		str	r3, [sp, #28]
 392:Src/main.c    ****   {
 552              		.loc 1 392 3 is_stmt 1 view .LVU133
 392:Src/main.c    ****   {
 553              		.loc 1 392 15 is_stmt 0 view .LVU134
 554 0010 0268     		ldr	r2, [r0]
 392:Src/main.c    ****   {
 555              		.loc 1 392 5 view .LVU135
 556 0012 174B     		ldr	r3, .L23
 557 0014 9A42     		cmp	r2, r3
 558 0016 01D0     		beq	.L22
 559              	.LVL26:
 560              	.L19:
 416:Src/main.c    **** 
 561              		.loc 1 416 1 view .LVU136
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 27


 562 0018 09B0     		add	sp, sp, #36
 563              	.LCFI9:
 564              		.cfi_remember_state
 565              		.cfi_def_cfa_offset 12
 566              		@ sp needed
 567 001a 30BD     		pop	{r4, r5, pc}
 568              	.LVL27:
 569              	.L22:
 570              	.LCFI10:
 571              		.cfi_restore_state
 396:Src/main.c    ****   
 572              		.loc 1 396 5 is_stmt 1 view .LVU137
 573              	.LBB22:
 396:Src/main.c    ****   
 574              		.loc 1 396 5 view .LVU138
 575 001c 0024     		movs	r4, #0
 576 001e 0194     		str	r4, [sp, #4]
 396:Src/main.c    ****   
 577              		.loc 1 396 5 view .LVU139
 578 0020 03F58433 		add	r3, r3, #67584
 579 0024 5A6C     		ldr	r2, [r3, #68]
 580 0026 42F48052 		orr	r2, r2, #4096
 581 002a 5A64     		str	r2, [r3, #68]
 396:Src/main.c    ****   
 582              		.loc 1 396 5 view .LVU140
 583 002c 5A6C     		ldr	r2, [r3, #68]
 584 002e 02F48052 		and	r2, r2, #4096
 585 0032 0192     		str	r2, [sp, #4]
 396:Src/main.c    ****   
 586              		.loc 1 396 5 view .LVU141
 587 0034 019A     		ldr	r2, [sp, #4]
 588              	.LBE22:
 398:Src/main.c    ****     /**SPI1 GPIO Configuration    
 589              		.loc 1 398 5 view .LVU142
 590              	.LBB23:
 398:Src/main.c    ****     /**SPI1 GPIO Configuration    
 591              		.loc 1 398 5 view .LVU143
 592 0036 0294     		str	r4, [sp, #8]
 398:Src/main.c    ****     /**SPI1 GPIO Configuration    
 593              		.loc 1 398 5 view .LVU144
 594 0038 1A6B     		ldr	r2, [r3, #48]
 595 003a 42F00102 		orr	r2, r2, #1
 596 003e 1A63     		str	r2, [r3, #48]
 398:Src/main.c    ****     /**SPI1 GPIO Configuration    
 597              		.loc 1 398 5 view .LVU145
 598 0040 1B6B     		ldr	r3, [r3, #48]
 599 0042 03F00103 		and	r3, r3, #1
 600 0046 0293     		str	r3, [sp, #8]
 398:Src/main.c    ****     /**SPI1 GPIO Configuration    
 601              		.loc 1 398 5 view .LVU146
 602 0048 029B     		ldr	r3, [sp, #8]
 603              	.LBE23:
 404:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 604              		.loc 1 404 5 view .LVU147
 404:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 605              		.loc 1 404 25 is_stmt 0 view .LVU148
 606 004a A023     		movs	r3, #160
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 28


 607 004c 0393     		str	r3, [sp, #12]
 405:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 608              		.loc 1 405 5 is_stmt 1 view .LVU149
 405:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 609              		.loc 1 405 26 is_stmt 0 view .LVU150
 610 004e 0223     		movs	r3, #2
 611 0050 0493     		str	r3, [sp, #16]
 406:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 612              		.loc 1 406 5 is_stmt 1 view .LVU151
 406:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 613              		.loc 1 406 27 is_stmt 0 view .LVU152
 614 0052 0693     		str	r3, [sp, #24]
 407:Src/main.c    **** 
 615              		.loc 1 407 5 is_stmt 1 view .LVU153
 616 0054 074D     		ldr	r5, .L23+4
 617 0056 03A9     		add	r1, sp, #12
 618 0058 2846     		mov	r0, r5
 619              	.LVL28:
 407:Src/main.c    **** 
 620              		.loc 1 407 5 is_stmt 0 view .LVU154
 621 005a FFF7FEFF 		bl	HAL_GPIO_Init
 622              	.LVL29:
 409:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 623              		.loc 1 409 5 is_stmt 1 view .LVU155
 409:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 624              		.loc 1 409 25 is_stmt 0 view .LVU156
 625 005e 4023     		movs	r3, #64
 626 0060 0393     		str	r3, [sp, #12]
 410:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 627              		.loc 1 410 5 is_stmt 1 view .LVU157
 410:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 628              		.loc 1 410 26 is_stmt 0 view .LVU158
 629 0062 0494     		str	r4, [sp, #16]
 411:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 630              		.loc 1 411 5 is_stmt 1 view .LVU159
 411:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 631              		.loc 1 411 26 is_stmt 0 view .LVU160
 632 0064 0594     		str	r4, [sp, #20]
 412:Src/main.c    **** 
 633              		.loc 1 412 5 is_stmt 1 view .LVU161
 634 0066 03A9     		add	r1, sp, #12
 635 0068 2846     		mov	r0, r5
 636 006a FFF7FEFF 		bl	HAL_GPIO_Init
 637              	.LVL30:
 416:Src/main.c    **** 
 638              		.loc 1 416 1 is_stmt 0 view .LVU162
 639 006e D3E7     		b	.L19
 640              	.L24:
 641              		.align	2
 642              	.L23:
 643 0070 00300140 		.word	1073819648
 644 0074 00000240 		.word	1073872896
 645              		.cfi_endproc
 646              	.LFE135:
 648              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 649              		.align	1
 650              		.global	HAL_SPI_MspDeInit
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 29


 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	HAL_SPI_MspDeInit:
 657              	.LVL31:
 658              	.LFB136:
 419:Src/main.c    **** 
 659              		.loc 1 419 1 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 419:Src/main.c    **** 
 663              		.loc 1 419 1 is_stmt 0 view .LVU164
 664 0000 08B5     		push	{r3, lr}
 665              	.LCFI11:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 3, -8
 668              		.cfi_offset 14, -4
 421:Src/main.c    ****   {
 669              		.loc 1 421 3 is_stmt 1 view .LVU165
 421:Src/main.c    ****   {
 670              		.loc 1 421 15 is_stmt 0 view .LVU166
 671 0002 0268     		ldr	r2, [r0]
 421:Src/main.c    ****   {
 672              		.loc 1 421 5 view .LVU167
 673 0004 084B     		ldr	r3, .L29
 674 0006 9A42     		cmp	r2, r3
 675 0008 00D0     		beq	.L28
 676              	.LVL32:
 677              	.L25:
 438:Src/main.c    **** /**
 678              		.loc 1 438 1 view .LVU168
 679 000a 08BD     		pop	{r3, pc}
 680              	.LVL33:
 681              	.L28:
 425:Src/main.c    ****   
 682              		.loc 1 425 5 is_stmt 1 view .LVU169
 683 000c 074A     		ldr	r2, .L29+4
 684 000e 536C     		ldr	r3, [r2, #68]
 685 0010 23F48053 		bic	r3, r3, #4096
 686 0014 5364     		str	r3, [r2, #68]
 432:Src/main.c    **** 
 687              		.loc 1 432 5 view .LVU170
 688 0016 E021     		movs	r1, #224
 689 0018 0548     		ldr	r0, .L29+8
 690              	.LVL34:
 432:Src/main.c    **** 
 691              		.loc 1 432 5 is_stmt 0 view .LVU171
 692 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 693              	.LVL35:
 435:Src/main.c    ****   
 694              		.loc 1 435 5 is_stmt 1 view .LVU172
 695 001e 2320     		movs	r0, #35
 696 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 697              	.LVL36:
 438:Src/main.c    **** /**
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 30


 698              		.loc 1 438 1 is_stmt 0 view .LVU173
 699 0024 F1E7     		b	.L25
 700              	.L30:
 701 0026 00BF     		.align	2
 702              	.L29:
 703 0028 00300140 		.word	1073819648
 704 002c 00380240 		.word	1073887232
 705 0030 00000240 		.word	1073872896
 706              		.cfi_endproc
 707              	.LFE136:
 709              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_TIM_PeriodElapsedCallback
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	HAL_TIM_PeriodElapsedCallback:
 718              	.LVL37:
 719              	.LFB146:
 680:Src/main.c    **** 
 681:Src/main.c    **** 
 682:Src/main.c    **** static void MX_GPIO_Deinit(void)
 683:Src/main.c    **** {
 684:Src/main.c    **** 
 685:Src/main.c    ****   /* GPIO Ports Clock Enable */
 686:Src/main.c    ****    __HAL_RCC_GPIOA_CLK_DISABLE();
 687:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_DISABLE();
 688:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_DISABLE();
 689:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_DISABLE();
 690:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_DISABLE();
 691:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_DISABLE();
 692:Src/main.c    ****  
 693:Src/main.c    **** }
 694:Src/main.c    **** /* FSMC initialization function */
 695:Src/main.c    **** static void MX_FSMC_Init(void)
 696:Src/main.c    **** {
 697:Src/main.c    ****   FSMC_NORSRAM_TimingTypeDef Timing;
 698:Src/main.c    **** 
 699:Src/main.c    ****   /** Perform the SRAM1 memory initialization sequence
 700:Src/main.c    ****   */
 701:Src/main.c    ****   hsram1.Instance = FSMC_NORSRAM_DEVICE;
 702:Src/main.c    ****   hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 703:Src/main.c    ****   /* hsram1.Init */
 704:Src/main.c    ****   hsram1.Init.NSBank = FSMC_NORSRAM_BANK1;
 705:Src/main.c    ****   hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 706:Src/main.c    ****   hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 707:Src/main.c    ****   hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 708:Src/main.c    ****   hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 709:Src/main.c    ****   hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 710:Src/main.c    ****   hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 711:Src/main.c    ****   hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 712:Src/main.c    ****   hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 713:Src/main.c    ****   hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 714:Src/main.c    ****   hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 715:Src/main.c    ****   hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 716:Src/main.c    ****   hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 31


 717:Src/main.c    ****   hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 718:Src/main.c    ****   /* Timing */
 719:Src/main.c    ****   Timing.AddressSetupTime = 5;
 720:Src/main.c    ****   Timing.AddressHoldTime = 15;
 721:Src/main.c    ****   Timing.DataSetupTime = 8;
 722:Src/main.c    ****   Timing.BusTurnAroundDuration = 1;
 723:Src/main.c    ****   Timing.CLKDivision = 16;
 724:Src/main.c    ****   Timing.DataLatency = 17;
 725:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
 726:Src/main.c    ****   /* ExtTiming */
 727:Src/main.c    **** 
 728:Src/main.c    ****   if (HAL_SRAM_Init(&hsram1, &Timing, NULL) != HAL_OK)
 729:Src/main.c    ****   {
 730:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 731:Src/main.c    ****   }
 732:Src/main.c    **** 
 733:Src/main.c    **** }
 734:Src/main.c    **** 
 735:Src/main.c    **** /* USER CODE BEGIN 4 */
 736:Src/main.c    **** 
 737:Src/main.c    **** /* USER CODE END 4 */
 738:Src/main.c    **** 
 739:Src/main.c    **** /**
 740:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 741:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
 742:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 743:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 744:Src/main.c    ****   * @param  htim : TIM handle
 745:Src/main.c    ****   * @retval None
 746:Src/main.c    ****   */
 747:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 748:Src/main.c    **** {
 720              		.loc 1 748 1 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		.loc 1 748 1 is_stmt 0 view .LVU175
 725 0000 08B5     		push	{r3, lr}
 726              	.LCFI12:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 3, -8
 729              		.cfi_offset 14, -4
 749:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 750:Src/main.c    **** 
 751:Src/main.c    ****   /* USER CODE END Callback 0 */
 752:Src/main.c    ****   if (htim->Instance == TIM6) {
 730              		.loc 1 752 3 is_stmt 1 view .LVU176
 731              		.loc 1 752 11 is_stmt 0 view .LVU177
 732 0002 0268     		ldr	r2, [r0]
 733              		.loc 1 752 6 view .LVU178
 734 0004 034B     		ldr	r3, .L35
 735 0006 9A42     		cmp	r2, r3
 736 0008 00D0     		beq	.L34
 737              	.LVL38:
 738              	.L31:
 753:Src/main.c    ****     HAL_IncTick();
 754:Src/main.c    ****   }
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 32


 755:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 756:Src/main.c    **** 
 757:Src/main.c    ****   /* USER CODE END Callback 1 */
 758:Src/main.c    **** }
 739              		.loc 1 758 1 view .LVU179
 740 000a 08BD     		pop	{r3, pc}
 741              	.LVL39:
 742              	.L34:
 753:Src/main.c    ****     HAL_IncTick();
 743              		.loc 1 753 5 is_stmt 1 view .LVU180
 744 000c FFF7FEFF 		bl	HAL_IncTick
 745              	.LVL40:
 746              		.loc 1 758 1 is_stmt 0 view .LVU181
 747 0010 FBE7     		b	.L31
 748              	.L36:
 749 0012 00BF     		.align	2
 750              	.L35:
 751 0014 00100040 		.word	1073745920
 752              		.cfi_endproc
 753              	.LFE146:
 755              		.section	.text._Error_Handler,"ax",%progbits
 756              		.align	1
 757              		.global	_Error_Handler
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv4-sp-d16
 763              	_Error_Handler:
 764              	.LFB147:
 759:Src/main.c    **** 
 760:Src/main.c    **** /**
 761:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 762:Src/main.c    ****   * @param  file: The file name as string.
 763:Src/main.c    ****   * @param  line: The line in file as a number.
 764:Src/main.c    ****   * @retval None
 765:Src/main.c    ****   */
 766:Src/main.c    **** void _Error_Handler(char *file, int line)
 767:Src/main.c    **** {
 765              		.loc 1 767 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ Volatile: function does not return.
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771              	.LVL41:
 772              	.L38:
 768:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 769:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 770:Src/main.c    ****   while(1)
 773              		.loc 1 770 3 discriminator 1 view .LVU183
 771:Src/main.c    ****   {
 772:Src/main.c    ****   }
 774              		.loc 1 772 3 discriminator 1 view .LVU184
 775 0000 FEE7     		b	.L38
 776              		.cfi_endproc
 777              	.LFE147:
 779              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 33


 780              		.align	1
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	MX_USART1_UART_Init:
 787              	.LFB140:
 579:Src/main.c    **** 
 788              		.loc 1 579 1 view -0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792 0000 08B5     		push	{r3, lr}
 793              	.LCFI13:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 3, -8
 796              		.cfi_offset 14, -4
 582:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 797              		.loc 1 582 3 view .LVU186
 582:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 798              		.loc 1 582 19 is_stmt 0 view .LVU187
 799 0002 0B48     		ldr	r0, .L43
 800 0004 0B4B     		ldr	r3, .L43+4
 801 0006 0360     		str	r3, [r0]
 583:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 802              		.loc 1 583 3 is_stmt 1 view .LVU188
 583:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 803              		.loc 1 583 24 is_stmt 0 view .LVU189
 804 0008 4FF4E133 		mov	r3, #115200
 805 000c 4360     		str	r3, [r0, #4]
 584:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 806              		.loc 1 584 3 is_stmt 1 view .LVU190
 584:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 807              		.loc 1 584 26 is_stmt 0 view .LVU191
 808 000e 0023     		movs	r3, #0
 809 0010 8360     		str	r3, [r0, #8]
 585:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 810              		.loc 1 585 3 is_stmt 1 view .LVU192
 585:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 811              		.loc 1 585 24 is_stmt 0 view .LVU193
 812 0012 C360     		str	r3, [r0, #12]
 586:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 813              		.loc 1 586 3 is_stmt 1 view .LVU194
 586:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 814              		.loc 1 586 22 is_stmt 0 view .LVU195
 815 0014 0361     		str	r3, [r0, #16]
 587:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 816              		.loc 1 587 3 is_stmt 1 view .LVU196
 587:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 817              		.loc 1 587 20 is_stmt 0 view .LVU197
 818 0016 0C22     		movs	r2, #12
 819 0018 4261     		str	r2, [r0, #20]
 588:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 820              		.loc 1 588 3 is_stmt 1 view .LVU198
 588:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 821              		.loc 1 588 25 is_stmt 0 view .LVU199
 822 001a 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 34


 589:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 823              		.loc 1 589 3 is_stmt 1 view .LVU200
 589:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 824              		.loc 1 589 28 is_stmt 0 view .LVU201
 825 001c C361     		str	r3, [r0, #28]
 590:Src/main.c    ****   {
 826              		.loc 1 590 3 is_stmt 1 view .LVU202
 590:Src/main.c    ****   {
 827              		.loc 1 590 7 is_stmt 0 view .LVU203
 828 001e FFF7FEFF 		bl	HAL_UART_Init
 829              	.LVL42:
 590:Src/main.c    ****   {
 830              		.loc 1 590 6 view .LVU204
 831 0022 00B9     		cbnz	r0, .L42
 596:Src/main.c    **** 
 832              		.loc 1 596 1 view .LVU205
 833 0024 08BD     		pop	{r3, pc}
 834              	.L42:
 592:Src/main.c    ****   }
 835              		.loc 1 592 5 is_stmt 1 view .LVU206
 836 0026 4FF41471 		mov	r1, #592
 837 002a 0348     		ldr	r0, .L43+8
 838 002c FFF7FEFF 		bl	_Error_Handler
 839              	.LVL43:
 840              	.L44:
 841              		.align	2
 842              	.L43:
 843 0030 00000000 		.word	huart1
 844 0034 00100140 		.word	1073811456
 845 0038 00000000 		.word	.LC3
 846              		.cfi_endproc
 847              	.LFE140:
 849              		.section	.text.MX_FSMC_Init,"ax",%progbits
 850              		.align	1
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv4-sp-d16
 856              	MX_FSMC_Init:
 857              	.LFB145:
 696:Src/main.c    ****   FSMC_NORSRAM_TimingTypeDef Timing;
 858              		.loc 1 696 1 view -0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 32
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862 0000 00B5     		push	{lr}
 863              	.LCFI14:
 864              		.cfi_def_cfa_offset 4
 865              		.cfi_offset 14, -4
 866 0002 89B0     		sub	sp, sp, #36
 867              	.LCFI15:
 868              		.cfi_def_cfa_offset 40
 697:Src/main.c    **** 
 869              		.loc 1 697 3 view .LVU208
 701:Src/main.c    ****   hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 870              		.loc 1 701 3 view .LVU209
 701:Src/main.c    ****   hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 35


 871              		.loc 1 701 19 is_stmt 0 view .LVU210
 872 0004 1848     		ldr	r0, .L49
 873 0006 4FF02043 		mov	r3, #-1610612736
 874 000a 0360     		str	r3, [r0]
 702:Src/main.c    ****   /* hsram1.Init */
 875              		.loc 1 702 3 is_stmt 1 view .LVU211
 702:Src/main.c    ****   /* hsram1.Init */
 876              		.loc 1 702 19 is_stmt 0 view .LVU212
 877 000c 03F58273 		add	r3, r3, #260
 878 0010 4360     		str	r3, [r0, #4]
 704:Src/main.c    ****   hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 879              		.loc 1 704 3 is_stmt 1 view .LVU213
 704:Src/main.c    ****   hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 880              		.loc 1 704 22 is_stmt 0 view .LVU214
 881 0012 0022     		movs	r2, #0
 882 0014 8260     		str	r2, [r0, #8]
 705:Src/main.c    ****   hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 883              		.loc 1 705 3 is_stmt 1 view .LVU215
 705:Src/main.c    ****   hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 884              		.loc 1 705 30 is_stmt 0 view .LVU216
 885 0016 C260     		str	r2, [r0, #12]
 706:Src/main.c    ****   hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 886              		.loc 1 706 3 is_stmt 1 view .LVU217
 706:Src/main.c    ****   hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 887              		.loc 1 706 26 is_stmt 0 view .LVU218
 888 0018 0261     		str	r2, [r0, #16]
 707:Src/main.c    ****   hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 889              		.loc 1 707 3 is_stmt 1 view .LVU219
 707:Src/main.c    ****   hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 890              		.loc 1 707 31 is_stmt 0 view .LVU220
 891 001a 1023     		movs	r3, #16
 892 001c 4361     		str	r3, [r0, #20]
 708:Src/main.c    ****   hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 893              		.loc 1 708 3 is_stmt 1 view .LVU221
 708:Src/main.c    ****   hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 894              		.loc 1 708 31 is_stmt 0 view .LVU222
 895 001e 8261     		str	r2, [r0, #24]
 709:Src/main.c    ****   hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 896              		.loc 1 709 3 is_stmt 1 view .LVU223
 709:Src/main.c    ****   hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 897              		.loc 1 709 34 is_stmt 0 view .LVU224
 898 0020 C261     		str	r2, [r0, #28]
 710:Src/main.c    ****   hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 899              		.loc 1 710 3 is_stmt 1 view .LVU225
 710:Src/main.c    ****   hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 900              		.loc 1 710 24 is_stmt 0 view .LVU226
 901 0022 0262     		str	r2, [r0, #32]
 711:Src/main.c    ****   hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 902              		.loc 1 711 3 is_stmt 1 view .LVU227
 711:Src/main.c    ****   hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 903              		.loc 1 711 32 is_stmt 0 view .LVU228
 904 0024 4262     		str	r2, [r0, #36]
 712:Src/main.c    ****   hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 905              		.loc 1 712 3 is_stmt 1 view .LVU229
 712:Src/main.c    ****   hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 906              		.loc 1 712 30 is_stmt 0 view .LVU230
 907 0026 4FF48051 		mov	r1, #4096
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 36


 908 002a 8162     		str	r1, [r0, #40]
 713:Src/main.c    ****   hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 909              		.loc 1 713 3 is_stmt 1 view .LVU231
 713:Src/main.c    ****   hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 910              		.loc 1 713 26 is_stmt 0 view .LVU232
 911 002c C262     		str	r2, [r0, #44]
 714:Src/main.c    ****   hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 912              		.loc 1 714 3 is_stmt 1 view .LVU233
 714:Src/main.c    ****   hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 913              		.loc 1 714 28 is_stmt 0 view .LVU234
 914 002e 0263     		str	r2, [r0, #48]
 715:Src/main.c    ****   hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 915              		.loc 1 715 3 is_stmt 1 view .LVU235
 715:Src/main.c    ****   hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 916              		.loc 1 715 32 is_stmt 0 view .LVU236
 917 0030 4263     		str	r2, [r0, #52]
 716:Src/main.c    ****   hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 918              		.loc 1 716 3 is_stmt 1 view .LVU237
 716:Src/main.c    ****   hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 919              		.loc 1 716 26 is_stmt 0 view .LVU238
 920 0032 8263     		str	r2, [r0, #56]
 717:Src/main.c    ****   /* Timing */
 921              		.loc 1 717 3 is_stmt 1 view .LVU239
 717:Src/main.c    ****   /* Timing */
 922              		.loc 1 717 24 is_stmt 0 view .LVU240
 923 0034 4264     		str	r2, [r0, #68]
 719:Src/main.c    ****   Timing.AddressHoldTime = 15;
 924              		.loc 1 719 3 is_stmt 1 view .LVU241
 719:Src/main.c    ****   Timing.AddressHoldTime = 15;
 925              		.loc 1 719 27 is_stmt 0 view .LVU242
 926 0036 0521     		movs	r1, #5
 927 0038 0191     		str	r1, [sp, #4]
 720:Src/main.c    ****   Timing.DataSetupTime = 8;
 928              		.loc 1 720 3 is_stmt 1 view .LVU243
 720:Src/main.c    ****   Timing.DataSetupTime = 8;
 929              		.loc 1 720 26 is_stmt 0 view .LVU244
 930 003a 0F21     		movs	r1, #15
 931 003c 0291     		str	r1, [sp, #8]
 721:Src/main.c    ****   Timing.BusTurnAroundDuration = 1;
 932              		.loc 1 721 3 is_stmt 1 view .LVU245
 721:Src/main.c    ****   Timing.BusTurnAroundDuration = 1;
 933              		.loc 1 721 24 is_stmt 0 view .LVU246
 934 003e 0821     		movs	r1, #8
 935 0040 0391     		str	r1, [sp, #12]
 722:Src/main.c    ****   Timing.CLKDivision = 16;
 936              		.loc 1 722 3 is_stmt 1 view .LVU247
 722:Src/main.c    ****   Timing.CLKDivision = 16;
 937              		.loc 1 722 32 is_stmt 0 view .LVU248
 938 0042 0121     		movs	r1, #1
 939 0044 0491     		str	r1, [sp, #16]
 723:Src/main.c    ****   Timing.DataLatency = 17;
 940              		.loc 1 723 3 is_stmt 1 view .LVU249
 723:Src/main.c    ****   Timing.DataLatency = 17;
 941              		.loc 1 723 22 is_stmt 0 view .LVU250
 942 0046 0593     		str	r3, [sp, #20]
 724:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
 943              		.loc 1 724 3 is_stmt 1 view .LVU251
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 37


 724:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
 944              		.loc 1 724 22 is_stmt 0 view .LVU252
 945 0048 1123     		movs	r3, #17
 946 004a 0693     		str	r3, [sp, #24]
 725:Src/main.c    ****   /* ExtTiming */
 947              		.loc 1 725 3 is_stmt 1 view .LVU253
 725:Src/main.c    ****   /* ExtTiming */
 948              		.loc 1 725 21 is_stmt 0 view .LVU254
 949 004c 0792     		str	r2, [sp, #28]
 728:Src/main.c    ****   {
 950              		.loc 1 728 3 is_stmt 1 view .LVU255
 728:Src/main.c    ****   {
 951              		.loc 1 728 7 is_stmt 0 view .LVU256
 952 004e 01A9     		add	r1, sp, #4
 953 0050 FFF7FEFF 		bl	HAL_SRAM_Init
 954              	.LVL44:
 728:Src/main.c    ****   {
 955              		.loc 1 728 6 view .LVU257
 956 0054 10B9     		cbnz	r0, .L48
 733:Src/main.c    **** 
 957              		.loc 1 733 1 view .LVU258
 958 0056 09B0     		add	sp, sp, #36
 959              	.LCFI16:
 960              		.cfi_remember_state
 961              		.cfi_def_cfa_offset 4
 962              		@ sp needed
 963 0058 5DF804FB 		ldr	pc, [sp], #4
 964              	.L48:
 965              	.LCFI17:
 966              		.cfi_restore_state
 730:Src/main.c    ****   }
 967              		.loc 1 730 5 is_stmt 1 view .LVU259
 968 005c 40F2DA21 		movw	r1, #730
 969 0060 0248     		ldr	r0, .L49+4
 970 0062 FFF7FEFF 		bl	_Error_Handler
 971              	.LVL45:
 972              	.L50:
 973 0066 00BF     		.align	2
 974              	.L49:
 975 0068 00000000 		.word	hsram1
 976 006c 00000000 		.word	.LC3
 977              		.cfi_endproc
 978              	.LFE145:
 980              		.section	.text.MX_SPI1_Init,"ax",%progbits
 981              		.align	1
 982              		.global	MX_SPI1_Init
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv4-sp-d16
 988              	MX_SPI1_Init:
 989              	.LFB134:
 367:Src/main.c    **** 
 990              		.loc 1 367 1 view -0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 38


 994 0000 08B5     		push	{r3, lr}
 995              	.LCFI18:
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 3, -8
 998              		.cfi_offset 14, -4
 369:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 999              		.loc 1 369 3 view .LVU261
 369:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1000              		.loc 1 369 18 is_stmt 0 view .LVU262
 1001 0002 0F48     		ldr	r0, .L55
 1002 0004 0F4B     		ldr	r3, .L55+4
 1003 0006 0360     		str	r3, [r0]
 370:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1004              		.loc 1 370 3 is_stmt 1 view .LVU263
 370:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1005              		.loc 1 370 19 is_stmt 0 view .LVU264
 1006 0008 4FF48273 		mov	r3, #260
 1007 000c 4360     		str	r3, [r0, #4]
 371:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1008              		.loc 1 371 3 is_stmt 1 view .LVU265
 371:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1009              		.loc 1 371 24 is_stmt 0 view .LVU266
 1010 000e 0023     		movs	r3, #0
 1011 0010 8360     		str	r3, [r0, #8]
 372:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1012              		.loc 1 372 3 is_stmt 1 view .LVU267
 372:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1013              		.loc 1 372 23 is_stmt 0 view .LVU268
 1014 0012 C360     		str	r3, [r0, #12]
 373:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1015              		.loc 1 373 3 is_stmt 1 view .LVU269
 373:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1016              		.loc 1 373 26 is_stmt 0 view .LVU270
 1017 0014 0361     		str	r3, [r0, #16]
 374:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1018              		.loc 1 374 3 is_stmt 1 view .LVU271
 374:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1019              		.loc 1 374 23 is_stmt 0 view .LVU272
 1020 0016 4361     		str	r3, [r0, #20]
 375:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1021              		.loc 1 375 3 is_stmt 1 view .LVU273
 375:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1022              		.loc 1 375 18 is_stmt 0 view .LVU274
 1023 0018 4FF40072 		mov	r2, #512
 1024 001c 8261     		str	r2, [r0, #24]
 376:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1025              		.loc 1 376 3 is_stmt 1 view .LVU275
 376:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1026              		.loc 1 376 32 is_stmt 0 view .LVU276
 1027 001e 2022     		movs	r2, #32
 1028 0020 C261     		str	r2, [r0, #28]
 377:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1029              		.loc 1 377 3 is_stmt 1 view .LVU277
 377:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1030              		.loc 1 377 23 is_stmt 0 view .LVU278
 1031 0022 0362     		str	r3, [r0, #32]
 378:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 39


 1032              		.loc 1 378 3 is_stmt 1 view .LVU279
 378:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1033              		.loc 1 378 21 is_stmt 0 view .LVU280
 1034 0024 4362     		str	r3, [r0, #36]
 379:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 1035              		.loc 1 379 3 is_stmt 1 view .LVU281
 379:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 1036              		.loc 1 379 29 is_stmt 0 view .LVU282
 1037 0026 8362     		str	r3, [r0, #40]
 380:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1038              		.loc 1 380 3 is_stmt 1 view .LVU283
 380:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1039              		.loc 1 380 28 is_stmt 0 view .LVU284
 1040 0028 0A23     		movs	r3, #10
 1041 002a C362     		str	r3, [r0, #44]
 381:Src/main.c    ****   {
 1042              		.loc 1 381 3 is_stmt 1 view .LVU285
 381:Src/main.c    ****   {
 1043              		.loc 1 381 7 is_stmt 0 view .LVU286
 1044 002c FFF7FEFF 		bl	HAL_SPI_Init
 1045              	.LVL46:
 381:Src/main.c    ****   {
 1046              		.loc 1 381 6 view .LVU287
 1047 0030 00B9     		cbnz	r0, .L54
 386:Src/main.c    **** 
 1048              		.loc 1 386 1 view .LVU288
 1049 0032 08BD     		pop	{r3, pc}
 1050              	.L54:
 383:Src/main.c    ****   }
 1051              		.loc 1 383 5 is_stmt 1 view .LVU289
 1052 0034 40F27F11 		movw	r1, #383
 1053 0038 0348     		ldr	r0, .L55+8
 1054 003a FFF7FEFF 		bl	_Error_Handler
 1055              	.LVL47:
 1056              	.L56:
 1057 003e 00BF     		.align	2
 1058              	.L55:
 1059 0040 00000000 		.word	hspi1
 1060 0044 00300140 		.word	1073819648
 1061 0048 00000000 		.word	.LC3
 1062              		.cfi_endproc
 1063              	.LFE134:
 1065              		.section	.text.SystemClock_Config,"ax",%progbits
 1066              		.align	1
 1067              		.global	SystemClock_Config
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu fpv4-sp-d16
 1073              	SystemClock_Config:
 1074              	.LFB138:
 493:Src/main.c    **** 
 1075              		.loc 1 493 1 view -0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 96
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079 0000 00B5     		push	{lr}
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 40


 1080              	.LCFI19:
 1081              		.cfi_def_cfa_offset 4
 1082              		.cfi_offset 14, -4
 1083 0002 99B0     		sub	sp, sp, #100
 1084              	.LCFI20:
 1085              		.cfi_def_cfa_offset 104
 495:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 1086              		.loc 1 495 2 view .LVU291
 496:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 1087              		.loc 1 496 3 view .LVU292
 497:Src/main.c    **** 
 1088              		.loc 1 497 3 view .LVU293
 501:Src/main.c    **** 
 1089              		.loc 1 501 3 view .LVU294
 1090              	.LBB24:
 501:Src/main.c    **** 
 1091              		.loc 1 501 3 view .LVU295
 1092 0004 0021     		movs	r1, #0
 1093 0006 0191     		str	r1, [sp, #4]
 501:Src/main.c    **** 
 1094              		.loc 1 501 3 view .LVU296
 1095 0008 334B     		ldr	r3, .L65
 1096 000a 1A6C     		ldr	r2, [r3, #64]
 1097 000c 42F08052 		orr	r2, r2, #268435456
 1098 0010 1A64     		str	r2, [r3, #64]
 501:Src/main.c    **** 
 1099              		.loc 1 501 3 view .LVU297
 1100 0012 1B6C     		ldr	r3, [r3, #64]
 1101 0014 03F08053 		and	r3, r3, #268435456
 1102 0018 0193     		str	r3, [sp, #4]
 501:Src/main.c    **** 
 1103              		.loc 1 501 3 view .LVU298
 1104 001a 019B     		ldr	r3, [sp, #4]
 1105              	.LBE24:
 503:Src/main.c    **** 
 1106              		.loc 1 503 3 view .LVU299
 1107              	.LBB25:
 503:Src/main.c    **** 
 1108              		.loc 1 503 3 view .LVU300
 1109 001c 0291     		str	r1, [sp, #8]
 503:Src/main.c    **** 
 1110              		.loc 1 503 3 view .LVU301
 1111 001e 2F4B     		ldr	r3, .L65+4
 1112 0020 1A68     		ldr	r2, [r3]
 1113 0022 42F48042 		orr	r2, r2, #16384
 1114 0026 1A60     		str	r2, [r3]
 503:Src/main.c    **** 
 1115              		.loc 1 503 3 view .LVU302
 1116 0028 1B68     		ldr	r3, [r3]
 1117 002a 03F48043 		and	r3, r3, #16384
 1118 002e 0293     		str	r3, [sp, #8]
 503:Src/main.c    **** 
 1119              		.loc 1 503 3 view .LVU303
 1120 0030 029B     		ldr	r3, [sp, #8]
 1121              	.LBE25:
 507:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1122              		.loc 1 507 3 view .LVU304
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 41


 507:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1123              		.loc 1 507 36 is_stmt 0 view .LVU305
 1124 0032 0123     		movs	r3, #1
 1125 0034 0C93     		str	r3, [sp, #48]
 508:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1126              		.loc 1 508 3 is_stmt 1 view .LVU306
 508:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1127              		.loc 1 508 30 is_stmt 0 view .LVU307
 1128 0036 4FF48033 		mov	r3, #65536
 1129 003a 0D93     		str	r3, [sp, #52]
 509:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1130              		.loc 1 509 3 is_stmt 1 view .LVU308
 509:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1131              		.loc 1 509 34 is_stmt 0 view .LVU309
 1132 003c 0223     		movs	r3, #2
 1133 003e 1293     		str	r3, [sp, #72]
 510:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1134              		.loc 1 510 3 is_stmt 1 view .LVU310
 510:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1135              		.loc 1 510 35 is_stmt 0 view .LVU311
 1136 0040 4FF48002 		mov	r2, #4194304
 1137 0044 1392     		str	r2, [sp, #76]
 511:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1138              		.loc 1 511 3 is_stmt 1 view .LVU312
 511:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1139              		.loc 1 511 30 is_stmt 0 view .LVU313
 1140 0046 0422     		movs	r2, #4
 1141 0048 1492     		str	r2, [sp, #80]
 512:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1142              		.loc 1 512 3 is_stmt 1 view .LVU314
 512:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1143              		.loc 1 512 30 is_stmt 0 view .LVU315
 1144 004a A822     		movs	r2, #168
 1145 004c 1592     		str	r2, [sp, #84]
 513:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1146              		.loc 1 513 3 is_stmt 1 view .LVU316
 513:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1147              		.loc 1 513 30 is_stmt 0 view .LVU317
 1148 004e 1693     		str	r3, [sp, #88]
 514:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1149              		.loc 1 514 3 is_stmt 1 view .LVU318
 514:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1150              		.loc 1 514 30 is_stmt 0 view .LVU319
 1151 0050 0723     		movs	r3, #7
 1152 0052 1793     		str	r3, [sp, #92]
 515:Src/main.c    ****   {
 1153              		.loc 1 515 3 is_stmt 1 view .LVU320
 515:Src/main.c    ****   {
 1154              		.loc 1 515 7 is_stmt 0 view .LVU321
 1155 0054 0CA8     		add	r0, sp, #48
 1156 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1157              	.LVL48:
 515:Src/main.c    ****   {
 1158              		.loc 1 515 6 view .LVU322
 1159 005a 68BB     		cbnz	r0, .L62
 522:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1160              		.loc 1 522 3 is_stmt 1 view .LVU323
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 42


 522:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1161              		.loc 1 522 31 is_stmt 0 view .LVU324
 1162 005c 0F23     		movs	r3, #15
 1163 005e 0793     		str	r3, [sp, #28]
 524:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1164              		.loc 1 524 3 is_stmt 1 view .LVU325
 524:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1165              		.loc 1 524 34 is_stmt 0 view .LVU326
 1166 0060 0223     		movs	r3, #2
 1167 0062 0893     		str	r3, [sp, #32]
 525:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1168              		.loc 1 525 3 is_stmt 1 view .LVU327
 525:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1169              		.loc 1 525 35 is_stmt 0 view .LVU328
 1170 0064 0023     		movs	r3, #0
 1171 0066 0993     		str	r3, [sp, #36]
 526:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1172              		.loc 1 526 3 is_stmt 1 view .LVU329
 526:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1173              		.loc 1 526 36 is_stmt 0 view .LVU330
 1174 0068 4FF4A053 		mov	r3, #5120
 1175 006c 0A93     		str	r3, [sp, #40]
 527:Src/main.c    **** 
 1176              		.loc 1 527 3 is_stmt 1 view .LVU331
 527:Src/main.c    **** 
 1177              		.loc 1 527 36 is_stmt 0 view .LVU332
 1178 006e 4FF48053 		mov	r3, #4096
 1179 0072 0B93     		str	r3, [sp, #44]
 529:Src/main.c    ****   {
 1180              		.loc 1 529 3 is_stmt 1 view .LVU333
 529:Src/main.c    ****   {
 1181              		.loc 1 529 7 is_stmt 0 view .LVU334
 1182 0074 0521     		movs	r1, #5
 1183 0076 07A8     		add	r0, sp, #28
 1184 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1185              	.LVL49:
 529:Src/main.c    ****   {
 1186              		.loc 1 529 6 view .LVU335
 1187 007c 08BB     		cbnz	r0, .L63
 535:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1188              		.loc 1 535 3 is_stmt 1 view .LVU336
 535:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1189              		.loc 1 535 44 is_stmt 0 view .LVU337
 1190 007e 0223     		movs	r3, #2
 1191 0080 0393     		str	r3, [sp, #12]
 536:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1192              		.loc 1 536 3 is_stmt 1 view .LVU338
 536:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1193              		.loc 1 536 41 is_stmt 0 view .LVU339
 1194 0082 4FF40073 		mov	r3, #512
 1195 0086 0693     		str	r3, [sp, #24]
 537:Src/main.c    ****   {
 1196              		.loc 1 537 3 is_stmt 1 view .LVU340
 537:Src/main.c    ****   {
 1197              		.loc 1 537 7 is_stmt 0 view .LVU341
 1198 0088 03A8     		add	r0, sp, #12
 1199 008a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 43


 1200              	.LVL50:
 537:Src/main.c    ****   {
 1201              		.loc 1 537 6 view .LVU342
 1202 008e E8B9     		cbnz	r0, .L64
 544:Src/main.c    **** 
 1203              		.loc 1 544 3 is_stmt 1 view .LVU343
 544:Src/main.c    **** 
 1204              		.loc 1 544 22 is_stmt 0 view .LVU344
 1205 0090 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1206              	.LVL51:
 544:Src/main.c    **** 
 1207              		.loc 1 544 3 view .LVU345
 1208 0094 124B     		ldr	r3, .L65+8
 1209 0096 A3FB0030 		umull	r3, r0, r3, r0
 1210 009a 8009     		lsrs	r0, r0, #6
 1211 009c FFF7FEFF 		bl	HAL_SYSTICK_Config
 1212              	.LVL52:
 548:Src/main.c    **** 
 1213              		.loc 1 548 3 is_stmt 1 view .LVU346
 1214 00a0 0420     		movs	r0, #4
 1215 00a2 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1216              	.LVL53:
 551:Src/main.c    **** }
 1217              		.loc 1 551 3 view .LVU347
 1218 00a6 0022     		movs	r2, #0
 1219 00a8 1146     		mov	r1, r2
 1220 00aa 4FF0FF30 		mov	r0, #-1
 1221 00ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1222              	.LVL54:
 552:Src/main.c    **** 
 1223              		.loc 1 552 1 is_stmt 0 view .LVU348
 1224 00b2 19B0     		add	sp, sp, #100
 1225              	.LCFI21:
 1226              		.cfi_remember_state
 1227              		.cfi_def_cfa_offset 4
 1228              		@ sp needed
 1229 00b4 5DF804FB 		ldr	pc, [sp], #4
 1230              	.L62:
 1231              	.LCFI22:
 1232              		.cfi_restore_state
 517:Src/main.c    ****   }
 1233              		.loc 1 517 5 is_stmt 1 view .LVU349
 1234 00b8 40F20521 		movw	r1, #517
 1235 00bc 0948     		ldr	r0, .L65+12
 1236 00be FFF7FEFF 		bl	_Error_Handler
 1237              	.LVL55:
 1238              	.L63:
 531:Src/main.c    ****   }
 1239              		.loc 1 531 5 view .LVU350
 1240 00c2 40F21321 		movw	r1, #531
 1241 00c6 0748     		ldr	r0, .L65+12
 1242 00c8 FFF7FEFF 		bl	_Error_Handler
 1243              	.LVL56:
 1244              	.L64:
 539:Src/main.c    ****   }
 1245              		.loc 1 539 5 view .LVU351
 1246 00cc 40F21B21 		movw	r1, #539
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 44


 1247 00d0 0448     		ldr	r0, .L65+12
 1248 00d2 FFF7FEFF 		bl	_Error_Handler
 1249              	.LVL57:
 1250              	.L66:
 1251 00d6 00BF     		.align	2
 1252              	.L65:
 1253 00d8 00380240 		.word	1073887232
 1254 00dc 00700040 		.word	1073770496
 1255 00e0 D34D6210 		.word	274877907
 1256 00e4 00000000 		.word	.LC3
 1257              		.cfi_endproc
 1258              	.LFE138:
 1260              		.section	.text.main,"ax",%progbits
 1261              		.align	1
 1262              		.global	main
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu fpv4-sp-d16
 1268              	main:
 1269              	.LFB126:
 110:Src/main.c    **** 
 1270              		.loc 1 110 1 view -0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274 0000 38B5     		push	{r3, r4, r5, lr}
 1275              	.LCFI23:
 1276              		.cfi_def_cfa_offset 16
 1277              		.cfi_offset 3, -16
 1278              		.cfi_offset 4, -12
 1279              		.cfi_offset 5, -8
 1280              		.cfi_offset 14, -4
 112:Src/main.c    **** 
 1281              		.loc 1 112 3 view .LVU353
 1282 0002 FFF7FEFF 		bl	HAL_Init
 1283              	.LVL58:
 115:Src/main.c    **** 
 1284              		.loc 1 115 3 view .LVU354
 1285 0006 FFF7FEFF 		bl	SystemClock_Config
 1286              	.LVL59:
 118:Src/main.c    **** 
 1287              		.loc 1 118 3 view .LVU355
 1288 000a FFF7FEFF 		bl	MX_GPIO_Init
 1289              	.LVL60:
 121:Src/main.c    ****   char SD_CD = HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_3);
 1290              		.loc 1 121 3 view .LVU356
 1291 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 1292              	.LVL61:
 122:Src/main.c    ****   if (!SD_CD)
 1293              		.loc 1 122 3 view .LVU357
 122:Src/main.c    ****   if (!SD_CD)
 1294              		.loc 1 122 16 is_stmt 0 view .LVU358
 1295 0012 0821     		movs	r1, #8
 1296 0014 3848     		ldr	r0, .L76
 1297 0016 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1298              	.LVL62:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 45


 123:Src/main.c    ****     {
 1299              		.loc 1 123 3 is_stmt 1 view .LVU359
 123:Src/main.c    ****     {
 1300              		.loc 1 123 6 is_stmt 0 view .LVU360
 1301 001a 0146     		mov	r1, r0
 1302 001c 0028     		cmp	r0, #0
 1303 001e 54D1     		bne	.L68
 125:Src/main.c    ****     }
 1304              		.loc 1 125 5 is_stmt 1 view .LVU361
 1305 0020 3648     		ldr	r0, .L76+4
 1306              	.LVL63:
 125:Src/main.c    ****     }
 1307              		.loc 1 125 5 is_stmt 0 view .LVU362
 1308 0022 FFF7FEFF 		bl	printf
 1309              	.LVL64:
 1310              	.L69:
 143:Src/main.c    ****   //MX_DMA_Init();
 1311              		.loc 1 143 3 is_stmt 1 view .LVU363
 1312 0026 FFF7FEFF 		bl	MX_FSMC_Init
 1313              	.LVL65:
 146:Src/main.c    ****  //for maybe spi mode sdcard
 1314              		.loc 1 146 3 view .LVU364
 1315 002a FFF7FEFF 		bl	MX_SDIO_SD_Init
 1316              	.LVL66:
 150:Src/main.c    ****   int error_lcd = BSP_LCD_Init();
 1317              		.loc 1 150 3 view .LVU365
 1318 002e FFF7FEFF 		bl	MX_FATFS_Init
 1319              	.LVL67:
 151:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_BLUE);
 1320              		.loc 1 151 3 view .LVU366
 151:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_BLUE);
 1321              		.loc 1 151 19 is_stmt 0 view .LVU367
 1322 0032 FFF7FEFF 		bl	BSP_LCD_Init
 1323              	.LVL68:
 152:Src/main.c    ****   snprintf(txt, 30, "test lcd text   ");
 1324              		.loc 1 152 3 is_stmt 1 view .LVU368
 1325 0036 1F20     		movs	r0, #31
 1326 0038 FFF7FEFF 		bl	BSP_LCD_Clear
 1327              	.LVL69:
 153:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_MAGENTA);
 1328              		.loc 1 153 3 view .LVU369
 1329 003c 304D     		ldr	r5, .L76+8
 1330 003e 314C     		ldr	r4, .L76+12
 1331 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1332 0042 2860     		str	r0, [r5]	@ unaligned
 1333 0044 6960     		str	r1, [r5, #4]	@ unaligned
 1334 0046 AA60     		str	r2, [r5, #8]	@ unaligned
 1335 0048 EB60     		str	r3, [r5, #12]	@ unaligned
 1336 004a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1337 004c 2B74     		strb	r3, [r5, #16]
 154:Src/main.c    ****   BSP_LCD_DisplayStringAt(0, SCR_HT - CHARSIZEY, (uint8_t *)txt, LEFT_MODE);
 1338              		.loc 1 154 3 view .LVU370
 1339 004e 4FF61F00 		movw	r0, #63519
 1340 0052 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1341              	.LVL70:
 155:Src/main.c    ****   printf("\n\r\n\r\n\rBooting\n\r");
 1342              		.loc 1 155 3 view .LVU371
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 46


 1343 0056 0323     		movs	r3, #3
 1344 0058 2A46     		mov	r2, r5
 1345 005a 4FF4EC71 		mov	r1, #472
 1346 005e 0020     		movs	r0, #0
 1347 0060 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 1348              	.LVL71:
 156:Src/main.c    ****   printf("Software version: %s\r\n",SOFTWARE_VERSION);
 1349              		.loc 1 156 3 view .LVU372
 1350 0064 2848     		ldr	r0, .L76+16
 1351 0066 FFF7FEFF 		bl	printf
 1352              	.LVL72:
 157:Src/main.c    ****   printf("Board Build: \"%s\"\r\n",HARDWARE);    
 1353              		.loc 1 157 3 view .LVU373
 1354 006a 2849     		ldr	r1, .L76+20
 1355 006c 2848     		ldr	r0, .L76+24
 1356 006e FFF7FEFF 		bl	printf
 1357              	.LVL73:
 158:Src/main.c    ****   printf("Loader Variant: %s\n\r",LOADER_VARIANT);
 1358              		.loc 1 158 3 view .LVU374
 1359 0072 2849     		ldr	r1, .L76+28
 1360 0074 2848     		ldr	r0, .L76+32
 1361 0076 FFF7FEFF 		bl	printf
 1362              	.LVL74:
 159:Src/main.c    ****   printf("about to setup sd-card\n\r");
 1363              		.loc 1 159 3 view .LVU375
 1364 007a 2849     		ldr	r1, .L76+36
 1365 007c 2848     		ldr	r0, .L76+40
 1366 007e FFF7FEFF 		bl	printf
 1367              	.LVL75:
 160:Src/main.c    **** 
 1368              		.loc 1 160 3 view .LVU376
 1369 0082 2848     		ldr	r0, .L76+44
 1370 0084 FFF7FEFF 		bl	printf
 1371              	.LVL76:
 162:Src/main.c    ****   
 1372              		.loc 1 162 3 view .LVU377
 165:Src/main.c    ****   //result=FR_OK;
 1373              		.loc 1 165 3 view .LVU378
 165:Src/main.c    ****   //result=FR_OK;
 1374              		.loc 1 165 12 is_stmt 0 view .LVU379
 1375 0088 0122     		movs	r2, #1
 1376 008a 2749     		ldr	r1, .L76+48
 1377 008c 2748     		ldr	r0, .L76+52
 1378 008e FFF7FEFF 		bl	f_mount
 1379              	.LVL77:
 168:Src/main.c    ****   {
 1380              		.loc 1 168 5 is_stmt 1 view .LVU380
 168:Src/main.c    ****   {
 1381              		.loc 1 168 8 is_stmt 0 view .LVU381
 1382 0092 0146     		mov	r1, r0
 1383 0094 38BB     		cbnz	r0, .L70
 170:Src/main.c    ****      } else {
 1384              		.loc 1 170 6 is_stmt 1 view .LVU382
 1385 0096 2648     		ldr	r0, .L76+56
 1386              	.LVL78:
 170:Src/main.c    ****      } else {
 1387              		.loc 1 170 6 is_stmt 0 view .LVU383
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 47


 1388 0098 FFF7FEFF 		bl	puts
 1389              	.LVL79:
 1390              	.L71:
 189:Src/main.c    ****  //res = f_open(&SDFile,(char *)fName, FA_OPEN_EXISTING | FA_READ);
 1391              		.loc 1 189 2 is_stmt 1 view .LVU384
 189:Src/main.c    ****  //res = f_open(&SDFile,(char *)fName, FA_OPEN_EXISTING | FA_READ);
 1392              		.loc 1 189 6 is_stmt 0 view .LVU385
 1393 009c 254C     		ldr	r4, .L76+60
 1394 009e 0023     		movs	r3, #0
 1395 00a0 2370     		strb	r3, [r4]
 191:Src/main.c    ****   {
 1396              		.loc 1 191 3 is_stmt 1 view .LVU386
 1397              	.LBB26:
 195:Src/main.c    ****     HAL_FLASH_Lock();
 1398              		.loc 1 195 5 view .LVU387
 195:Src/main.c    ****     HAL_FLASH_Lock();
 1399              		.loc 1 195 12 is_stmt 0 view .LVU388
 1400 00a2 2548     		ldr	r0, .L76+64
 1401 00a4 FFF7FEFF 		bl	flash
 1402              	.LVL80:
 196:Src/main.c    ****    
 1403              		.loc 1 196 5 is_stmt 1 view .LVU389
 1404 00a8 FFF7FEFF 		bl	HAL_FLASH_Lock
 1405              	.LVL81:
 198:Src/main.c    ****     {
 1406              		.loc 1 198 5 view .LVU390
 198:Src/main.c    ****     {
 1407              		.loc 1 198 13 is_stmt 0 view .LVU391
 1408 00ac 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 198:Src/main.c    ****     {
 1409              		.loc 1 198 8 view .LVU392
 1410 00ae F1B9     		cbnz	r1, .L72
 200:Src/main.c    ****     }
 1411              		.loc 1 200 7 is_stmt 1 view .LVU393
 1412 00b0 2248     		ldr	r0, .L76+68
 1413 00b2 FFF7FEFF 		bl	printf
 1414              	.LVL82:
 1415              	.L73:
 1416              	.LBE26:
 218:Src/main.c    ****   
 1417              		.loc 1 218 3 view .LVU394
 1418 00b6 FFF7FEFF 		bl	firmware_deinit
 1419              	.LVL83:
 220:Src/main.c    ****   //alt 
 1420              		.loc 1 220 3 view .LVU395
 1421 00ba FFF7FEFF 		bl	firmware_run
 1422              	.LVL84:
 223:Src/main.c    ****  // go_to(0x0800C000);
 1423              		.loc 1 223 3 view .LVU396
 1424 00be FFF7FEFF 		bl	Bootloader_JumpToApplication
 1425              	.LVL85:
 1426              	.L74:
 226:Src/main.c    ****   {
 1427              		.loc 1 226 3 discriminator 1 view .LVU397
 229:Src/main.c    **** 
 1428              		.loc 1 229 5 discriminator 1 view .LVU398
 1429 00c2 1F48     		ldr	r0, .L76+72
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 48


 1430 00c4 FFF7FEFF 		bl	puts
 1431              	.LVL86:
 1432 00c8 FBE7     		b	.L74
 1433              	.LVL87:
 1434              	.L68:
 1435              	.LBB27:
 129:Src/main.c    ****     MX_FSMC_Init();
 1436              		.loc 1 129 5 view .LVU399
 1437 00ca 1E48     		ldr	r0, .L76+76
 1438              	.LVL88:
 129:Src/main.c    ****     MX_FSMC_Init();
 1439              		.loc 1 129 5 is_stmt 0 view .LVU400
 1440 00cc FFF7FEFF 		bl	printf
 1441              	.LVL89:
 130:Src/main.c    ****     int error_lcd = BSP_LCD_Init();
 1442              		.loc 1 130 5 is_stmt 1 view .LVU401
 1443 00d0 FFF7FEFF 		bl	MX_FSMC_Init
 1444              	.LVL90:
 131:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_RED);
 1445              		.loc 1 131 5 view .LVU402
 131:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_RED);
 1446              		.loc 1 131 21 is_stmt 0 view .LVU403
 1447 00d4 FFF7FEFF 		bl	BSP_LCD_Init
 1448              	.LVL91:
 132:Src/main.c    ****     firmware_run();
 1449              		.loc 1 132 5 is_stmt 1 view .LVU404
 1450 00d8 4FF47840 		mov	r0, #63488
 1451 00dc FFF7FEFF 		bl	BSP_LCD_Clear
 1452              	.LVL92:
 133:Src/main.c    ****   //alt 
 1453              		.loc 1 133 5 view .LVU405
 1454 00e0 FFF7FEFF 		bl	firmware_run
 1455              	.LVL93:
 1456 00e4 9FE7     		b	.L69
 1457              	.LVL94:
 1458              	.L70:
 133:Src/main.c    ****   //alt 
 1459              		.loc 1 133 5 is_stmt 0 view .LVU406
 1460              	.LBE27:
 173:Src/main.c    **** 
 1461              		.loc 1 173 4 is_stmt 1 view .LVU407
 1462 00e6 1848     		ldr	r0, .L76+80
 1463              	.LVL95:
 173:Src/main.c    **** 
 1464              		.loc 1 173 4 is_stmt 0 view .LVU408
 1465 00e8 FFF7FEFF 		bl	printf
 1466              	.LVL96:
 1467 00ec D6E7     		b	.L71
 1468              	.L72:
 1469              	.LBB28:
 204:Src/main.c    ****     }
 1470              		.loc 1 204 7 is_stmt 1 view .LVU409
 1471 00ee 1748     		ldr	r0, .L76+84
 1472 00f0 FFF7FEFF 		bl	printf
 1473              	.LVL97:
 1474 00f4 DFE7     		b	.L73
 1475              	.L77:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 49


 1476 00f6 00BF     		.align	2
 1477              	.L76:
 1478 00f8 000C0240 		.word	1073875968
 1479 00fc 00000000 		.word	.LC4
 1480 0100 00000000 		.word	txt
 1481 0104 34000000 		.word	.LC6
 1482 0108 48000000 		.word	.LC7
 1483 010c 58000000 		.word	.LC8
 1484 0110 5C000000 		.word	.LC9
 1485 0114 74000000 		.word	.LC10
 1486 0118 84000000 		.word	.LC11
 1487 011c 98000000 		.word	.LC12
 1488 0120 A8000000 		.word	.LC13
 1489 0124 C0000000 		.word	.LC14
 1490 0128 00000000 		.word	SDPath
 1491 012c 00000000 		.word	SDFatFS
 1492 0130 DC000000 		.word	.LC15
 1493 0134 00000000 		.word	res
 1494 0138 00000000 		.word	.LANCHOR1
 1495 013c 18010000 		.word	.LC17
 1496 0140 44010000 		.word	.LC19
 1497 0144 18000000 		.word	.LC5
 1498 0148 F4000000 		.word	.LC16
 1499 014c 28010000 		.word	.LC18
 1500              	.LBE28:
 1501              		.cfi_endproc
 1502              	.LFE126:
 1504              		.global	sd_pin
 1505              		.global	fName
 1506              		.comm	res,1,1
 1507              		.comm	hdma_sdio_rx,96,4
 1508              		.comm	hdma_sdio_tx,96,4
 1509              		.global	mcuFirstPageAddr
 1510              		.comm	sdFileSystem,4152,4
 1511              		.comm	SDFile,4144,4
 1512              		.comm	SDFatFS,4152,4
 1513              		.comm	SDPath,4,4
 1514              		.comm	retSD,1,1
 1515              		.comm	txt,30,4
 1516              		.comm	hspi1,88,4
 1517              		.comm	SDCardInfo,32,4
 1518              		.comm	hsd,132,4
 1519              		.comm	huart6,64,4
 1520              		.comm	huart3,64,4
 1521              		.comm	huart1,64,4
 1522              		.comm	htim2,60,4
 1523              		.comm	hsram1,80,4
 1524              		.comm	hrtc,32,4
 1525              		.section	.bss.sd_pin,"aw",%nobits
 1526              		.align	2
 1529              	sd_pin:
 1530 0000 00000000 		.space	4
 1531              		.section	.data.fName,"aw"
 1532              		.align	2
 1533              		.set	.LANCHOR1,. + 0
 1536              	fName:
 1537 0000 6D6B7374 		.ascii	"mkstft35.bin\000\000"
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 50


 1537      66743335 
 1537      2E62696E 
 1537      0000
 1538              		.section	.data.mcuFirstPageAddr,"aw"
 1539              		.align	2
 1540              		.set	.LANCHOR0,. + 0
 1543              	mcuFirstPageAddr:
 1544 0000 00C00008 		.word	134266880
 1545              		.section	.rodata.Bootloader_JumpToApplication.str1.4,"aMS",%progbits,1
 1546              		.align	2
 1547              	.LC0:
 1548 0000 61626F75 		.ascii	"about to jump\000"
 1548      7420746F 
 1548      206A756D 
 1548      7000
 1549              		.section	.rodata.Jump_To_App.str1.4,"aMS",%progbits,1
 1550              		.align	2
 1551              	.LC1:
 1552 0000 56656374 		.ascii	"Vect at %x\000"
 1552      20617420 
 1552      257800
 1553 000b 00       		.space	1
 1554              	.LC2:
 1555 000c 6A756D70 		.ascii	"jump @ %x\000"
 1555      20402025 
 1555      7800
 1556              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 1557              		.align	2
 1558              	.LC3:
 1559 0000 5372632F 		.ascii	"Src/main.c\000"
 1559      6D61696E 
 1559      2E6300
 1560              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1561              		.align	2
 1562              	.LC4:
 1563 0000 53442043 		.ascii	"SD CARD detected %d\012\015\000"
 1563      41524420 
 1563      64657465 
 1563      63746564 
 1563      2025640A 
 1564 0016 0000     		.space	2
 1565              	.LC5:
 1566 0018 53442043 		.ascii	"SD CARD not detected %d\012\015\000"
 1566      41524420 
 1566      6E6F7420 
 1566      64657465 
 1566      63746564 
 1567 0032 0000     		.space	2
 1568              	.LC6:
 1569 0034 74657374 		.ascii	"test lcd text   \000"
 1569      206C6364 
 1569      20746578 
 1569      74202020 
 1569      00
 1570 0045 000000   		.space	3
 1571              	.LC7:
 1572 0048 0A0D0A0D 		.ascii	"\012\015\012\015\012\015Booting\012\015\000"
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 51


 1572      0A0D426F 
 1572      6F74696E 
 1572      670A0D00 
 1573              	.LC8:
 1574 0058 302E3100 		.ascii	"0.1\000"
 1575              	.LC9:
 1576 005c 536F6674 		.ascii	"Software version: %s\015\012\000"
 1576      77617265 
 1576      20766572 
 1576      73696F6E 
 1576      3A202573 
 1577 0073 00       		.space	1
 1578              	.LC10:
 1579 0074 4D4B5354 		.ascii	"MKSTFT3.5-V1\000"
 1579      4654332E 
 1579      352D5631 
 1579      00
 1580 0081 000000   		.space	3
 1581              	.LC11:
 1582 0084 426F6172 		.ascii	"Board Build: \"%s\"\015\012\000"
 1582      64204275 
 1582      696C643A 
 1582      20222573 
 1582      220D0A00 
 1583              	.LC12:
 1584 0098 697A336D 		.ascii	"iz3man loader\000"
 1584      616E206C 
 1584      6F616465 
 1584      7200
 1585 00a6 0000     		.space	2
 1586              	.LC13:
 1587 00a8 4C6F6164 		.ascii	"Loader Variant: %s\012\015\000"
 1587      65722056 
 1587      61726961 
 1587      6E743A20 
 1587      25730A0D 
 1588 00bd 000000   		.space	3
 1589              	.LC14:
 1590 00c0 61626F75 		.ascii	"about to setup sd-card\012\015\000"
 1590      7420746F 
 1590      20736574 
 1590      75702073 
 1590      642D6361 
 1591 00d9 000000   		.space	3
 1592              	.LC15:
 1593 00dc 53442043 		.ascii	"SD Card Open Success\015\000"
 1593      61726420 
 1593      4F70656E 
 1593      20537563 
 1593      63657373 
 1594 00f2 0000     		.space	2
 1595              	.LC16:
 1596 00f4 4D41494E 		.ascii	"MAIN: FatFs Init Failed Code: %d\015\012\000"
 1596      3A204661 
 1596      74467320 
 1596      496E6974 
 1596      20466169 
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 52


 1597 0117 00       		.space	1
 1598              	.LC17:
 1599 0118 466C6173 		.ascii	"Flash success\012\015\000"
 1599      68207375 
 1599      63636573 
 1599      730A0D00 
 1600              	.LC18:
 1601 0128 4D41494E 		.ascii	"MAIN: Flash error code:%d\012\015\000"
 1601      3A20466C 
 1601      61736820 
 1601      6572726F 
 1601      7220636F 
 1602              	.LC19:
 1603 0144 0D0A4C63 		.ascii	"\015\012Lcd Init Error\015\000"
 1603      6420496E 
 1603      69742045 
 1603      72726F72 
 1603      0D00
 1604              		.text
 1605              	.Letext0:
 1606              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1607              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1608              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1609              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1610              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1611              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-eab
 1612              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1613              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1614              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1615              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1616              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1617              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1618              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1619              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1620              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fsmc.h"
 1621              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sram.h"
 1622              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 1623              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1624              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1625              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1626              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1627              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1628              		.file 25 "Drivers/FATFS/fatfs/src/integer.h"
 1629              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1630              		.file 27 "Drivers/FATFS/fatfs/src/ff.h"
 1631              		.file 28 "Drivers/FATFS/fatfs/src/diskio.h"
 1632              		.file 29 "Drivers/FATFS/fatfs/src/ff_gen_drv.h"
 1633              		.file 30 "Drivers/FATFS/Target/sd_diskio.h"
 1634              		.file 31 "Drivers/FATFS/App/fatfs.h"
 1635              		.file 32 "Drivers/drivers/Fonts/fonts.h"
 1636              		.file 33 "Drivers/drivers/stm32_adafruit_lcd.h"
 1637              		.file 34 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1638              		.file 35 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1639              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1640              		.file 37 "Inc/firmware.h"
 1641              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h"
 1642              		.file 39 "<built-in>"
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 53


ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:18     .text.MX_SDIO_SD_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:25     .text.MX_SDIO_SD_Init:00000000 MX_SDIO_SD_Init
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:63     .text.MX_SDIO_SD_Init:00000018 $d
                            *COM*:00000084 hsd
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:69     .text.MX_GPIO_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:75     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:242    .text.MX_GPIO_Init:000000c4 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:249    .text.NVIC_SetVectorTable:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:256    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:282    .text.NVIC_SetVectorTable:00000010 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:287    .text.Bootloader_JumpToApplication:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:294    .text.Bootloader_JumpToApplication:00000000 Bootloader_JumpToApplication
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:386    .text.Bootloader_JumpToApplication:0000003c $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:394    .text.Jump_To_App:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:401    .text.Jump_To_App:00000000 Jump_To_App
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:509    .text.Jump_To_App:0000006c $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:520    .text.HAL_SPI_MspInit:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:527    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:643    .text.HAL_SPI_MspInit:00000070 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:649    .text.HAL_SPI_MspDeInit:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:656    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:703    .text.HAL_SPI_MspDeInit:00000028 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:710    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:717    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:751    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:756    .text._Error_Handler:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:763    .text._Error_Handler:00000000 _Error_Handler
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:780    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:786    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:843    .text.MX_USART1_UART_Init:00000030 $d
                            *COM*:00000040 huart1
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:850    .text.MX_FSMC_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:856    .text.MX_FSMC_Init:00000000 MX_FSMC_Init
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:975    .text.MX_FSMC_Init:00000068 $d
                            *COM*:00000050 hsram1
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:981    .text.MX_SPI1_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:988    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1059   .text.MX_SPI1_Init:00000040 $d
                            *COM*:00000058 hspi1
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1066   .text.SystemClock_Config:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1073   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1253   .text.SystemClock_Config:000000d8 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1261   .text.main:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1268   .text.main:00000000 main
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1478   .text.main:000000f8 $d
                            *COM*:0000001e txt
                            *COM*:00000004 SDPath
                            *COM*:00001038 SDFatFS
                            *COM*:00000001 res
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1529   .bss.sd_pin:00000000 sd_pin
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1536   .data.fName:00000000 fName
                            *COM*:00000060 hdma_sdio_rx
                            *COM*:00000060 hdma_sdio_tx
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1543   .data.mcuFirstPageAddr:00000000 mcuFirstPageAddr
                            *COM*:00001038 sdFileSystem
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s 			page 55


                            *COM*:00001030 SDFile
                            *COM*:00000001 retSD
                            *COM*:00000020 SDCardInfo
                            *COM*:00000040 huart6
                            *COM*:00000040 huart3
                            *COM*:0000003c htim2
                            *COM*:00000020 hrtc
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1526   .bss.sd_pin:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1532   .data.fName:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1539   .data.mcuFirstPageAddr:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1546   .rodata.Bootloader_JumpToApplication.str1.4:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1550   .rodata.Jump_To_App.str1.4:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1557   .rodata.MX_USART1_UART_Init.str1.4:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\ccefTrLi.s:1561   .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_RCC_DeInit
HAL_DeInit
printf
HAL_Delay
HAL_SD_MspDeInit
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_IncTick
HAL_UART_Init
HAL_SRAM_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_GPIO_ReadPin
MX_FATFS_Init
BSP_LCD_Init
BSP_LCD_Clear
BSP_LCD_SetTextColor
BSP_LCD_DisplayStringAt
f_mount
puts
flash
HAL_FLASH_Lock
firmware_deinit
firmware_run
