ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.JumpToApplication,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	JumpToApplication:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include <stdlib.h>
  41:Src/main.c    **** #include <stdio.h>
  42:Src/main.c    **** #include <string.h>
  43:Src/main.c    **** /*--*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f4xx_hal.h"
  46:Src/main.c    **** #include "stm32f4xx_hal_uart.h"
  47:Src/main.c    **** #include "fatfs.h"
  48:Src/main.c    **** #include "mkstft35.h"
  49:Src/main.c    **** #include "firmware.h"
  50:Src/main.c    **** #include "stm32_adafruit_lcd.h"
  51:Src/main.c    **** #include "mainApp.h"
  52:Src/main.c    **** /* USER CODE BEGIN Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** RTC_HandleTypeDef hrtc;
  58:Src/main.c    **** 
  59:Src/main.c    **** SRAM_HandleTypeDef hsram1;
  60:Src/main.c    **** 
  61:Src/main.c    **** 
  62:Src/main.c    **** TIM_HandleTypeDef htim2;
  63:Src/main.c    **** UART_HandleTypeDef huart1;
  64:Src/main.c    **** UART_HandleTypeDef huart3;
  65:Src/main.c    **** UART_HandleTypeDef huart6;
  66:Src/main.c    **** 
  67:Src/main.c    **** SD_HandleTypeDef hsd;
  68:Src/main.c    **** HAL_SD_CardInfoTypeDef SDCardInfo;
  69:Src/main.c    **** 
  70:Src/main.c    **** 
  71:Src/main.c    **** SPI_HandleTypeDef hspi1;
  72:Src/main.c    **** char txt[30];
  73:Src/main.c    **** uint8_t retSD; /* Return value for SD */
  74:Src/main.c    **** char SDPath[4]; /* SD logical drive path */
  75:Src/main.c    **** FATFS SDFatFS; /* File system object for SD logical drive */
  76:Src/main.c    **** FIL SDFile; /* File object for SD */
  77:Src/main.c    **** 
  78:Src/main.c    **** FATFS sdFileSystem;		// 0:/
  79:Src/main.c    **** const uint32_t *mcuFirstPageAddr = (const uint32_t *) (0x8000000 + BOOT_SECT);
  80:Src/main.c    **** /* DMA stuff trying to fix sdcard */
  81:Src/main.c    **** DMA_HandleTypeDef hdma_sdio_tx;
  82:Src/main.c    **** DMA_HandleTypeDef hdma_sdio_rx;
  83:Src/main.c    **** //
  84:Src/main.c    **** typedef void (*pFunction)(void);
  85:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  86:Src/main.c    **** void SystemClock_Config(void);
  87:Src/main.c    **** static void MX_DMA_Init(void);
  88:Src/main.c    **** static void MX_GPIO_Init(void);
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 3


  89:Src/main.c    **** static void MX_RTC_Init(void);
  90:Src/main.c    **** static void MX_FSMC_Init(void);
  91:Src/main.c    **** static void MX_USART1_UART_Init(void);
  92:Src/main.c    **** static void MX_USART3_UART_Init(void);
  93:Src/main.c    **** static void MX_USART6_UART_Init(void);
  94:Src/main.c    **** static void MX_SDIO_SD_Init(void);
  95:Src/main.c    **** static void JumpToApplication(void);
  96:Src/main.c    **** /* USER CODE BEGIN PFP */
  97:Src/main.c    **** 
  98:Src/main.c    ****   FRESULT res;
  99:Src/main.c    **** 
 100:Src/main.c    ****   uint8_t fName[] = "mkstft35.bin\0";
 101:Src/main.c    **** 
 102:Src/main.c    ****   int sd_pin=0;
 103:Src/main.c    **** 
 104:Src/main.c    **** void mainApp(void);
 105:Src/main.c    **** 
 106:Src/main.c    **** 
 107:Src/main.c    **** /**
 108:Src/main.c    ****   * @brief  The application entry point.
 109:Src/main.c    ****   *
 110:Src/main.c    ****   * @retval None
 111:Src/main.c    ****   */
 112:Src/main.c    **** 
 113:Src/main.c    **** int main(void)
 114:Src/main.c    **** {
 115:Src/main.c    **** 
 116:Src/main.c    ****   HAL_Init();
 117:Src/main.c    **** 
 118:Src/main.c    **** 
 119:Src/main.c    ****   SystemClock_Config();
 120:Src/main.c    **** 
 121:Src/main.c    **** 
 122:Src/main.c    ****   MX_GPIO_Init();
 123:Src/main.c    **** 
 124:Src/main.c    ****  // MX_RTC_Init();
 125:Src/main.c    ****   MX_USART1_UART_Init();
 126:Src/main.c    ****   char SD_CD = HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_3);
 127:Src/main.c    ****   
 128:Src/main.c    ****   //current debug code, check for sd or jump to app
 129:Src/main.c    ****   if (!SD_CD)
 130:Src/main.c    ****     {
 131:Src/main.c    ****     printf("SD CARD detected %d\n\r",SD_CD);
 132:Src/main.c    ****     }
 133:Src/main.c    ****   else 
 134:Src/main.c    ****   {
 135:Src/main.c    ****     printf("SD CARD not detected %d\n\r",SD_CD);
 136:Src/main.c    ****     MX_FSMC_Init();
 137:Src/main.c    ****     int error_lcd = BSP_LCD_Init();
 138:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_RED);
 139:Src/main.c    ****     JumpToApplication();
 140:Src/main.c    ****   
 141:Src/main.c    ****   //alt jumps that dont work
 142:Src/main.c    ****   //Jump_To_App();
 143:Src/main.c    ****   //Bootloader_JumpToApplication();
 144:Src/main.c    ****   //mainApp();
 145:Src/main.c    ****    //firmware_run();
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 4


 146:Src/main.c    **** }
 147:Src/main.c    **** 
 148:Src/main.c    **** 
 149:Src/main.c    ****   // MX_USART3_UART_Init();
 150:Src/main.c    ****   // MX_USART6_UART_Init();
 151:Src/main.c    ****   //HAL_UART_MspInit(&huart1);
 152:Src/main.c    ****   MX_FSMC_Init();
 153:Src/main.c    ****   //MX_DMA_Init();
 154:Src/main.c    ****   //init sdcard and read
 155:Src/main.c    ****   MX_SDIO_SD_Init();
 156:Src/main.c    ****  //for maybe spi mode sdcard
 157:Src/main.c    ****  // MX_SPI1_Init();
 158:Src/main.c    ****  
 159:Src/main.c    ****   MX_FATFS_Init();
 160:Src/main.c    ****   int error_lcd = BSP_LCD_Init();
 161:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_BLUE);
 162:Src/main.c    ****   snprintf(txt, 30, "test lcd text   ");
 163:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_MAGENTA);
 164:Src/main.c    ****   BSP_LCD_DisplayStringAt(0, SCR_HT - CHARSIZEY, (uint8_t *)txt, LEFT_MODE);
 165:Src/main.c    ****   printf("\n\r\n\r\n\rBooting\n\r");
 166:Src/main.c    ****   printf("Software version: %s\r\n",SOFTWARE_VERSION);
 167:Src/main.c    ****   printf("Board Build: \"%s\"\r\n",HARDWARE);    
 168:Src/main.c    ****   printf("Loader Variant: %s\n\r",LOADER_VARIANT);
 169:Src/main.c    ****   printf("about to setup sd-card\n\r");
 170:Src/main.c    **** 
 171:Src/main.c    ****   unsigned char result;
 172:Src/main.c    ****   
 173:Src/main.c    ****   //open device
 174:Src/main.c    ****   result = f_mount(&SDFatFS, SDPath, 1);
 175:Src/main.c    ****   //result=FR_OK;
 176:Src/main.c    **** 
 177:Src/main.c    ****     if (result == FR_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****   	  printf("SD Card Open Success\r\n");
 180:Src/main.c    ****      } else {
 181:Src/main.c    ****    
 182:Src/main.c    **** 	  printf("MAIN: FatFs Init Failed Code: %d\r\n", (int)result);
 183:Src/main.c    **** 
 184:Src/main.c    ****     }
 185:Src/main.c    **** /*
 186:Src/main.c    ****   sd_pin = HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_3);
 187:Src/main.c    **** 
 188:Src/main.c    ****   if (sd_pin == 1)
 189:Src/main.c    ****   {
 190:Src/main.c    ****     printf("sd card pin detect high\n\r");
 191:Src/main.c    ****   }
 192:Src/main.c    ****   else
 193:Src/main.c    ****   {
 194:Src/main.c    **** 
 195:Src/main.c    ****     printf("sd card pin detect low\n\r");
 196:Src/main.c    ****   }
 197:Src/main.c    ****   */
 198:Src/main.c    ****  res = FR_OK;
 199:Src/main.c    ****  //res = f_open(&SDFile,(char *)fName, FA_OPEN_EXISTING | FA_READ);
 200:Src/main.c    ****   if (res == FR_OK)
 201:Src/main.c    ****   {
 202:Src/main.c    **** 	  
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 5


 203:Src/main.c    **** 	 // printf("Firmware File Found,jumping to flash routine\n\r");
 204:Src/main.c    ****     res == flash(fName);
 205:Src/main.c    ****     HAL_FLASH_Lock();
 206:Src/main.c    ****    
 207:Src/main.c    ****     if (res == FR_OK)
 208:Src/main.c    ****     {
 209:Src/main.c    ****       printf("Flash success\n\r");
 210:Src/main.c    ****     }
 211:Src/main.c    ****     else
 212:Src/main.c    ****     {
 213:Src/main.c    ****       printf("MAIN: Flash error code:%d\n\r",res);
 214:Src/main.c    ****     }
 215:Src/main.c    ****    // while (1);
 216:Src/main.c    ****   } 
 217:Src/main.c    ****   else
 218:Src/main.c    **** 	if (res != FR_OK)
 219:Src/main.c    **** 	{
 220:Src/main.c    **** 	  printf("MAIN: Failed to open firmware file %s wirth error :%d\n\r",fName,res);
 221:Src/main.c    **** 	}
 222:Src/main.c    ****   else 
 223:Src/main.c    ****   {
 224:Src/main.c    ****     printf("unknown flash error %d\n\r",res);
 225:Src/main.c    ****   }
 226:Src/main.c    ****   
 227:Src/main.c    ****   firmware_deinit();
 228:Src/main.c    ****   
 229:Src/main.c    ****   firmware_run();
 230:Src/main.c    ****   //alt 
 231:Src/main.c    ****  // Jump_To_App();
 232:Src/main.c    ****   //Bootloader_JumpToApplication();
 233:Src/main.c    ****   printf("\n\rjump to bl new routine\n\r");
 234:Src/main.c    ****   //JumpToApplication();
 235:Src/main.c    ****  // go_to(0x0800C000);
 236:Src/main.c    ****   //mainApp();
 237:Src/main.c    ****   while (1)
 238:Src/main.c    ****   {
 239:Src/main.c    **** 
 240:Src/main.c    ****     printf("\r\nLcd Init Error\r\n");
 241:Src/main.c    **** 
 242:Src/main.c    ****   }
 243:Src/main.c    **** 
 244:Src/main.c    **** 
 245:Src/main.c    **** }
 246:Src/main.c    **** //move vector table 
 247:Src/main.c    **** inline void moveVectorTable(uint32_t Offset)
 248:Src/main.c    **** {
 249:Src/main.c    ****     // __disable_irq();
 250:Src/main.c    ****     SCB->VTOR = FLASH_BASE | Offset;
 251:Src/main.c    **** }
 252:Src/main.c    **** 
 253:Src/main.c    **** #define APPLICATION_START_ADDRESS   0x0800C000U
 254:Src/main.c    **** static void JumpToApplication(void)
 255:Src/main.c    **** {
  28              		.loc 1 255 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 6


 256:Src/main.c    ****     if (((*(__IO uint32_t*)APPLICATION_START_ADDRESS) & 0x2FFE0000 ) == 0x20000000)
  32              		.loc 1 256 5 view .LVU1
  33              		.loc 1 256 11 is_stmt 0 view .LVU2
  34 0000 094B     		ldr	r3, .L8
  35 0002 1A68     		ldr	r2, [r3]
  36              		.loc 1 256 55 view .LVU3
  37 0004 094B     		ldr	r3, .L8+4
  38 0006 1340     		ands	r3, r3, r2
  39              		.loc 1 256 8 view .LVU4
  40 0008 B3F1005F 		cmp	r3, #536870912
  41 000c 00D0     		beq	.L7
  42 000e 7047     		bx	lr
  43              	.L7:
 255:Src/main.c    ****     if (((*(__IO uint32_t*)APPLICATION_START_ADDRESS) & 0x2FFE0000 ) == 0x20000000)
  44              		.loc 1 255 1 view .LVU5
  45 0010 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0012 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
  53              	.LBB15:
 257:Src/main.c    ****     {
 258:Src/main.c    ****         /* First, disable all IRQs */
 259:Src/main.c    ****         __disable_irq();
  54              		.loc 1 259 9 is_stmt 1 view .LVU6
  55              	.LBB16:
  56              	.LBI16:
  57              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 7


  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  58              		.loc 2 69 57 view .LVU7
  59              	.LBB17:
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  60              		.loc 2 71 3 view .LVU8
  61              		.syntax unified
  62              	@ 71 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  63 0014 72B6     		cpsid i
  64              	@ 0 "" 2
  65              		.thumb
  66              		.syntax unified
  67              	.LBE17:
  68              	.LBE16:
 260:Src/main.c    **** 
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 8


 261:Src/main.c    ****         /* Get the main application start address */
 262:Src/main.c    ****         uint32_t jump_address = *(__IO uint32_t *)(APPLICATION_START_ADDRESS + 4);
  69              		.loc 1 262 9 view .LVU9
  70              		.loc 1 262 18 is_stmt 0 view .LVU10
  71 0016 064B     		ldr	r3, .L8+8
  72 0018 1B68     		ldr	r3, [r3]
  73              	.LVL0:
 263:Src/main.c    **** 
 264:Src/main.c    ****         /* Set the main stack pointer to to the application start address */
 265:Src/main.c    ****         __set_MSP(*(__IO uint32_t *)APPLICATION_START_ADDRESS);
  74              		.loc 1 265 9 is_stmt 1 view .LVU11
  75 001a 034A     		ldr	r2, .L8
  76 001c 1268     		ldr	r2, [r2]
  77              	.LVL1:
  78              	.LBB18:
  79              	.LBI18:
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 9


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 10


 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
  80              		.loc 2 188 57 view .LVU12
  81              	.LBB19:
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
  82              		.loc 2 190 3 view .LVU13
  83              		.syntax unified
  84              	@ 190 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  85 001e 82F30888 		MSR msp, r2
  86              	
  87              	@ 0 "" 2
  88              	.LVL2:
  89              		.loc 2 190 3 is_stmt 0 view .LVU14
  90              		.thumb
  91              		.syntax unified
  92              	.LBE19:
  93              	.LBE18:
 266:Src/main.c    **** 
 267:Src/main.c    ****         // Create function pointer for the main application
 268:Src/main.c    ****         void (*pmain_app)(void) = (void (*)(void))(jump_address);
  94              		.loc 1 268 9 is_stmt 1 view .LVU15
 269:Src/main.c    **** 
 270:Src/main.c    ****         // Now jump to the main application
 271:Src/main.c    ****         pmain_app();
  95              		.loc 1 271 9 view .LVU16
  96 0022 9847     		blx	r3
  97              	.LVL3:
  98              		.loc 1 271 9 is_stmt 0 view .LVU17
  99              	.LBE15:
 272:Src/main.c    ****     }
 273:Src/main.c    ****     
 274:Src/main.c    **** }
 100              		.loc 1 274 1 view .LVU18
 101 0024 80BD     		pop	{r7, pc}
 102              	.L9:
 103 0026 00BF     		.align	2
 104              	.L8:
 105 0028 00C00008 		.word	134266880
 106 002c 0000FE2F 		.word	805175296
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 11


 107 0030 04C00008 		.word	134266884
 108              		.cfi_endproc
 109              	.LFE128:
 111              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
 112              		.align	1
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv4-sp-d16
 118              	MX_SDIO_SD_Init:
 119              	.LFB137:
 275:Src/main.c    **** 
 276:Src/main.c    **** //goto application
 277:Src/main.c    ****  static uint8_t go_to(uint32_t myfunc)
 278:Src/main.c    **** {
 279:Src/main.c    **** 	uint8_t ret = 0;
 280:Src/main.c    **** 	void(*ptr)(void);
 281:Src/main.c    **** 	if((*(volatile uint32_t *)myfunc & 0x2ffe0000) == 0x20000000)
 282:Src/main.c    **** 	{
 283:Src/main.c    **** 
 284:Src/main.c    **** 		__set_MSP((*(volatile uint32_t *)myfunc));
 285:Src/main.c    **** 		ptr = (void(*)(void))(*(__IO uint32_t*)(myfunc+4));
 286:Src/main.c    **** 
 287:Src/main.c    **** 		ptr();
 288:Src/main.c    **** 	}
 289:Src/main.c    **** 	return ret;      
 290:Src/main.c    **** }
 291:Src/main.c    **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 292:Src/main.c    **** { 
 293:Src/main.c    ****   /* Check the parameters */
 294:Src/main.c    ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 295:Src/main.c    ****   assert_param(IS_NVIC_OFFSET(Offset));  
 296:Src/main.c    ****    
 297:Src/main.c    ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 298:Src/main.c    **** }
 299:Src/main.c    **** 
 300:Src/main.c    **** #define APP_ADDRESS (uint32_t)0x0800C000
 301:Src/main.c    **** #define APP_VECT (uint32_t)0xC000
 302:Src/main.c    **** //from mks sources
 303:Src/main.c    **** #define NVIC_VectTab_FLASH           ((uint32_t)0x08000000)
 304:Src/main.c    **** //Jump to application
 305:Src/main.c    **** void Bootloader_JumpToApplication(void)
 306:Src/main.c    **** {
 307:Src/main.c    ****     uint32_t  JumpAddress = *(__IO uint32_t*)(APP_ADDRESS + 4);
 308:Src/main.c    ****     pFunction Jump        = (pFunction)JumpAddress;
 309:Src/main.c    **** 
 310:Src/main.c    ****     HAL_RCC_DeInit();
 311:Src/main.c    ****     HAL_DeInit();
 312:Src/main.c    **** 
 313:Src/main.c    ****     SysTick->CTRL = 0;
 314:Src/main.c    ****     SysTick->LOAD = 0;
 315:Src/main.c    ****     SysTick->VAL  = 0;
 316:Src/main.c    ****   uint32_t address =  *(uint32_t *)(APP_ADDRESS);
 317:Src/main.c    ****    uint32_t val = * (uint32_t *) address;
 318:Src/main.c    ****    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0xC000);
 319:Src/main.c    ****    printf("about to jump");
 320:Src/main.c    **** //#if(SET_VECTOR_TABLE)
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 12


 321:Src/main.c    ****     //SCB->VTOR = APP_ADDRESS;
 322:Src/main.c    ****   //  SCB->VTOR = APP_VECT ;
 323:Src/main.c    **** //#endif
 324:Src/main.c    **** 
 325:Src/main.c    ****     //__set_MSP(*(__IO uint32_t*)APP_ADDRESS);
 326:Src/main.c    ****     __set_MSP(val);
 327:Src/main.c    ****     __asm volatile ("cpsid i");
 328:Src/main.c    ****     Jump();
 329:Src/main.c    **** }
 330:Src/main.c    **** 
 331:Src/main.c    ****  void Jump_To_App(void)
 332:Src/main.c    ****  {
 333:Src/main.c    ****      // f_mount(NULL, SPISD_Path, 1);
 334:Src/main.c    ****     //  HAL_SPI_MspDeInit(&hspi1);
 335:Src/main.c    ****      // HAL_TIM_Base_MspDeInit(&htim2);
 336:Src/main.c    ****       printf("Vect at %x",MAIN_PR_OFFSET);
 337:Src/main.c    ****       printf("jump @ %x",mcuFirstPageAddr);
 338:Src/main.c    ****       HAL_Delay(500);
 339:Src/main.c    ****       __HAL_RCC_GPIOA_CLK_DISABLE();
 340:Src/main.c    ****       __HAL_RCC_GPIOB_CLK_DISABLE();
 341:Src/main.c    ****       __HAL_RCC_GPIOC_CLK_DISABLE();
 342:Src/main.c    ****       __HAL_RCC_GPIOD_CLK_DISABLE();
 343:Src/main.c    ****       __HAL_RCC_GPIOE_CLK_DISABLE();
 344:Src/main.c    ****     HAL_SD_MspDeInit(&hsd);
 345:Src/main.c    ****      
 346:Src/main.c    **** 
 347:Src/main.c    ****       // Disabling SysTick interrupt
 348:Src/main.c    ****       SysTick->CTRL = 0;
 349:Src/main.c    ****       moveVectorTable(MAIN_PR_OFFSET);
 350:Src/main.c    ****        __set_MSP(*mcuFirstPageAddr);
 351:Src/main.c    ****       // booting really
 352:Src/main.c    ****       pFunction resetHandler = (pFunction) *(uint32_t *) (mcuFirstPageAddr + 4);
 353:Src/main.c    ****       //Callable resetHandler = (Callable) (*(mcuFirstPageAddr + 1) );
 354:Src/main.c    ****      
 355:Src/main.c    ****       resetHandler();
 356:Src/main.c    ****  }
 357:Src/main.c    **** 
 358:Src/main.c    **** /** 
 359:Src/main.c    ****   * Enable DMA controller clock
 360:Src/main.c    ****   */
 361:Src/main.c    **** static void MX_DMA_Init(void) 
 362:Src/main.c    **** {
 363:Src/main.c    ****   /* DMA controller clock enable */
 364:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* DMA interrupt init */
 367:Src/main.c    ****   /* DMA2_Stream3_IRQn interrupt configuration */
 368:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 369:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 370:Src/main.c    ****   /* DMA2_Stream6_IRQn interrupt configuration */
 371:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 5, 0);
 372:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 373:Src/main.c    **** 
 374:Src/main.c    **** }
 375:Src/main.c    **** 
 376:Src/main.c    **** /* SPI1 init function */
 377:Src/main.c    **** void MX_SPI1_Init(void)
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 13


 378:Src/main.c    **** {
 379:Src/main.c    **** 
 380:Src/main.c    ****   hspi1.Instance = SPI1;
 381:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 382:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 383:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 384:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 385:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 386:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 387:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 388:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 389:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 390:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 391:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 392:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 393:Src/main.c    ****   {
 394:Src/main.c    ****     Error_Handler();
 395:Src/main.c    ****   }
 396:Src/main.c    **** 
 397:Src/main.c    **** }
 398:Src/main.c    **** 
 399:Src/main.c    **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
 400:Src/main.c    **** {
 401:Src/main.c    **** 
 402:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 403:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 404:Src/main.c    ****   {
 405:Src/main.c    ****   
 406:Src/main.c    ****     /* SPI1 clock enable */
 407:Src/main.c    ****     __HAL_RCC_SPI1_CLK_ENABLE();
 408:Src/main.c    ****   
 409:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 410:Src/main.c    ****     /**SPI1 GPIO Configuration    
 411:Src/main.c    ****     PA5     ------> SPI1_SCK
 412:Src/main.c    ****     PA6     ------> SPI1_MISO
 413:Src/main.c    ****     PA7     ------> SPI1_MOSI 
 414:Src/main.c    ****     */
 415:Src/main.c    ****     GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 416:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 417:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 418:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 419:Src/main.c    **** 
 420:Src/main.c    ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
 421:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 422:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 423:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 424:Src/main.c    **** 
 425:Src/main.c    ****  
 426:Src/main.c    ****   }
 427:Src/main.c    **** }
 428:Src/main.c    **** 
 429:Src/main.c    **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 430:Src/main.c    **** {
 431:Src/main.c    **** 
 432:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 433:Src/main.c    ****   {
 434:Src/main.c    ****  
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 14


 435:Src/main.c    ****     /* Peripheral clock disable */
 436:Src/main.c    ****     __HAL_RCC_SPI1_CLK_DISABLE();
 437:Src/main.c    ****   
 438:Src/main.c    ****     /**SPI1 GPIO Configuration    
 439:Src/main.c    ****     PA5     ------> SPI1_SCK
 440:Src/main.c    ****     PA6     ------> SPI1_MISO
 441:Src/main.c    ****     PA7     ------> SPI1_MOSI 
 442:Src/main.c    ****     */
 443:Src/main.c    ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 444:Src/main.c    **** 
 445:Src/main.c    ****     /* SPI1 interrupt Deinit */
 446:Src/main.c    ****     HAL_NVIC_DisableIRQ(SPI1_IRQn);
 447:Src/main.c    ****   
 448:Src/main.c    ****   }
 449:Src/main.c    **** } 
 450:Src/main.c    **** /**
 451:Src/main.c    ****   * @brief SDIO Initialization Function
 452:Src/main.c    ****   * @param None
 453:Src/main.c    ****   * @retval None
 454:Src/main.c    ****   */
 455:Src/main.c    **** static void MX_SDIO_SD_Init(void)
 456:Src/main.c    **** {
 120              		.loc 1 456 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 457:Src/main.c    **** 
 458:Src/main.c    ****   /* USER CODE BEGIN SDIO_Init 0 */
 459:Src/main.c    **** 
 460:Src/main.c    ****   /* USER CODE END SDIO_Init 0 */
 461:Src/main.c    **** 
 462:Src/main.c    ****   /* USER CODE BEGIN SDIO_Init 1 */
 463:Src/main.c    **** 
 464:Src/main.c    ****   /* USER CODE END SDIO_Init 1 */
 465:Src/main.c    ****   hsd.Instance = SDIO;
 125              		.loc 1 465 3 view .LVU20
 126              		.loc 1 465 16 is_stmt 0 view .LVU21
 127 0000 054B     		ldr	r3, .L11
 128 0002 064A     		ldr	r2, .L11+4
 129 0004 1A60     		str	r2, [r3]
 466:Src/main.c    ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 130              		.loc 1 466 3 is_stmt 1 view .LVU22
 131              		.loc 1 466 22 is_stmt 0 view .LVU23
 132 0006 0022     		movs	r2, #0
 133 0008 5A60     		str	r2, [r3, #4]
 467:Src/main.c    ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 134              		.loc 1 467 3 is_stmt 1 view .LVU24
 135              		.loc 1 467 24 is_stmt 0 view .LVU25
 136 000a 9A60     		str	r2, [r3, #8]
 468:Src/main.c    ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 137              		.loc 1 468 3 is_stmt 1 view .LVU26
 138              		.loc 1 468 27 is_stmt 0 view .LVU27
 139 000c DA60     		str	r2, [r3, #12]
 469:Src/main.c    ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 140              		.loc 1 469 3 is_stmt 1 view .LVU28
 141              		.loc 1 469 20 is_stmt 0 view .LVU29
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 15


 142 000e 1A61     		str	r2, [r3, #16]
 470:Src/main.c    ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 143              		.loc 1 470 3 is_stmt 1 view .LVU30
 144              		.loc 1 470 32 is_stmt 0 view .LVU31
 145 0010 5A61     		str	r2, [r3, #20]
 471:Src/main.c    ****   hsd.Init.ClockDiv = 3;
 146              		.loc 1 471 3 is_stmt 1 view .LVU32
 147              		.loc 1 471 21 is_stmt 0 view .LVU33
 148 0012 0322     		movs	r2, #3
 149 0014 9A61     		str	r2, [r3, #24]
 472:Src/main.c    ****   /*
 473:Src/main.c    ****   int hal_error = HAL_SD_Init(&hsd);
 474:Src/main.c    ****   if (hal_error == HAL_OK)
 475:Src/main.c    ****   {
 476:Src/main.c    ****     printf("HAL_SD_Init ok\n\r");
 477:Src/main.c    ****   }
 478:Src/main.c    ****   else
 479:Src/main.c    ****   if (hal_error == HAL_ERROR)
 480:Src/main.c    ****   {
 481:Src/main.c    ****     printf("HAL_SD_Init fail result %d\n\n",hal_error);
 482:Src/main.c    ****   }
 483:Src/main.c    ****   hal_error = HAL_SD_InitCard(&hsd);
 484:Src/main.c    ****  if (hal_error==HAL_OK)
 485:Src/main.c    ****   {
 486:Src/main.c    ****     printf("HAL_SD_InitCard ok\n\r");
 487:Src/main.c    ****   }
 488:Src/main.c    ****   else
 489:Src/main.c    ****   {
 490:Src/main.c    ****     printf("HAL_SD_Init result %d\n\r",hal_error);
 491:Src/main.c    ****   }
 492:Src/main.c    ****  */
 493:Src/main.c    ****    /* USER CODE BEGIN SDIO_Init 2 */
 494:Src/main.c    **** 
 495:Src/main.c    ****   /* USER CODE END SDIO_Init 2 */
 496:Src/main.c    **** 
 497:Src/main.c    **** }
 150              		.loc 1 497 1 view .LVU34
 151 0016 7047     		bx	lr
 152              	.L12:
 153              		.align	2
 154              	.L11:
 155 0018 00000000 		.word	hsd
 156 001c 002C0140 		.word	1073818624
 157              		.cfi_endproc
 158              	.LFE137:
 160              		.section	.text.MX_GPIO_Init,"ax",%progbits
 161              		.align	1
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	MX_GPIO_Init:
 168              	.LFB143:
 498:Src/main.c    **** 
 499:Src/main.c    **** /**
 500:Src/main.c    ****   * @brief System Clock Configuration
 501:Src/main.c    ****   * @retval None
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 16


 502:Src/main.c    ****   */
 503:Src/main.c    **** void SystemClock_Config(void)
 504:Src/main.c    **** {
 505:Src/main.c    **** 
 506:Src/main.c    ****  RCC_OscInitTypeDef RCC_OscInitStruct;
 507:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 508:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 509:Src/main.c    **** 
 510:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 511:Src/main.c    ****     */
 512:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 513:Src/main.c    **** 
 514:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 515:Src/main.c    **** 
 516:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 517:Src/main.c    ****     */
 518:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 519:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 520:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 521:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 522:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 523:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 524:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 525:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 526:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 527:Src/main.c    ****   {
 528:Src/main.c    ****     Error_Handler();
 529:Src/main.c    ****   }
 530:Src/main.c    **** 
 531:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 532:Src/main.c    ****     */
 533:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 534:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 535:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 536:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 537:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 538:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 539:Src/main.c    **** 
 540:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 541:Src/main.c    ****   {
 542:Src/main.c    ****     Error_Handler();
 543:Src/main.c    ****   }
 544:Src/main.c    ****   
 545:Src/main.c    **** 
 546:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 547:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 548:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 549:Src/main.c    ****   {
 550:Src/main.c    ****     Error_Handler();
 551:Src/main.c    ****   }
 552:Src/main.c    **** 
 553:Src/main.c    ****     /**Configure the Systick interrupt time 
 554:Src/main.c    ****     */
 555:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 556:Src/main.c    **** 
 557:Src/main.c    ****     /**Configure the Systick 
 558:Src/main.c    ****     */
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 17


 559:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 560:Src/main.c    **** 
 561:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 562:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);   
 563:Src/main.c    **** }
 564:Src/main.c    **** 
 565:Src/main.c    **** /* RTC init function */
 566:Src/main.c    **** static void MX_RTC_Init(void)
 567:Src/main.c    **** {
 568:Src/main.c    **** 
 569:Src/main.c    ****  
 570:Src/main.c    ****   hrtc.Instance = RTC;
 571:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 572:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 573:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 574:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 575:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 576:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 577:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 578:Src/main.c    ****   {
 579:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 580:Src/main.c    ****   }
 581:Src/main.c    **** 
 582:Src/main.c    **** }
 583:Src/main.c    **** 
 584:Src/main.c    **** /**
 585:Src/main.c    ****   * @brief USART1 Initialization Function
 586:Src/main.c    ****   * @param None
 587:Src/main.c    ****   * @retval None
 588:Src/main.c    ****   */
 589:Src/main.c    **** void MX_USART1_UART_Init(void)
 590:Src/main.c    **** {
 591:Src/main.c    **** 
 592:Src/main.c    **** 
 593:Src/main.c    ****   huart1.Instance = USART1;
 594:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 595:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 596:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 597:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 598:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 599:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 600:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 601:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 602:Src/main.c    ****   {
 603:Src/main.c    ****     Error_Handler();
 604:Src/main.c    ****   }
 605:Src/main.c    **** 
 606:Src/main.c    **** 
 607:Src/main.c    **** }
 608:Src/main.c    **** 
 609:Src/main.c    **** /**
 610:Src/main.c    ****   * @brief USART3 Initialization Function
 611:Src/main.c    ****   * @param None
 612:Src/main.c    ****   * @retval None
 613:Src/main.c    ****   */
 614:Src/main.c    **** void MX_USART3_UART_Init(void)
 615:Src/main.c    **** {
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 18


 616:Src/main.c    **** 
 617:Src/main.c    **** 
 618:Src/main.c    ****   huart3.Instance = USART3;
 619:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 620:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 621:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 622:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 623:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 624:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 625:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 626:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 627:Src/main.c    ****   {
 628:Src/main.c    ****     Error_Handler();
 629:Src/main.c    ****   }
 630:Src/main.c    **** 
 631:Src/main.c    **** 
 632:Src/main.c    **** }
 633:Src/main.c    **** 
 634:Src/main.c    **** /**
 635:Src/main.c    ****   * @brief USART6 Initialization Function
 636:Src/main.c    ****   * @param None
 637:Src/main.c    ****   * @retval None
 638:Src/main.c    ****   */
 639:Src/main.c    ****  void MX_USART6_UART_Init(void)
 640:Src/main.c    **** {
 641:Src/main.c    **** 
 642:Src/main.c    **** 
 643:Src/main.c    ****   huart6.Instance = USART6;
 644:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 645:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 646:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 647:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 648:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 649:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 650:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 651:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 652:Src/main.c    ****   {
 653:Src/main.c    ****     Error_Handler();
 654:Src/main.c    ****   }
 655:Src/main.c    **** 
 656:Src/main.c    **** 
 657:Src/main.c    **** }
 658:Src/main.c    **** /** Configure pins as 
 659:Src/main.c    ****         * Analog 
 660:Src/main.c    ****         * Input 
 661:Src/main.c    ****         * Output
 662:Src/main.c    ****         * EVENT_OUT
 663:Src/main.c    ****         * EXTI
 664:Src/main.c    **** */
 665:Src/main.c    **** static void MX_GPIO_Init(void)
 666:Src/main.c    **** {
 169              		.loc 1 666 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 48
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 174              	.LCFI2:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 19


 175              		.cfi_def_cfa_offset 24
 176              		.cfi_offset 4, -24
 177              		.cfi_offset 5, -20
 178              		.cfi_offset 6, -16
 179              		.cfi_offset 7, -12
 180              		.cfi_offset 8, -8
 181              		.cfi_offset 14, -4
 182 0004 8CB0     		sub	sp, sp, #48
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 72
 667:Src/main.c    **** 
 668:Src/main.c    ****   /* GPIO Ports Clock Enable */
 669:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 185              		.loc 1 669 3 view .LVU36
 186              	.LBB20:
 187              		.loc 1 669 3 view .LVU37
 188 0006 0024     		movs	r4, #0
 189 0008 0194     		str	r4, [sp, #4]
 190              		.loc 1 669 3 view .LVU38
 191 000a 2E4B     		ldr	r3, .L15
 192 000c 1A6B     		ldr	r2, [r3, #48]
 193 000e 42F00402 		orr	r2, r2, #4
 194 0012 1A63     		str	r2, [r3, #48]
 195              		.loc 1 669 3 view .LVU39
 196 0014 1A6B     		ldr	r2, [r3, #48]
 197 0016 02F00402 		and	r2, r2, #4
 198 001a 0192     		str	r2, [sp, #4]
 199              		.loc 1 669 3 view .LVU40
 200 001c 019A     		ldr	r2, [sp, #4]
 201              	.LBE20:
 670:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 202              		.loc 1 670 3 view .LVU41
 203              	.LBB21:
 204              		.loc 1 670 3 view .LVU42
 205 001e 0294     		str	r4, [sp, #8]
 206              		.loc 1 670 3 view .LVU43
 207 0020 1A6B     		ldr	r2, [r3, #48]
 208 0022 42F08002 		orr	r2, r2, #128
 209 0026 1A63     		str	r2, [r3, #48]
 210              		.loc 1 670 3 view .LVU44
 211 0028 1A6B     		ldr	r2, [r3, #48]
 212 002a 02F08002 		and	r2, r2, #128
 213 002e 0292     		str	r2, [sp, #8]
 214              		.loc 1 670 3 view .LVU45
 215 0030 029A     		ldr	r2, [sp, #8]
 216              	.LBE21:
 671:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 217              		.loc 1 671 3 view .LVU46
 218              	.LBB22:
 219              		.loc 1 671 3 view .LVU47
 220 0032 0394     		str	r4, [sp, #12]
 221              		.loc 1 671 3 view .LVU48
 222 0034 1A6B     		ldr	r2, [r3, #48]
 223 0036 42F01002 		orr	r2, r2, #16
 224 003a 1A63     		str	r2, [r3, #48]
 225              		.loc 1 671 3 view .LVU49
 226 003c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 20


 227 003e 02F01002 		and	r2, r2, #16
 228 0042 0392     		str	r2, [sp, #12]
 229              		.loc 1 671 3 view .LVU50
 230 0044 039A     		ldr	r2, [sp, #12]
 231              	.LBE22:
 672:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 232              		.loc 1 672 3 view .LVU51
 233              	.LBB23:
 234              		.loc 1 672 3 view .LVU52
 235 0046 0494     		str	r4, [sp, #16]
 236              		.loc 1 672 3 view .LVU53
 237 0048 1A6B     		ldr	r2, [r3, #48]
 238 004a 42F00802 		orr	r2, r2, #8
 239 004e 1A63     		str	r2, [r3, #48]
 240              		.loc 1 672 3 view .LVU54
 241 0050 1A6B     		ldr	r2, [r3, #48]
 242 0052 02F00802 		and	r2, r2, #8
 243 0056 0492     		str	r2, [sp, #16]
 244              		.loc 1 672 3 view .LVU55
 245 0058 049A     		ldr	r2, [sp, #16]
 246              	.LBE23:
 673:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 247              		.loc 1 673 3 view .LVU56
 248              	.LBB24:
 249              		.loc 1 673 3 view .LVU57
 250 005a 0594     		str	r4, [sp, #20]
 251              		.loc 1 673 3 view .LVU58
 252 005c 1A6B     		ldr	r2, [r3, #48]
 253 005e 42F00102 		orr	r2, r2, #1
 254 0062 1A63     		str	r2, [r3, #48]
 255              		.loc 1 673 3 view .LVU59
 256 0064 1A6B     		ldr	r2, [r3, #48]
 257 0066 02F00102 		and	r2, r2, #1
 258 006a 0592     		str	r2, [sp, #20]
 259              		.loc 1 673 3 view .LVU60
 260 006c 059A     		ldr	r2, [sp, #20]
 261              	.LBE24:
 674:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 262              		.loc 1 674 3 view .LVU61
 263              	.LBB25:
 264              		.loc 1 674 3 view .LVU62
 265 006e 0694     		str	r4, [sp, #24]
 266              		.loc 1 674 3 view .LVU63
 267 0070 1A6B     		ldr	r2, [r3, #48]
 268 0072 42F00202 		orr	r2, r2, #2
 269 0076 1A63     		str	r2, [r3, #48]
 270              		.loc 1 674 3 view .LVU64
 271 0078 1B6B     		ldr	r3, [r3, #48]
 272 007a 03F00203 		and	r3, r3, #2
 273 007e 0693     		str	r3, [sp, #24]
 274              		.loc 1 674 3 view .LVU65
 275 0080 069B     		ldr	r3, [sp, #24]
 276              	.LBE25:
 675:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 277              		.loc 1 675 3 view .LVU66
 278              		.loc 1 675 20 is_stmt 0 view .LVU67
 279 0082 0B94     		str	r4, [sp, #44]
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 21


 676:Src/main.c    ****    GPIO_InitStruct.Pin = GPIO_PIN_1;
 280              		.loc 1 676 4 is_stmt 1 view .LVU68
 281              		.loc 1 676 24 is_stmt 0 view .LVU69
 282 0084 0225     		movs	r5, #2
 283 0086 0795     		str	r5, [sp, #28]
 677:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 284              		.loc 1 677 5 is_stmt 1 view .LVU70
 285              		.loc 1 677 26 is_stmt 0 view .LVU71
 286 0088 0895     		str	r5, [sp, #32]
 678:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 287              		.loc 1 678 5 is_stmt 1 view .LVU72
 288              		.loc 1 678 26 is_stmt 0 view .LVU73
 289 008a 4FF00108 		mov	r8, #1
 290 008e CDF82480 		str	r8, [sp, #36]
 679:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 291              		.loc 1 679 5 is_stmt 1 view .LVU74
 292              		.loc 1 679 27 is_stmt 0 view .LVU75
 293 0092 0326     		movs	r6, #3
 294 0094 0A96     		str	r6, [sp, #40]
 680:Src/main.c    **** HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 295              		.loc 1 680 1 is_stmt 1 view .LVU76
 296 0096 0C4F     		ldr	r7, .L15+4
 297 0098 07A9     		add	r1, sp, #28
 298 009a 3846     		mov	r0, r7
 299 009c FFF7FEFF 		bl	HAL_GPIO_Init
 300              	.LVL4:
 681:Src/main.c    **** HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_SET); 
 301              		.loc 1 681 1 view .LVU77
 302 00a0 4246     		mov	r2, r8
 303 00a2 2946     		mov	r1, r5
 304 00a4 3846     		mov	r0, r7
 305 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 306              	.LVL5:
 682:Src/main.c    **** 
 683:Src/main.c    ****  GPIO_InitStruct.Pin = GPIO_PIN_3;
 307              		.loc 1 683 2 view .LVU78
 308              		.loc 1 683 22 is_stmt 0 view .LVU79
 309 00aa 0823     		movs	r3, #8
 310 00ac 0793     		str	r3, [sp, #28]
 684:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 311              		.loc 1 684 5 is_stmt 1 view .LVU80
 312              		.loc 1 684 26 is_stmt 0 view .LVU81
 313 00ae 0894     		str	r4, [sp, #32]
 685:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 314              		.loc 1 685 5 is_stmt 1 view .LVU82
 315              		.loc 1 685 26 is_stmt 0 view .LVU83
 316 00b0 0994     		str	r4, [sp, #36]
 686:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 317              		.loc 1 686 5 is_stmt 1 view .LVU84
 318              		.loc 1 686 27 is_stmt 0 view .LVU85
 319 00b2 0A96     		str	r6, [sp, #40]
 687:Src/main.c    ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 320              		.loc 1 687 5 is_stmt 1 view .LVU86
 321 00b4 07A9     		add	r1, sp, #28
 322 00b6 0548     		ldr	r0, .L15+8
 323 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 324              	.LVL6:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 22


 688:Src/main.c    ****   /* USER CODE BEGIN SDIO_MspInit 1 */
 689:Src/main.c    ****   
 690:Src/main.c    **** }
 325              		.loc 1 690 1 is_stmt 0 view .LVU87
 326 00bc 0CB0     		add	sp, sp, #48
 327              	.LCFI4:
 328              		.cfi_def_cfa_offset 24
 329              		@ sp needed
 330 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 331              	.L16:
 332 00c2 00BF     		.align	2
 333              	.L15:
 334 00c4 00380240 		.word	1073887232
 335 00c8 00000240 		.word	1073872896
 336 00cc 000C0240 		.word	1073875968
 337              		.cfi_endproc
 338              	.LFE143:
 340              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 341              		.align	1
 342              		.global	NVIC_SetVectorTable
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu fpv4-sp-d16
 348              	NVIC_SetVectorTable:
 349              	.LVL7:
 350              	.LFB130:
 292:Src/main.c    ****   /* Check the parameters */
 351              		.loc 1 292 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 294:Src/main.c    ****   assert_param(IS_NVIC_OFFSET(Offset));  
 356              		.loc 1 294 3 view .LVU89
 295:Src/main.c    ****    
 357              		.loc 1 295 3 view .LVU90
 297:Src/main.c    **** }
 358              		.loc 1 297 3 view .LVU91
 297:Src/main.c    **** }
 359              		.loc 1 297 38 is_stmt 0 view .LVU92
 360 0000 21F06041 		bic	r1, r1, #-536870912
 361              	.LVL8:
 297:Src/main.c    **** }
 362              		.loc 1 297 38 view .LVU93
 363 0004 21F07F01 		bic	r1, r1, #127
 297:Src/main.c    **** }
 364              		.loc 1 297 28 view .LVU94
 365 0008 0143     		orrs	r1, r1, r0
 297:Src/main.c    **** }
 366              		.loc 1 297 13 view .LVU95
 367 000a 014B     		ldr	r3, .L18
 368 000c 9960     		str	r1, [r3, #8]
 298:Src/main.c    **** 
 369              		.loc 1 298 1 view .LVU96
 370 000e 7047     		bx	lr
 371              	.L19:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 23


 372              		.align	2
 373              	.L18:
 374 0010 00ED00E0 		.word	-536810240
 375              		.cfi_endproc
 376              	.LFE130:
 378              		.section	.text.Bootloader_JumpToApplication,"ax",%progbits
 379              		.align	1
 380              		.global	Bootloader_JumpToApplication
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	Bootloader_JumpToApplication:
 387              	.LFB131:
 306:Src/main.c    ****     uint32_t  JumpAddress = *(__IO uint32_t*)(APP_ADDRESS + 4);
 388              		.loc 1 306 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392 0000 B0B5     		push	{r4, r5, r7, lr}
 393              	.LCFI5:
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 4, -16
 396              		.cfi_offset 5, -12
 397              		.cfi_offset 7, -8
 398              		.cfi_offset 14, -4
 399 0002 00AF     		add	r7, sp, #0
 400              	.LCFI6:
 401              		.cfi_def_cfa_register 7
 307:Src/main.c    ****     pFunction Jump        = (pFunction)JumpAddress;
 402              		.loc 1 307 5 view .LVU98
 307:Src/main.c    ****     pFunction Jump        = (pFunction)JumpAddress;
 403              		.loc 1 307 15 is_stmt 0 view .LVU99
 404 0004 0D4B     		ldr	r3, .L22
 405 0006 1C68     		ldr	r4, [r3]
 406              	.LVL9:
 308:Src/main.c    **** 
 407              		.loc 1 308 5 is_stmt 1 view .LVU100
 310:Src/main.c    ****     HAL_DeInit();
 408              		.loc 1 310 5 view .LVU101
 409 0008 FFF7FEFF 		bl	HAL_RCC_DeInit
 410              	.LVL10:
 311:Src/main.c    **** 
 411              		.loc 1 311 5 view .LVU102
 412 000c FFF7FEFF 		bl	HAL_DeInit
 413              	.LVL11:
 313:Src/main.c    ****     SysTick->LOAD = 0;
 414              		.loc 1 313 5 view .LVU103
 313:Src/main.c    ****     SysTick->LOAD = 0;
 415              		.loc 1 313 19 is_stmt 0 view .LVU104
 416 0010 0B4B     		ldr	r3, .L22+4
 417 0012 0022     		movs	r2, #0
 418 0014 1A60     		str	r2, [r3]
 314:Src/main.c    ****     SysTick->VAL  = 0;
 419              		.loc 1 314 5 is_stmt 1 view .LVU105
 314:Src/main.c    ****     SysTick->VAL  = 0;
 420              		.loc 1 314 19 is_stmt 0 view .LVU106
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 24


 421 0016 5A60     		str	r2, [r3, #4]
 315:Src/main.c    ****   uint32_t address =  *(uint32_t *)(APP_ADDRESS);
 422              		.loc 1 315 5 is_stmt 1 view .LVU107
 315:Src/main.c    ****   uint32_t address =  *(uint32_t *)(APP_ADDRESS);
 423              		.loc 1 315 19 is_stmt 0 view .LVU108
 424 0018 9A60     		str	r2, [r3, #8]
 316:Src/main.c    ****    uint32_t val = * (uint32_t *) address;
 425              		.loc 1 316 3 is_stmt 1 view .LVU109
 316:Src/main.c    ****    uint32_t val = * (uint32_t *) address;
 426              		.loc 1 316 12 is_stmt 0 view .LVU110
 427 001a 0A4B     		ldr	r3, .L22+8
 428 001c 1B68     		ldr	r3, [r3]
 429              	.LVL12:
 317:Src/main.c    ****    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0xC000);
 430              		.loc 1 317 4 is_stmt 1 view .LVU111
 317:Src/main.c    ****    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0xC000);
 431              		.loc 1 317 13 is_stmt 0 view .LVU112
 432 001e 1D68     		ldr	r5, [r3]
 433              	.LVL13:
 318:Src/main.c    ****    printf("about to jump");
 434              		.loc 1 318 4 is_stmt 1 view .LVU113
 435 0020 4FF44041 		mov	r1, #49152
 436 0024 4FF00060 		mov	r0, #134217728
 437 0028 FFF7FEFF 		bl	NVIC_SetVectorTable
 438              	.LVL14:
 319:Src/main.c    **** //#if(SET_VECTOR_TABLE)
 439              		.loc 1 319 4 view .LVU114
 440 002c 0648     		ldr	r0, .L22+12
 441 002e FFF7FEFF 		bl	printf
 442              	.LVL15:
 326:Src/main.c    ****     __asm volatile ("cpsid i");
 443              		.loc 1 326 5 view .LVU115
 444              	.LBB26:
 445              	.LBI26:
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 446              		.loc 2 188 57 view .LVU116
 447              	.LBB27:
 448              		.loc 2 190 3 view .LVU117
 449              		.syntax unified
 450              	@ 190 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 451 0032 85F30888 		MSR msp, r5
 452              	
 453              	@ 0 "" 2
 454              	.LVL16:
 455              		.loc 2 190 3 is_stmt 0 view .LVU118
 456              		.thumb
 457              		.syntax unified
 458              	.LBE27:
 459              	.LBE26:
 327:Src/main.c    ****     Jump();
 460              		.loc 1 327 5 is_stmt 1 view .LVU119
 461              		.syntax unified
 462              	@ 327 "Src/main.c" 1
 463 0036 72B6     		cpsid i
 464              	@ 0 "" 2
 328:Src/main.c    **** }
 465              		.loc 1 328 5 view .LVU120
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 25


 466              		.thumb
 467              		.syntax unified
 468 0038 A047     		blx	r4
 469              	.LVL17:
 329:Src/main.c    **** 
 470              		.loc 1 329 1 is_stmt 0 view .LVU121
 471 003a B0BD     		pop	{r4, r5, r7, pc}
 472              	.LVL18:
 473              	.L23:
 329:Src/main.c    **** 
 474              		.loc 1 329 1 view .LVU122
 475              		.align	2
 476              	.L22:
 477 003c 04C00008 		.word	134266884
 478 0040 10E000E0 		.word	-536813552
 479 0044 00C00008 		.word	134266880
 480 0048 00000000 		.word	.LC0
 481              		.cfi_endproc
 482              	.LFE131:
 484              		.section	.text.Jump_To_App,"ax",%progbits
 485              		.align	1
 486              		.global	Jump_To_App
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	Jump_To_App:
 493              	.LFB132:
 332:Src/main.c    ****      // f_mount(NULL, SPISD_Path, 1);
 494              		.loc 1 332 2 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 98B5     		push	{r3, r4, r7, lr}
 499              	.LCFI7:
 500              		.cfi_def_cfa_offset 16
 501              		.cfi_offset 3, -16
 502              		.cfi_offset 4, -12
 503              		.cfi_offset 7, -8
 504              		.cfi_offset 14, -4
 505 0002 00AF     		add	r7, sp, #0
 506              	.LCFI8:
 507              		.cfi_def_cfa_register 7
 336:Src/main.c    ****       printf("jump @ %x",mcuFirstPageAddr);
 508              		.loc 1 336 7 view .LVU124
 509 0004 4FF44041 		mov	r1, #49152
 510 0008 1848     		ldr	r0, .L26
 511 000a FFF7FEFF 		bl	printf
 512              	.LVL19:
 337:Src/main.c    ****       HAL_Delay(500);
 513              		.loc 1 337 7 view .LVU125
 514 000e 184C     		ldr	r4, .L26+4
 515 0010 2168     		ldr	r1, [r4]
 516 0012 1848     		ldr	r0, .L26+8
 517 0014 FFF7FEFF 		bl	printf
 518              	.LVL20:
 338:Src/main.c    ****       __HAL_RCC_GPIOA_CLK_DISABLE();
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 26


 519              		.loc 1 338 7 view .LVU126
 520 0018 4FF4FA70 		mov	r0, #500
 521 001c FFF7FEFF 		bl	HAL_Delay
 522              	.LVL21:
 339:Src/main.c    ****       __HAL_RCC_GPIOB_CLK_DISABLE();
 523              		.loc 1 339 7 view .LVU127
 524 0020 154B     		ldr	r3, .L26+12
 525 0022 1A6B     		ldr	r2, [r3, #48]
 526 0024 22F00102 		bic	r2, r2, #1
 527 0028 1A63     		str	r2, [r3, #48]
 340:Src/main.c    ****       __HAL_RCC_GPIOC_CLK_DISABLE();
 528              		.loc 1 340 7 view .LVU128
 529 002a 1A6B     		ldr	r2, [r3, #48]
 530 002c 22F00202 		bic	r2, r2, #2
 531 0030 1A63     		str	r2, [r3, #48]
 341:Src/main.c    ****       __HAL_RCC_GPIOD_CLK_DISABLE();
 532              		.loc 1 341 7 view .LVU129
 533 0032 1A6B     		ldr	r2, [r3, #48]
 534 0034 22F00402 		bic	r2, r2, #4
 535 0038 1A63     		str	r2, [r3, #48]
 342:Src/main.c    ****       __HAL_RCC_GPIOE_CLK_DISABLE();
 536              		.loc 1 342 7 view .LVU130
 537 003a 1A6B     		ldr	r2, [r3, #48]
 538 003c 22F00802 		bic	r2, r2, #8
 539 0040 1A63     		str	r2, [r3, #48]
 343:Src/main.c    ****     HAL_SD_MspDeInit(&hsd);
 540              		.loc 1 343 7 view .LVU131
 541 0042 1A6B     		ldr	r2, [r3, #48]
 542 0044 22F01002 		bic	r2, r2, #16
 543 0048 1A63     		str	r2, [r3, #48]
 344:Src/main.c    ****      
 544              		.loc 1 344 5 view .LVU132
 545 004a 0C48     		ldr	r0, .L26+16
 546 004c FFF7FEFF 		bl	HAL_SD_MspDeInit
 547              	.LVL22:
 348:Src/main.c    ****       moveVectorTable(MAIN_PR_OFFSET);
 548              		.loc 1 348 7 view .LVU133
 348:Src/main.c    ****       moveVectorTable(MAIN_PR_OFFSET);
 549              		.loc 1 348 21 is_stmt 0 view .LVU134
 550 0050 0B4B     		ldr	r3, .L26+20
 551 0052 0022     		movs	r2, #0
 552 0054 1A60     		str	r2, [r3]
 349:Src/main.c    ****        __set_MSP(*mcuFirstPageAddr);
 553              		.loc 1 349 7 is_stmt 1 view .LVU135
 554              	.LVL23:
 555              	.LBB28:
 556              	.LBI28:
 247:Src/main.c    **** {
 557              		.loc 1 247 13 view .LVU136
 558              	.LBB29:
 250:Src/main.c    **** }
 559              		.loc 1 250 5 view .LVU137
 250:Src/main.c    **** }
 560              		.loc 1 250 15 is_stmt 0 view .LVU138
 561 0056 03F54F63 		add	r3, r3, #3312
 562 005a 0A4A     		ldr	r2, .L26+24
 563 005c 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 27


 564              	.LVL24:
 250:Src/main.c    **** }
 565              		.loc 1 250 15 view .LVU139
 566              	.LBE29:
 567              	.LBE28:
 350:Src/main.c    ****       // booting really
 568              		.loc 1 350 8 is_stmt 1 view .LVU140
 569 005e 2368     		ldr	r3, [r4]
 570 0060 1A68     		ldr	r2, [r3]
 571              	.LVL25:
 572              	.LBB30:
 573              	.LBI30:
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 574              		.loc 2 188 57 view .LVU141
 575              	.LBB31:
 576              		.loc 2 190 3 view .LVU142
 577              		.syntax unified
 578              	@ 190 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 579 0062 82F30888 		MSR msp, r2
 580              	
 581              	@ 0 "" 2
 582              	.LVL26:
 583              		.loc 2 190 3 is_stmt 0 view .LVU143
 584              		.thumb
 585              		.syntax unified
 586              	.LBE31:
 587              	.LBE30:
 352:Src/main.c    ****       //Callable resetHandler = (Callable) (*(mcuFirstPageAddr + 1) );
 588              		.loc 1 352 7 is_stmt 1 view .LVU144
 352:Src/main.c    ****       //Callable resetHandler = (Callable) (*(mcuFirstPageAddr + 1) );
 589              		.loc 1 352 44 is_stmt 0 view .LVU145
 590 0066 1B69     		ldr	r3, [r3, #16]
 591              	.LVL27:
 355:Src/main.c    ****  }
 592              		.loc 1 355 7 is_stmt 1 view .LVU146
 593 0068 9847     		blx	r3
 594              	.LVL28:
 356:Src/main.c    **** 
 595              		.loc 1 356 2 is_stmt 0 view .LVU147
 596 006a 98BD     		pop	{r3, r4, r7, pc}
 597              	.L27:
 598              		.align	2
 599              	.L26:
 600 006c 00000000 		.word	.LC1
 601 0070 00000000 		.word	.LANCHOR0
 602 0074 0C000000 		.word	.LC2
 603 0078 00380240 		.word	1073887232
 604 007c 00000000 		.word	hsd
 605 0080 10E000E0 		.word	-536813552
 606 0084 00C00008 		.word	134266880
 607              		.cfi_endproc
 608              	.LFE132:
 610              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 611              		.align	1
 612              		.global	HAL_SPI_MspInit
 613              		.syntax unified
 614              		.thumb
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 28


 615              		.thumb_func
 616              		.fpu fpv4-sp-d16
 618              	HAL_SPI_MspInit:
 619              	.LVL29:
 620              	.LFB135:
 400:Src/main.c    **** 
 621              		.loc 1 400 1 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 32
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 400:Src/main.c    **** 
 625              		.loc 1 400 1 is_stmt 0 view .LVU149
 626 0000 30B5     		push	{r4, r5, lr}
 627              	.LCFI9:
 628              		.cfi_def_cfa_offset 12
 629              		.cfi_offset 4, -12
 630              		.cfi_offset 5, -8
 631              		.cfi_offset 14, -4
 632 0002 89B0     		sub	sp, sp, #36
 633              	.LCFI10:
 634              		.cfi_def_cfa_offset 48
 402:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 635              		.loc 1 402 3 is_stmt 1 view .LVU150
 402:Src/main.c    ****   if(spiHandle->Instance==SPI1)
 636              		.loc 1 402 20 is_stmt 0 view .LVU151
 637 0004 0023     		movs	r3, #0
 638 0006 0393     		str	r3, [sp, #12]
 639 0008 0493     		str	r3, [sp, #16]
 640 000a 0593     		str	r3, [sp, #20]
 641 000c 0693     		str	r3, [sp, #24]
 642 000e 0793     		str	r3, [sp, #28]
 403:Src/main.c    ****   {
 643              		.loc 1 403 3 is_stmt 1 view .LVU152
 403:Src/main.c    ****   {
 644              		.loc 1 403 15 is_stmt 0 view .LVU153
 645 0010 0268     		ldr	r2, [r0]
 403:Src/main.c    ****   {
 646              		.loc 1 403 5 view .LVU154
 647 0012 174B     		ldr	r3, .L32
 648 0014 9A42     		cmp	r2, r3
 649 0016 01D0     		beq	.L31
 650              	.LVL30:
 651              	.L28:
 427:Src/main.c    **** 
 652              		.loc 1 427 1 view .LVU155
 653 0018 09B0     		add	sp, sp, #36
 654              	.LCFI11:
 655              		.cfi_remember_state
 656              		.cfi_def_cfa_offset 12
 657              		@ sp needed
 658 001a 30BD     		pop	{r4, r5, pc}
 659              	.LVL31:
 660              	.L31:
 661              	.LCFI12:
 662              		.cfi_restore_state
 407:Src/main.c    ****   
 663              		.loc 1 407 5 is_stmt 1 view .LVU156
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 29


 664              	.LBB32:
 407:Src/main.c    ****   
 665              		.loc 1 407 5 view .LVU157
 666 001c 0024     		movs	r4, #0
 667 001e 0194     		str	r4, [sp, #4]
 407:Src/main.c    ****   
 668              		.loc 1 407 5 view .LVU158
 669 0020 03F58433 		add	r3, r3, #67584
 670 0024 5A6C     		ldr	r2, [r3, #68]
 671 0026 42F48052 		orr	r2, r2, #4096
 672 002a 5A64     		str	r2, [r3, #68]
 407:Src/main.c    ****   
 673              		.loc 1 407 5 view .LVU159
 674 002c 5A6C     		ldr	r2, [r3, #68]
 675 002e 02F48052 		and	r2, r2, #4096
 676 0032 0192     		str	r2, [sp, #4]
 407:Src/main.c    ****   
 677              		.loc 1 407 5 view .LVU160
 678 0034 019A     		ldr	r2, [sp, #4]
 679              	.LBE32:
 409:Src/main.c    ****     /**SPI1 GPIO Configuration    
 680              		.loc 1 409 5 view .LVU161
 681              	.LBB33:
 409:Src/main.c    ****     /**SPI1 GPIO Configuration    
 682              		.loc 1 409 5 view .LVU162
 683 0036 0294     		str	r4, [sp, #8]
 409:Src/main.c    ****     /**SPI1 GPIO Configuration    
 684              		.loc 1 409 5 view .LVU163
 685 0038 1A6B     		ldr	r2, [r3, #48]
 686 003a 42F00102 		orr	r2, r2, #1
 687 003e 1A63     		str	r2, [r3, #48]
 409:Src/main.c    ****     /**SPI1 GPIO Configuration    
 688              		.loc 1 409 5 view .LVU164
 689 0040 1B6B     		ldr	r3, [r3, #48]
 690 0042 03F00103 		and	r3, r3, #1
 691 0046 0293     		str	r3, [sp, #8]
 409:Src/main.c    ****     /**SPI1 GPIO Configuration    
 692              		.loc 1 409 5 view .LVU165
 693 0048 029B     		ldr	r3, [sp, #8]
 694              	.LBE33:
 415:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 695              		.loc 1 415 5 view .LVU166
 415:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 696              		.loc 1 415 25 is_stmt 0 view .LVU167
 697 004a A023     		movs	r3, #160
 698 004c 0393     		str	r3, [sp, #12]
 416:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 699              		.loc 1 416 5 is_stmt 1 view .LVU168
 416:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 700              		.loc 1 416 26 is_stmt 0 view .LVU169
 701 004e 0223     		movs	r3, #2
 702 0050 0493     		str	r3, [sp, #16]
 417:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 703              		.loc 1 417 5 is_stmt 1 view .LVU170
 417:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 704              		.loc 1 417 27 is_stmt 0 view .LVU171
 705 0052 0693     		str	r3, [sp, #24]
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 30


 418:Src/main.c    **** 
 706              		.loc 1 418 5 is_stmt 1 view .LVU172
 707 0054 074D     		ldr	r5, .L32+4
 708 0056 03A9     		add	r1, sp, #12
 709 0058 2846     		mov	r0, r5
 710              	.LVL32:
 418:Src/main.c    **** 
 711              		.loc 1 418 5 is_stmt 0 view .LVU173
 712 005a FFF7FEFF 		bl	HAL_GPIO_Init
 713              	.LVL33:
 420:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 714              		.loc 1 420 5 is_stmt 1 view .LVU174
 420:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 715              		.loc 1 420 25 is_stmt 0 view .LVU175
 716 005e 4023     		movs	r3, #64
 717 0060 0393     		str	r3, [sp, #12]
 421:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 718              		.loc 1 421 5 is_stmt 1 view .LVU176
 421:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 719              		.loc 1 421 26 is_stmt 0 view .LVU177
 720 0062 0494     		str	r4, [sp, #16]
 422:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 721              		.loc 1 422 5 is_stmt 1 view .LVU178
 422:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 722              		.loc 1 422 26 is_stmt 0 view .LVU179
 723 0064 0594     		str	r4, [sp, #20]
 423:Src/main.c    **** 
 724              		.loc 1 423 5 is_stmt 1 view .LVU180
 725 0066 03A9     		add	r1, sp, #12
 726 0068 2846     		mov	r0, r5
 727 006a FFF7FEFF 		bl	HAL_GPIO_Init
 728              	.LVL34:
 427:Src/main.c    **** 
 729              		.loc 1 427 1 is_stmt 0 view .LVU181
 730 006e D3E7     		b	.L28
 731              	.L33:
 732              		.align	2
 733              	.L32:
 734 0070 00300140 		.word	1073819648
 735 0074 00000240 		.word	1073872896
 736              		.cfi_endproc
 737              	.LFE135:
 739              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 740              		.align	1
 741              		.global	HAL_SPI_MspDeInit
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	HAL_SPI_MspDeInit:
 748              	.LVL35:
 749              	.LFB136:
 430:Src/main.c    **** 
 750              		.loc 1 430 1 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 31


 430:Src/main.c    **** 
 754              		.loc 1 430 1 is_stmt 0 view .LVU183
 755 0000 08B5     		push	{r3, lr}
 756              	.LCFI13:
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 3, -8
 759              		.cfi_offset 14, -4
 432:Src/main.c    ****   {
 760              		.loc 1 432 3 is_stmt 1 view .LVU184
 432:Src/main.c    ****   {
 761              		.loc 1 432 15 is_stmt 0 view .LVU185
 762 0002 0268     		ldr	r2, [r0]
 432:Src/main.c    ****   {
 763              		.loc 1 432 5 view .LVU186
 764 0004 084B     		ldr	r3, .L38
 765 0006 9A42     		cmp	r2, r3
 766 0008 00D0     		beq	.L37
 767              	.LVL36:
 768              	.L34:
 449:Src/main.c    **** /**
 769              		.loc 1 449 1 view .LVU187
 770 000a 08BD     		pop	{r3, pc}
 771              	.LVL37:
 772              	.L37:
 436:Src/main.c    ****   
 773              		.loc 1 436 5 is_stmt 1 view .LVU188
 774 000c 074A     		ldr	r2, .L38+4
 775 000e 536C     		ldr	r3, [r2, #68]
 776 0010 23F48053 		bic	r3, r3, #4096
 777 0014 5364     		str	r3, [r2, #68]
 443:Src/main.c    **** 
 778              		.loc 1 443 5 view .LVU189
 779 0016 E021     		movs	r1, #224
 780 0018 0548     		ldr	r0, .L38+8
 781              	.LVL38:
 443:Src/main.c    **** 
 782              		.loc 1 443 5 is_stmt 0 view .LVU190
 783 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 784              	.LVL39:
 446:Src/main.c    ****   
 785              		.loc 1 446 5 is_stmt 1 view .LVU191
 786 001e 2320     		movs	r0, #35
 787 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 788              	.LVL40:
 449:Src/main.c    **** /**
 789              		.loc 1 449 1 is_stmt 0 view .LVU192
 790 0024 F1E7     		b	.L34
 791              	.L39:
 792 0026 00BF     		.align	2
 793              	.L38:
 794 0028 00300140 		.word	1073819648
 795 002c 00380240 		.word	1073887232
 796 0030 00000240 		.word	1073872896
 797              		.cfi_endproc
 798              	.LFE136:
 800              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 801              		.align	1
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 32


 802              		.global	HAL_TIM_PeriodElapsedCallback
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	HAL_TIM_PeriodElapsedCallback:
 809              	.LVL41:
 810              	.LFB146:
 691:Src/main.c    **** 
 692:Src/main.c    **** 
 693:Src/main.c    **** static void MX_GPIO_Deinit(void)
 694:Src/main.c    **** {
 695:Src/main.c    **** 
 696:Src/main.c    ****   /* GPIO Ports Clock Enable */
 697:Src/main.c    ****    __HAL_RCC_GPIOA_CLK_DISABLE();
 698:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_DISABLE();
 699:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_DISABLE();
 700:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_DISABLE();
 701:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_DISABLE();
 702:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_DISABLE();
 703:Src/main.c    ****  
 704:Src/main.c    **** }
 705:Src/main.c    **** /* FSMC initialization function */
 706:Src/main.c    **** static void MX_FSMC_Init(void)
 707:Src/main.c    **** {
 708:Src/main.c    ****   FSMC_NORSRAM_TimingTypeDef Timing;
 709:Src/main.c    **** 
 710:Src/main.c    ****   /** Perform the SRAM1 memory initialization sequence
 711:Src/main.c    ****   */
 712:Src/main.c    ****   hsram1.Instance = FSMC_NORSRAM_DEVICE;
 713:Src/main.c    ****   hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 714:Src/main.c    ****   /* hsram1.Init */
 715:Src/main.c    ****   hsram1.Init.NSBank = FSMC_NORSRAM_BANK1;
 716:Src/main.c    ****   hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 717:Src/main.c    ****   hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 718:Src/main.c    ****   hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 719:Src/main.c    ****   hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 720:Src/main.c    ****   hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 721:Src/main.c    ****   hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 722:Src/main.c    ****   hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 723:Src/main.c    ****   hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 724:Src/main.c    ****   hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 725:Src/main.c    ****   hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 726:Src/main.c    ****   hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 727:Src/main.c    ****   hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 728:Src/main.c    ****   hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 729:Src/main.c    ****   /* Timing */
 730:Src/main.c    ****   Timing.AddressSetupTime = 5;
 731:Src/main.c    ****   Timing.AddressHoldTime = 15;
 732:Src/main.c    ****   Timing.DataSetupTime = 8;
 733:Src/main.c    ****   Timing.BusTurnAroundDuration = 1;
 734:Src/main.c    ****   Timing.CLKDivision = 16;
 735:Src/main.c    ****   Timing.DataLatency = 17;
 736:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
 737:Src/main.c    ****   /* ExtTiming */
 738:Src/main.c    **** 
 739:Src/main.c    ****   if (HAL_SRAM_Init(&hsram1, &Timing, NULL) != HAL_OK)
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 33


 740:Src/main.c    ****   {
 741:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 742:Src/main.c    ****   }
 743:Src/main.c    **** 
 744:Src/main.c    **** }
 745:Src/main.c    **** 
 746:Src/main.c    **** /* USER CODE BEGIN 4 */
 747:Src/main.c    **** 
 748:Src/main.c    **** /* USER CODE END 4 */
 749:Src/main.c    **** 
 750:Src/main.c    **** /**
 751:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 752:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
 753:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 754:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 755:Src/main.c    ****   * @param  htim : TIM handle
 756:Src/main.c    ****   * @retval None
 757:Src/main.c    ****   */
 758:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 759:Src/main.c    **** {
 811              		.loc 1 759 1 is_stmt 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		.loc 1 759 1 is_stmt 0 view .LVU194
 816 0000 08B5     		push	{r3, lr}
 817              	.LCFI14:
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 3, -8
 820              		.cfi_offset 14, -4
 760:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 761:Src/main.c    **** 
 762:Src/main.c    ****   /* USER CODE END Callback 0 */
 763:Src/main.c    ****   if (htim->Instance == TIM6) {
 821              		.loc 1 763 3 is_stmt 1 view .LVU195
 822              		.loc 1 763 11 is_stmt 0 view .LVU196
 823 0002 0268     		ldr	r2, [r0]
 824              		.loc 1 763 6 view .LVU197
 825 0004 034B     		ldr	r3, .L44
 826 0006 9A42     		cmp	r2, r3
 827 0008 00D0     		beq	.L43
 828              	.LVL42:
 829              	.L40:
 764:Src/main.c    ****     HAL_IncTick();
 765:Src/main.c    ****   }
 766:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 767:Src/main.c    **** 
 768:Src/main.c    ****   /* USER CODE END Callback 1 */
 769:Src/main.c    **** }
 830              		.loc 1 769 1 view .LVU198
 831 000a 08BD     		pop	{r3, pc}
 832              	.LVL43:
 833              	.L43:
 764:Src/main.c    ****     HAL_IncTick();
 834              		.loc 1 764 5 is_stmt 1 view .LVU199
 835 000c FFF7FEFF 		bl	HAL_IncTick
 836              	.LVL44:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 34


 837              		.loc 1 769 1 is_stmt 0 view .LVU200
 838 0010 FBE7     		b	.L40
 839              	.L45:
 840 0012 00BF     		.align	2
 841              	.L44:
 842 0014 00100040 		.word	1073745920
 843              		.cfi_endproc
 844              	.LFE146:
 846              		.section	.text._Error_Handler,"ax",%progbits
 847              		.align	1
 848              		.global	_Error_Handler
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu fpv4-sp-d16
 854              	_Error_Handler:
 855              	.LFB147:
 770:Src/main.c    **** 
 771:Src/main.c    **** /**
 772:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 773:Src/main.c    ****   * @param  file: The file name as string.
 774:Src/main.c    ****   * @param  line: The line in file as a number.
 775:Src/main.c    ****   * @retval None
 776:Src/main.c    ****   */
 777:Src/main.c    **** void _Error_Handler(char *file, int line)
 778:Src/main.c    **** {
 856              		.loc 1 778 1 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ Volatile: function does not return.
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862              	.LVL45:
 863              	.L47:
 779:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 780:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 781:Src/main.c    ****   while(1)
 864              		.loc 1 781 3 discriminator 1 view .LVU202
 782:Src/main.c    ****   {
 783:Src/main.c    ****   }
 865              		.loc 1 783 3 discriminator 1 view .LVU203
 866 0000 FEE7     		b	.L47
 867              		.cfi_endproc
 868              	.LFE147:
 870              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 871              		.align	1
 872              		.syntax unified
 873              		.thumb
 874              		.thumb_func
 875              		.fpu fpv4-sp-d16
 877              	MX_USART1_UART_Init:
 878              	.LFB140:
 590:Src/main.c    **** 
 879              		.loc 1 590 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 35


 883 0000 08B5     		push	{r3, lr}
 884              	.LCFI15:
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 3, -8
 887              		.cfi_offset 14, -4
 593:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 888              		.loc 1 593 3 view .LVU205
 593:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 889              		.loc 1 593 19 is_stmt 0 view .LVU206
 890 0002 0B48     		ldr	r0, .L52
 891 0004 0B4B     		ldr	r3, .L52+4
 892 0006 0360     		str	r3, [r0]
 594:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 893              		.loc 1 594 3 is_stmt 1 view .LVU207
 594:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 894              		.loc 1 594 24 is_stmt 0 view .LVU208
 895 0008 4FF4E133 		mov	r3, #115200
 896 000c 4360     		str	r3, [r0, #4]
 595:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 897              		.loc 1 595 3 is_stmt 1 view .LVU209
 595:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 898              		.loc 1 595 26 is_stmt 0 view .LVU210
 899 000e 0023     		movs	r3, #0
 900 0010 8360     		str	r3, [r0, #8]
 596:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 901              		.loc 1 596 3 is_stmt 1 view .LVU211
 596:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 902              		.loc 1 596 24 is_stmt 0 view .LVU212
 903 0012 C360     		str	r3, [r0, #12]
 597:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 904              		.loc 1 597 3 is_stmt 1 view .LVU213
 597:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 905              		.loc 1 597 22 is_stmt 0 view .LVU214
 906 0014 0361     		str	r3, [r0, #16]
 598:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 907              		.loc 1 598 3 is_stmt 1 view .LVU215
 598:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 908              		.loc 1 598 20 is_stmt 0 view .LVU216
 909 0016 0C22     		movs	r2, #12
 910 0018 4261     		str	r2, [r0, #20]
 599:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 911              		.loc 1 599 3 is_stmt 1 view .LVU217
 599:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 912              		.loc 1 599 25 is_stmt 0 view .LVU218
 913 001a 8361     		str	r3, [r0, #24]
 600:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 914              		.loc 1 600 3 is_stmt 1 view .LVU219
 600:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 915              		.loc 1 600 28 is_stmt 0 view .LVU220
 916 001c C361     		str	r3, [r0, #28]
 601:Src/main.c    ****   {
 917              		.loc 1 601 3 is_stmt 1 view .LVU221
 601:Src/main.c    ****   {
 918              		.loc 1 601 7 is_stmt 0 view .LVU222
 919 001e FFF7FEFF 		bl	HAL_UART_Init
 920              	.LVL46:
 601:Src/main.c    ****   {
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 36


 921              		.loc 1 601 6 view .LVU223
 922 0022 00B9     		cbnz	r0, .L51
 607:Src/main.c    **** 
 923              		.loc 1 607 1 view .LVU224
 924 0024 08BD     		pop	{r3, pc}
 925              	.L51:
 603:Src/main.c    ****   }
 926              		.loc 1 603 5 is_stmt 1 view .LVU225
 927 0026 40F25B21 		movw	r1, #603
 928 002a 0348     		ldr	r0, .L52+8
 929 002c FFF7FEFF 		bl	_Error_Handler
 930              	.LVL47:
 931              	.L53:
 932              		.align	2
 933              	.L52:
 934 0030 00000000 		.word	huart1
 935 0034 00100140 		.word	1073811456
 936 0038 00000000 		.word	.LC3
 937              		.cfi_endproc
 938              	.LFE140:
 940              		.section	.text.MX_FSMC_Init,"ax",%progbits
 941              		.align	1
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	MX_FSMC_Init:
 948              	.LFB145:
 707:Src/main.c    ****   FSMC_NORSRAM_TimingTypeDef Timing;
 949              		.loc 1 707 1 view -0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 32
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953 0000 00B5     		push	{lr}
 954              	.LCFI16:
 955              		.cfi_def_cfa_offset 4
 956              		.cfi_offset 14, -4
 957 0002 89B0     		sub	sp, sp, #36
 958              	.LCFI17:
 959              		.cfi_def_cfa_offset 40
 708:Src/main.c    **** 
 960              		.loc 1 708 3 view .LVU227
 712:Src/main.c    ****   hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 961              		.loc 1 712 3 view .LVU228
 712:Src/main.c    ****   hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 962              		.loc 1 712 19 is_stmt 0 view .LVU229
 963 0004 1848     		ldr	r0, .L58
 964 0006 4FF02043 		mov	r3, #-1610612736
 965 000a 0360     		str	r3, [r0]
 713:Src/main.c    ****   /* hsram1.Init */
 966              		.loc 1 713 3 is_stmt 1 view .LVU230
 713:Src/main.c    ****   /* hsram1.Init */
 967              		.loc 1 713 19 is_stmt 0 view .LVU231
 968 000c 03F58273 		add	r3, r3, #260
 969 0010 4360     		str	r3, [r0, #4]
 715:Src/main.c    ****   hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 970              		.loc 1 715 3 is_stmt 1 view .LVU232
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 37


 715:Src/main.c    ****   hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 971              		.loc 1 715 22 is_stmt 0 view .LVU233
 972 0012 0022     		movs	r2, #0
 973 0014 8260     		str	r2, [r0, #8]
 716:Src/main.c    ****   hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 974              		.loc 1 716 3 is_stmt 1 view .LVU234
 716:Src/main.c    ****   hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 975              		.loc 1 716 30 is_stmt 0 view .LVU235
 976 0016 C260     		str	r2, [r0, #12]
 717:Src/main.c    ****   hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 977              		.loc 1 717 3 is_stmt 1 view .LVU236
 717:Src/main.c    ****   hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 978              		.loc 1 717 26 is_stmt 0 view .LVU237
 979 0018 0261     		str	r2, [r0, #16]
 718:Src/main.c    ****   hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 980              		.loc 1 718 3 is_stmt 1 view .LVU238
 718:Src/main.c    ****   hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 981              		.loc 1 718 31 is_stmt 0 view .LVU239
 982 001a 1023     		movs	r3, #16
 983 001c 4361     		str	r3, [r0, #20]
 719:Src/main.c    ****   hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 984              		.loc 1 719 3 is_stmt 1 view .LVU240
 719:Src/main.c    ****   hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 985              		.loc 1 719 31 is_stmt 0 view .LVU241
 986 001e 8261     		str	r2, [r0, #24]
 720:Src/main.c    ****   hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 987              		.loc 1 720 3 is_stmt 1 view .LVU242
 720:Src/main.c    ****   hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 988              		.loc 1 720 34 is_stmt 0 view .LVU243
 989 0020 C261     		str	r2, [r0, #28]
 721:Src/main.c    ****   hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 990              		.loc 1 721 3 is_stmt 1 view .LVU244
 721:Src/main.c    ****   hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 991              		.loc 1 721 24 is_stmt 0 view .LVU245
 992 0022 0262     		str	r2, [r0, #32]
 722:Src/main.c    ****   hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 993              		.loc 1 722 3 is_stmt 1 view .LVU246
 722:Src/main.c    ****   hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 994              		.loc 1 722 32 is_stmt 0 view .LVU247
 995 0024 4262     		str	r2, [r0, #36]
 723:Src/main.c    ****   hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 996              		.loc 1 723 3 is_stmt 1 view .LVU248
 723:Src/main.c    ****   hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 997              		.loc 1 723 30 is_stmt 0 view .LVU249
 998 0026 4FF48051 		mov	r1, #4096
 999 002a 8162     		str	r1, [r0, #40]
 724:Src/main.c    ****   hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 1000              		.loc 1 724 3 is_stmt 1 view .LVU250
 724:Src/main.c    ****   hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 1001              		.loc 1 724 26 is_stmt 0 view .LVU251
 1002 002c C262     		str	r2, [r0, #44]
 725:Src/main.c    ****   hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 1003              		.loc 1 725 3 is_stmt 1 view .LVU252
 725:Src/main.c    ****   hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 1004              		.loc 1 725 28 is_stmt 0 view .LVU253
 1005 002e 0263     		str	r2, [r0, #48]
 726:Src/main.c    ****   hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 38


 1006              		.loc 1 726 3 is_stmt 1 view .LVU254
 726:Src/main.c    ****   hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 1007              		.loc 1 726 32 is_stmt 0 view .LVU255
 1008 0030 4263     		str	r2, [r0, #52]
 727:Src/main.c    ****   hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 1009              		.loc 1 727 3 is_stmt 1 view .LVU256
 727:Src/main.c    ****   hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 1010              		.loc 1 727 26 is_stmt 0 view .LVU257
 1011 0032 8263     		str	r2, [r0, #56]
 728:Src/main.c    ****   /* Timing */
 1012              		.loc 1 728 3 is_stmt 1 view .LVU258
 728:Src/main.c    ****   /* Timing */
 1013              		.loc 1 728 24 is_stmt 0 view .LVU259
 1014 0034 4264     		str	r2, [r0, #68]
 730:Src/main.c    ****   Timing.AddressHoldTime = 15;
 1015              		.loc 1 730 3 is_stmt 1 view .LVU260
 730:Src/main.c    ****   Timing.AddressHoldTime = 15;
 1016              		.loc 1 730 27 is_stmt 0 view .LVU261
 1017 0036 0521     		movs	r1, #5
 1018 0038 0191     		str	r1, [sp, #4]
 731:Src/main.c    ****   Timing.DataSetupTime = 8;
 1019              		.loc 1 731 3 is_stmt 1 view .LVU262
 731:Src/main.c    ****   Timing.DataSetupTime = 8;
 1020              		.loc 1 731 26 is_stmt 0 view .LVU263
 1021 003a 0F21     		movs	r1, #15
 1022 003c 0291     		str	r1, [sp, #8]
 732:Src/main.c    ****   Timing.BusTurnAroundDuration = 1;
 1023              		.loc 1 732 3 is_stmt 1 view .LVU264
 732:Src/main.c    ****   Timing.BusTurnAroundDuration = 1;
 1024              		.loc 1 732 24 is_stmt 0 view .LVU265
 1025 003e 0821     		movs	r1, #8
 1026 0040 0391     		str	r1, [sp, #12]
 733:Src/main.c    ****   Timing.CLKDivision = 16;
 1027              		.loc 1 733 3 is_stmt 1 view .LVU266
 733:Src/main.c    ****   Timing.CLKDivision = 16;
 1028              		.loc 1 733 32 is_stmt 0 view .LVU267
 1029 0042 0121     		movs	r1, #1
 1030 0044 0491     		str	r1, [sp, #16]
 734:Src/main.c    ****   Timing.DataLatency = 17;
 1031              		.loc 1 734 3 is_stmt 1 view .LVU268
 734:Src/main.c    ****   Timing.DataLatency = 17;
 1032              		.loc 1 734 22 is_stmt 0 view .LVU269
 1033 0046 0593     		str	r3, [sp, #20]
 735:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
 1034              		.loc 1 735 3 is_stmt 1 view .LVU270
 735:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
 1035              		.loc 1 735 22 is_stmt 0 view .LVU271
 1036 0048 1123     		movs	r3, #17
 1037 004a 0693     		str	r3, [sp, #24]
 736:Src/main.c    ****   /* ExtTiming */
 1038              		.loc 1 736 3 is_stmt 1 view .LVU272
 736:Src/main.c    ****   /* ExtTiming */
 1039              		.loc 1 736 21 is_stmt 0 view .LVU273
 1040 004c 0792     		str	r2, [sp, #28]
 739:Src/main.c    ****   {
 1041              		.loc 1 739 3 is_stmt 1 view .LVU274
 739:Src/main.c    ****   {
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 39


 1042              		.loc 1 739 7 is_stmt 0 view .LVU275
 1043 004e 01A9     		add	r1, sp, #4
 1044 0050 FFF7FEFF 		bl	HAL_SRAM_Init
 1045              	.LVL48:
 739:Src/main.c    ****   {
 1046              		.loc 1 739 6 view .LVU276
 1047 0054 10B9     		cbnz	r0, .L57
 744:Src/main.c    **** 
 1048              		.loc 1 744 1 view .LVU277
 1049 0056 09B0     		add	sp, sp, #36
 1050              	.LCFI18:
 1051              		.cfi_remember_state
 1052              		.cfi_def_cfa_offset 4
 1053              		@ sp needed
 1054 0058 5DF804FB 		ldr	pc, [sp], #4
 1055              	.L57:
 1056              	.LCFI19:
 1057              		.cfi_restore_state
 741:Src/main.c    ****   }
 1058              		.loc 1 741 5 is_stmt 1 view .LVU278
 1059 005c 40F2E521 		movw	r1, #741
 1060 0060 0248     		ldr	r0, .L58+4
 1061 0062 FFF7FEFF 		bl	_Error_Handler
 1062              	.LVL49:
 1063              	.L59:
 1064 0066 00BF     		.align	2
 1065              	.L58:
 1066 0068 00000000 		.word	hsram1
 1067 006c 00000000 		.word	.LC3
 1068              		.cfi_endproc
 1069              	.LFE145:
 1071              		.section	.text.MX_SPI1_Init,"ax",%progbits
 1072              		.align	1
 1073              		.global	MX_SPI1_Init
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	MX_SPI1_Init:
 1080              	.LFB134:
 378:Src/main.c    **** 
 1081              		.loc 1 378 1 view -0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085 0000 08B5     		push	{r3, lr}
 1086              	.LCFI20:
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 3, -8
 1089              		.cfi_offset 14, -4
 380:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1090              		.loc 1 380 3 view .LVU280
 380:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1091              		.loc 1 380 18 is_stmt 0 view .LVU281
 1092 0002 0F48     		ldr	r0, .L64
 1093 0004 0F4B     		ldr	r3, .L64+4
 1094 0006 0360     		str	r3, [r0]
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 40


 381:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1095              		.loc 1 381 3 is_stmt 1 view .LVU282
 381:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1096              		.loc 1 381 19 is_stmt 0 view .LVU283
 1097 0008 4FF48273 		mov	r3, #260
 1098 000c 4360     		str	r3, [r0, #4]
 382:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1099              		.loc 1 382 3 is_stmt 1 view .LVU284
 382:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1100              		.loc 1 382 24 is_stmt 0 view .LVU285
 1101 000e 0023     		movs	r3, #0
 1102 0010 8360     		str	r3, [r0, #8]
 383:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1103              		.loc 1 383 3 is_stmt 1 view .LVU286
 383:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1104              		.loc 1 383 23 is_stmt 0 view .LVU287
 1105 0012 C360     		str	r3, [r0, #12]
 384:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1106              		.loc 1 384 3 is_stmt 1 view .LVU288
 384:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1107              		.loc 1 384 26 is_stmt 0 view .LVU289
 1108 0014 0361     		str	r3, [r0, #16]
 385:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1109              		.loc 1 385 3 is_stmt 1 view .LVU290
 385:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1110              		.loc 1 385 23 is_stmt 0 view .LVU291
 1111 0016 4361     		str	r3, [r0, #20]
 386:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1112              		.loc 1 386 3 is_stmt 1 view .LVU292
 386:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1113              		.loc 1 386 18 is_stmt 0 view .LVU293
 1114 0018 4FF40072 		mov	r2, #512
 1115 001c 8261     		str	r2, [r0, #24]
 387:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1116              		.loc 1 387 3 is_stmt 1 view .LVU294
 387:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1117              		.loc 1 387 32 is_stmt 0 view .LVU295
 1118 001e 2022     		movs	r2, #32
 1119 0020 C261     		str	r2, [r0, #28]
 388:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1120              		.loc 1 388 3 is_stmt 1 view .LVU296
 388:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1121              		.loc 1 388 23 is_stmt 0 view .LVU297
 1122 0022 0362     		str	r3, [r0, #32]
 389:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1123              		.loc 1 389 3 is_stmt 1 view .LVU298
 389:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1124              		.loc 1 389 21 is_stmt 0 view .LVU299
 1125 0024 4362     		str	r3, [r0, #36]
 390:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 1126              		.loc 1 390 3 is_stmt 1 view .LVU300
 390:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 1127              		.loc 1 390 29 is_stmt 0 view .LVU301
 1128 0026 8362     		str	r3, [r0, #40]
 391:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1129              		.loc 1 391 3 is_stmt 1 view .LVU302
 391:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 41


 1130              		.loc 1 391 28 is_stmt 0 view .LVU303
 1131 0028 0A23     		movs	r3, #10
 1132 002a C362     		str	r3, [r0, #44]
 392:Src/main.c    ****   {
 1133              		.loc 1 392 3 is_stmt 1 view .LVU304
 392:Src/main.c    ****   {
 1134              		.loc 1 392 7 is_stmt 0 view .LVU305
 1135 002c FFF7FEFF 		bl	HAL_SPI_Init
 1136              	.LVL50:
 392:Src/main.c    ****   {
 1137              		.loc 1 392 6 view .LVU306
 1138 0030 00B9     		cbnz	r0, .L63
 397:Src/main.c    **** 
 1139              		.loc 1 397 1 view .LVU307
 1140 0032 08BD     		pop	{r3, pc}
 1141              	.L63:
 394:Src/main.c    ****   }
 1142              		.loc 1 394 5 is_stmt 1 view .LVU308
 1143 0034 4FF4C571 		mov	r1, #394
 1144 0038 0348     		ldr	r0, .L64+8
 1145 003a FFF7FEFF 		bl	_Error_Handler
 1146              	.LVL51:
 1147              	.L65:
 1148 003e 00BF     		.align	2
 1149              	.L64:
 1150 0040 00000000 		.word	hspi1
 1151 0044 00300140 		.word	1073819648
 1152 0048 00000000 		.word	.LC3
 1153              		.cfi_endproc
 1154              	.LFE134:
 1156              		.section	.text.SystemClock_Config,"ax",%progbits
 1157              		.align	1
 1158              		.global	SystemClock_Config
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1162              		.fpu fpv4-sp-d16
 1164              	SystemClock_Config:
 1165              	.LFB138:
 504:Src/main.c    **** 
 1166              		.loc 1 504 1 view -0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 96
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170 0000 00B5     		push	{lr}
 1171              	.LCFI21:
 1172              		.cfi_def_cfa_offset 4
 1173              		.cfi_offset 14, -4
 1174 0002 99B0     		sub	sp, sp, #100
 1175              	.LCFI22:
 1176              		.cfi_def_cfa_offset 104
 506:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 1177              		.loc 1 506 2 view .LVU310
 507:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 1178              		.loc 1 507 3 view .LVU311
 508:Src/main.c    **** 
 1179              		.loc 1 508 3 view .LVU312
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 42


 512:Src/main.c    **** 
 1180              		.loc 1 512 3 view .LVU313
 1181              	.LBB34:
 512:Src/main.c    **** 
 1182              		.loc 1 512 3 view .LVU314
 1183 0004 0021     		movs	r1, #0
 1184 0006 0191     		str	r1, [sp, #4]
 512:Src/main.c    **** 
 1185              		.loc 1 512 3 view .LVU315
 1186 0008 334B     		ldr	r3, .L74
 1187 000a 1A6C     		ldr	r2, [r3, #64]
 1188 000c 42F08052 		orr	r2, r2, #268435456
 1189 0010 1A64     		str	r2, [r3, #64]
 512:Src/main.c    **** 
 1190              		.loc 1 512 3 view .LVU316
 1191 0012 1B6C     		ldr	r3, [r3, #64]
 1192 0014 03F08053 		and	r3, r3, #268435456
 1193 0018 0193     		str	r3, [sp, #4]
 512:Src/main.c    **** 
 1194              		.loc 1 512 3 view .LVU317
 1195 001a 019B     		ldr	r3, [sp, #4]
 1196              	.LBE34:
 514:Src/main.c    **** 
 1197              		.loc 1 514 3 view .LVU318
 1198              	.LBB35:
 514:Src/main.c    **** 
 1199              		.loc 1 514 3 view .LVU319
 1200 001c 0291     		str	r1, [sp, #8]
 514:Src/main.c    **** 
 1201              		.loc 1 514 3 view .LVU320
 1202 001e 2F4B     		ldr	r3, .L74+4
 1203 0020 1A68     		ldr	r2, [r3]
 1204 0022 42F48042 		orr	r2, r2, #16384
 1205 0026 1A60     		str	r2, [r3]
 514:Src/main.c    **** 
 1206              		.loc 1 514 3 view .LVU321
 1207 0028 1B68     		ldr	r3, [r3]
 1208 002a 03F48043 		and	r3, r3, #16384
 1209 002e 0293     		str	r3, [sp, #8]
 514:Src/main.c    **** 
 1210              		.loc 1 514 3 view .LVU322
 1211 0030 029B     		ldr	r3, [sp, #8]
 1212              	.LBE35:
 518:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1213              		.loc 1 518 3 view .LVU323
 518:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1214              		.loc 1 518 36 is_stmt 0 view .LVU324
 1215 0032 0123     		movs	r3, #1
 1216 0034 0C93     		str	r3, [sp, #48]
 519:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1217              		.loc 1 519 3 is_stmt 1 view .LVU325
 519:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1218              		.loc 1 519 30 is_stmt 0 view .LVU326
 1219 0036 4FF48033 		mov	r3, #65536
 1220 003a 0D93     		str	r3, [sp, #52]
 520:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1221              		.loc 1 520 3 is_stmt 1 view .LVU327
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 43


 520:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1222              		.loc 1 520 34 is_stmt 0 view .LVU328
 1223 003c 0223     		movs	r3, #2
 1224 003e 1293     		str	r3, [sp, #72]
 521:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1225              		.loc 1 521 3 is_stmt 1 view .LVU329
 521:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1226              		.loc 1 521 35 is_stmt 0 view .LVU330
 1227 0040 4FF48002 		mov	r2, #4194304
 1228 0044 1392     		str	r2, [sp, #76]
 522:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1229              		.loc 1 522 3 is_stmt 1 view .LVU331
 522:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1230              		.loc 1 522 30 is_stmt 0 view .LVU332
 1231 0046 0422     		movs	r2, #4
 1232 0048 1492     		str	r2, [sp, #80]
 523:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1233              		.loc 1 523 3 is_stmt 1 view .LVU333
 523:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1234              		.loc 1 523 30 is_stmt 0 view .LVU334
 1235 004a A822     		movs	r2, #168
 1236 004c 1592     		str	r2, [sp, #84]
 524:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1237              		.loc 1 524 3 is_stmt 1 view .LVU335
 524:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 1238              		.loc 1 524 30 is_stmt 0 view .LVU336
 1239 004e 1693     		str	r3, [sp, #88]
 525:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1240              		.loc 1 525 3 is_stmt 1 view .LVU337
 525:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1241              		.loc 1 525 30 is_stmt 0 view .LVU338
 1242 0050 0723     		movs	r3, #7
 1243 0052 1793     		str	r3, [sp, #92]
 526:Src/main.c    ****   {
 1244              		.loc 1 526 3 is_stmt 1 view .LVU339
 526:Src/main.c    ****   {
 1245              		.loc 1 526 7 is_stmt 0 view .LVU340
 1246 0054 0CA8     		add	r0, sp, #48
 1247 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1248              	.LVL52:
 526:Src/main.c    ****   {
 1249              		.loc 1 526 6 view .LVU341
 1250 005a 68BB     		cbnz	r0, .L71
 533:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1251              		.loc 1 533 3 is_stmt 1 view .LVU342
 533:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1252              		.loc 1 533 31 is_stmt 0 view .LVU343
 1253 005c 0F23     		movs	r3, #15
 1254 005e 0793     		str	r3, [sp, #28]
 535:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1255              		.loc 1 535 3 is_stmt 1 view .LVU344
 535:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1256              		.loc 1 535 34 is_stmt 0 view .LVU345
 1257 0060 0223     		movs	r3, #2
 1258 0062 0893     		str	r3, [sp, #32]
 536:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1259              		.loc 1 536 3 is_stmt 1 view .LVU346
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 44


 536:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1260              		.loc 1 536 35 is_stmt 0 view .LVU347
 1261 0064 0023     		movs	r3, #0
 1262 0066 0993     		str	r3, [sp, #36]
 537:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1263              		.loc 1 537 3 is_stmt 1 view .LVU348
 537:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1264              		.loc 1 537 36 is_stmt 0 view .LVU349
 1265 0068 4FF4A053 		mov	r3, #5120
 1266 006c 0A93     		str	r3, [sp, #40]
 538:Src/main.c    **** 
 1267              		.loc 1 538 3 is_stmt 1 view .LVU350
 538:Src/main.c    **** 
 1268              		.loc 1 538 36 is_stmt 0 view .LVU351
 1269 006e 4FF48053 		mov	r3, #4096
 1270 0072 0B93     		str	r3, [sp, #44]
 540:Src/main.c    ****   {
 1271              		.loc 1 540 3 is_stmt 1 view .LVU352
 540:Src/main.c    ****   {
 1272              		.loc 1 540 7 is_stmt 0 view .LVU353
 1273 0074 0521     		movs	r1, #5
 1274 0076 07A8     		add	r0, sp, #28
 1275 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1276              	.LVL53:
 540:Src/main.c    ****   {
 1277              		.loc 1 540 6 view .LVU354
 1278 007c 08BB     		cbnz	r0, .L72
 546:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1279              		.loc 1 546 3 is_stmt 1 view .LVU355
 546:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1280              		.loc 1 546 44 is_stmt 0 view .LVU356
 1281 007e 0223     		movs	r3, #2
 1282 0080 0393     		str	r3, [sp, #12]
 547:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1283              		.loc 1 547 3 is_stmt 1 view .LVU357
 547:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1284              		.loc 1 547 41 is_stmt 0 view .LVU358
 1285 0082 4FF40073 		mov	r3, #512
 1286 0086 0693     		str	r3, [sp, #24]
 548:Src/main.c    ****   {
 1287              		.loc 1 548 3 is_stmt 1 view .LVU359
 548:Src/main.c    ****   {
 1288              		.loc 1 548 7 is_stmt 0 view .LVU360
 1289 0088 03A8     		add	r0, sp, #12
 1290 008a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1291              	.LVL54:
 548:Src/main.c    ****   {
 1292              		.loc 1 548 6 view .LVU361
 1293 008e E8B9     		cbnz	r0, .L73
 555:Src/main.c    **** 
 1294              		.loc 1 555 3 is_stmt 1 view .LVU362
 555:Src/main.c    **** 
 1295              		.loc 1 555 22 is_stmt 0 view .LVU363
 1296 0090 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1297              	.LVL55:
 555:Src/main.c    **** 
 1298              		.loc 1 555 3 view .LVU364
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 45


 1299 0094 124B     		ldr	r3, .L74+8
 1300 0096 A3FB0030 		umull	r3, r0, r3, r0
 1301 009a 8009     		lsrs	r0, r0, #6
 1302 009c FFF7FEFF 		bl	HAL_SYSTICK_Config
 1303              	.LVL56:
 559:Src/main.c    **** 
 1304              		.loc 1 559 3 is_stmt 1 view .LVU365
 1305 00a0 0420     		movs	r0, #4
 1306 00a2 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1307              	.LVL57:
 562:Src/main.c    **** }
 1308              		.loc 1 562 3 view .LVU366
 1309 00a6 0022     		movs	r2, #0
 1310 00a8 1146     		mov	r1, r2
 1311 00aa 4FF0FF30 		mov	r0, #-1
 1312 00ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1313              	.LVL58:
 563:Src/main.c    **** 
 1314              		.loc 1 563 1 is_stmt 0 view .LVU367
 1315 00b2 19B0     		add	sp, sp, #100
 1316              	.LCFI23:
 1317              		.cfi_remember_state
 1318              		.cfi_def_cfa_offset 4
 1319              		@ sp needed
 1320 00b4 5DF804FB 		ldr	pc, [sp], #4
 1321              	.L71:
 1322              	.LCFI24:
 1323              		.cfi_restore_state
 528:Src/main.c    ****   }
 1324              		.loc 1 528 5 is_stmt 1 view .LVU368
 1325 00b8 4FF40471 		mov	r1, #528
 1326 00bc 0948     		ldr	r0, .L74+12
 1327 00be FFF7FEFF 		bl	_Error_Handler
 1328              	.LVL59:
 1329              	.L72:
 542:Src/main.c    ****   }
 1330              		.loc 1 542 5 view .LVU369
 1331 00c2 40F21E21 		movw	r1, #542
 1332 00c6 0748     		ldr	r0, .L74+12
 1333 00c8 FFF7FEFF 		bl	_Error_Handler
 1334              	.LVL60:
 1335              	.L73:
 550:Src/main.c    ****   }
 1336              		.loc 1 550 5 view .LVU370
 1337 00cc 40F22621 		movw	r1, #550
 1338 00d0 0448     		ldr	r0, .L74+12
 1339 00d2 FFF7FEFF 		bl	_Error_Handler
 1340              	.LVL61:
 1341              	.L75:
 1342 00d6 00BF     		.align	2
 1343              	.L74:
 1344 00d8 00380240 		.word	1073887232
 1345 00dc 00700040 		.word	1073770496
 1346 00e0 D34D6210 		.word	274877907
 1347 00e4 00000000 		.word	.LC3
 1348              		.cfi_endproc
 1349              	.LFE138:
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 46


 1351              		.section	.text.main,"ax",%progbits
 1352              		.align	1
 1353              		.global	main
 1354              		.syntax unified
 1355              		.thumb
 1356              		.thumb_func
 1357              		.fpu fpv4-sp-d16
 1359              	main:
 1360              	.LFB126:
 114:Src/main.c    **** 
 1361              		.loc 1 114 1 view -0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365 0000 38B5     		push	{r3, r4, r5, lr}
 1366              	.LCFI25:
 1367              		.cfi_def_cfa_offset 16
 1368              		.cfi_offset 3, -16
 1369              		.cfi_offset 4, -12
 1370              		.cfi_offset 5, -8
 1371              		.cfi_offset 14, -4
 116:Src/main.c    **** 
 1372              		.loc 1 116 3 view .LVU372
 1373 0002 FFF7FEFF 		bl	HAL_Init
 1374              	.LVL62:
 119:Src/main.c    **** 
 1375              		.loc 1 119 3 view .LVU373
 1376 0006 FFF7FEFF 		bl	SystemClock_Config
 1377              	.LVL63:
 122:Src/main.c    **** 
 1378              		.loc 1 122 3 view .LVU374
 1379 000a FFF7FEFF 		bl	MX_GPIO_Init
 1380              	.LVL64:
 125:Src/main.c    ****   char SD_CD = HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_3);
 1381              		.loc 1 125 3 view .LVU375
 1382 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 1383              	.LVL65:
 126:Src/main.c    ****   
 1384              		.loc 1 126 3 view .LVU376
 126:Src/main.c    ****   
 1385              		.loc 1 126 16 is_stmt 0 view .LVU377
 1386 0012 0821     		movs	r1, #8
 1387 0014 3848     		ldr	r0, .L85
 1388 0016 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1389              	.LVL66:
 129:Src/main.c    ****     {
 1390              		.loc 1 129 3 is_stmt 1 view .LVU378
 129:Src/main.c    ****     {
 1391              		.loc 1 129 6 is_stmt 0 view .LVU379
 1392 001a 0146     		mov	r1, r0
 1393 001c 0028     		cmp	r0, #0
 1394 001e 55D1     		bne	.L77
 131:Src/main.c    ****     }
 1395              		.loc 1 131 5 is_stmt 1 view .LVU380
 1396 0020 3648     		ldr	r0, .L85+4
 1397              	.LVL67:
 131:Src/main.c    ****     }
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 47


 1398              		.loc 1 131 5 is_stmt 0 view .LVU381
 1399 0022 FFF7FEFF 		bl	printf
 1400              	.LVL68:
 1401              	.L78:
 152:Src/main.c    ****   //MX_DMA_Init();
 1402              		.loc 1 152 3 is_stmt 1 view .LVU382
 1403 0026 FFF7FEFF 		bl	MX_FSMC_Init
 1404              	.LVL69:
 155:Src/main.c    ****  //for maybe spi mode sdcard
 1405              		.loc 1 155 3 view .LVU383
 1406 002a FFF7FEFF 		bl	MX_SDIO_SD_Init
 1407              	.LVL70:
 159:Src/main.c    ****   int error_lcd = BSP_LCD_Init();
 1408              		.loc 1 159 3 view .LVU384
 1409 002e FFF7FEFF 		bl	MX_FATFS_Init
 1410              	.LVL71:
 160:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_BLUE);
 1411              		.loc 1 160 3 view .LVU385
 160:Src/main.c    ****   BSP_LCD_Clear(LCD_COLOR_BLUE);
 1412              		.loc 1 160 19 is_stmt 0 view .LVU386
 1413 0032 FFF7FEFF 		bl	BSP_LCD_Init
 1414              	.LVL72:
 161:Src/main.c    ****   snprintf(txt, 30, "test lcd text   ");
 1415              		.loc 1 161 3 is_stmt 1 view .LVU387
 1416 0036 1F20     		movs	r0, #31
 1417 0038 FFF7FEFF 		bl	BSP_LCD_Clear
 1418              	.LVL73:
 162:Src/main.c    ****   BSP_LCD_SetTextColor(LCD_COLOR_MAGENTA);
 1419              		.loc 1 162 3 view .LVU388
 1420 003c 304D     		ldr	r5, .L85+8
 1421 003e 314C     		ldr	r4, .L85+12
 1422 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1423 0042 2860     		str	r0, [r5]	@ unaligned
 1424 0044 6960     		str	r1, [r5, #4]	@ unaligned
 1425 0046 AA60     		str	r2, [r5, #8]	@ unaligned
 1426 0048 EB60     		str	r3, [r5, #12]	@ unaligned
 1427 004a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1428 004c 2B74     		strb	r3, [r5, #16]
 163:Src/main.c    ****   BSP_LCD_DisplayStringAt(0, SCR_HT - CHARSIZEY, (uint8_t *)txt, LEFT_MODE);
 1429              		.loc 1 163 3 view .LVU389
 1430 004e 4FF61F00 		movw	r0, #63519
 1431 0052 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 1432              	.LVL74:
 164:Src/main.c    ****   printf("\n\r\n\r\n\rBooting\n\r");
 1433              		.loc 1 164 3 view .LVU390
 1434 0056 0323     		movs	r3, #3
 1435 0058 2A46     		mov	r2, r5
 1436 005a 4FF4EC71 		mov	r1, #472
 1437 005e 0020     		movs	r0, #0
 1438 0060 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 1439              	.LVL75:
 165:Src/main.c    ****   printf("Software version: %s\r\n",SOFTWARE_VERSION);
 1440              		.loc 1 165 3 view .LVU391
 1441 0064 2848     		ldr	r0, .L85+16
 1442 0066 FFF7FEFF 		bl	printf
 1443              	.LVL76:
 166:Src/main.c    ****   printf("Board Build: \"%s\"\r\n",HARDWARE);    
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 48


 1444              		.loc 1 166 3 view .LVU392
 1445 006a 2849     		ldr	r1, .L85+20
 1446 006c 2848     		ldr	r0, .L85+24
 1447 006e FFF7FEFF 		bl	printf
 1448              	.LVL77:
 167:Src/main.c    ****   printf("Loader Variant: %s\n\r",LOADER_VARIANT);
 1449              		.loc 1 167 3 view .LVU393
 1450 0072 2849     		ldr	r1, .L85+28
 1451 0074 2848     		ldr	r0, .L85+32
 1452 0076 FFF7FEFF 		bl	printf
 1453              	.LVL78:
 168:Src/main.c    ****   printf("about to setup sd-card\n\r");
 1454              		.loc 1 168 3 view .LVU394
 1455 007a 2849     		ldr	r1, .L85+36
 1456 007c 2848     		ldr	r0, .L85+40
 1457 007e FFF7FEFF 		bl	printf
 1458              	.LVL79:
 169:Src/main.c    **** 
 1459              		.loc 1 169 3 view .LVU395
 1460 0082 2848     		ldr	r0, .L85+44
 1461 0084 FFF7FEFF 		bl	printf
 1462              	.LVL80:
 171:Src/main.c    ****   
 1463              		.loc 1 171 3 view .LVU396
 174:Src/main.c    ****   //result=FR_OK;
 1464              		.loc 1 174 3 view .LVU397
 174:Src/main.c    ****   //result=FR_OK;
 1465              		.loc 1 174 12 is_stmt 0 view .LVU398
 1466 0088 0122     		movs	r2, #1
 1467 008a 2749     		ldr	r1, .L85+48
 1468 008c 2748     		ldr	r0, .L85+52
 1469 008e FFF7FEFF 		bl	f_mount
 1470              	.LVL81:
 177:Src/main.c    ****   {
 1471              		.loc 1 177 5 is_stmt 1 view .LVU399
 177:Src/main.c    ****   {
 1472              		.loc 1 177 8 is_stmt 0 view .LVU400
 1473 0092 0146     		mov	r1, r0
 1474 0094 40BB     		cbnz	r0, .L79
 179:Src/main.c    ****      } else {
 1475              		.loc 1 179 6 is_stmt 1 view .LVU401
 1476 0096 2648     		ldr	r0, .L85+56
 1477              	.LVL82:
 179:Src/main.c    ****      } else {
 1478              		.loc 1 179 6 is_stmt 0 view .LVU402
 1479 0098 FFF7FEFF 		bl	puts
 1480              	.LVL83:
 1481              	.L80:
 198:Src/main.c    ****  //res = f_open(&SDFile,(char *)fName, FA_OPEN_EXISTING | FA_READ);
 1482              		.loc 1 198 2 is_stmt 1 view .LVU403
 198:Src/main.c    ****  //res = f_open(&SDFile,(char *)fName, FA_OPEN_EXISTING | FA_READ);
 1483              		.loc 1 198 6 is_stmt 0 view .LVU404
 1484 009c 254C     		ldr	r4, .L85+60
 1485 009e 0023     		movs	r3, #0
 1486 00a0 2370     		strb	r3, [r4]
 200:Src/main.c    ****   {
 1487              		.loc 1 200 3 is_stmt 1 view .LVU405
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 49


 1488              	.LBB36:
 204:Src/main.c    ****     HAL_FLASH_Lock();
 1489              		.loc 1 204 5 view .LVU406
 204:Src/main.c    ****     HAL_FLASH_Lock();
 1490              		.loc 1 204 12 is_stmt 0 view .LVU407
 1491 00a2 2548     		ldr	r0, .L85+64
 1492 00a4 FFF7FEFF 		bl	flash
 1493              	.LVL84:
 205:Src/main.c    ****    
 1494              		.loc 1 205 5 is_stmt 1 view .LVU408
 1495 00a8 FFF7FEFF 		bl	HAL_FLASH_Lock
 1496              	.LVL85:
 207:Src/main.c    ****     {
 1497              		.loc 1 207 5 view .LVU409
 207:Src/main.c    ****     {
 1498              		.loc 1 207 13 is_stmt 0 view .LVU410
 1499 00ac 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 207:Src/main.c    ****     {
 1500              		.loc 1 207 8 view .LVU411
 1501 00ae F9B9     		cbnz	r1, .L81
 209:Src/main.c    ****     }
 1502              		.loc 1 209 7 is_stmt 1 view .LVU412
 1503 00b0 2248     		ldr	r0, .L85+68
 1504 00b2 FFF7FEFF 		bl	printf
 1505              	.LVL86:
 1506              	.L82:
 1507              	.LBE36:
 227:Src/main.c    ****   
 1508              		.loc 1 227 3 view .LVU413
 1509 00b6 FFF7FEFF 		bl	firmware_deinit
 1510              	.LVL87:
 229:Src/main.c    ****   //alt 
 1511              		.loc 1 229 3 view .LVU414
 1512 00ba FFF7FEFF 		bl	firmware_run
 1513              	.LVL88:
 233:Src/main.c    ****   //JumpToApplication();
 1514              		.loc 1 233 3 view .LVU415
 1515 00be 2048     		ldr	r0, .L85+72
 1516 00c0 FFF7FEFF 		bl	printf
 1517              	.LVL89:
 1518              	.L83:
 237:Src/main.c    ****   {
 1519              		.loc 1 237 3 discriminator 1 view .LVU416
 240:Src/main.c    **** 
 1520              		.loc 1 240 5 discriminator 1 view .LVU417
 1521 00c4 1F48     		ldr	r0, .L85+76
 1522 00c6 FFF7FEFF 		bl	puts
 1523              	.LVL90:
 1524 00ca FBE7     		b	.L83
 1525              	.LVL91:
 1526              	.L77:
 1527              	.LBB37:
 135:Src/main.c    ****     MX_FSMC_Init();
 1528              		.loc 1 135 5 view .LVU418
 1529 00cc 1E48     		ldr	r0, .L85+80
 1530              	.LVL92:
 135:Src/main.c    ****     MX_FSMC_Init();
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 50


 1531              		.loc 1 135 5 is_stmt 0 view .LVU419
 1532 00ce FFF7FEFF 		bl	printf
 1533              	.LVL93:
 136:Src/main.c    ****     int error_lcd = BSP_LCD_Init();
 1534              		.loc 1 136 5 is_stmt 1 view .LVU420
 1535 00d2 FFF7FEFF 		bl	MX_FSMC_Init
 1536              	.LVL94:
 137:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_RED);
 1537              		.loc 1 137 5 view .LVU421
 137:Src/main.c    ****     BSP_LCD_Clear(LCD_COLOR_RED);
 1538              		.loc 1 137 21 is_stmt 0 view .LVU422
 1539 00d6 FFF7FEFF 		bl	BSP_LCD_Init
 1540              	.LVL95:
 138:Src/main.c    ****     JumpToApplication();
 1541              		.loc 1 138 5 is_stmt 1 view .LVU423
 1542 00da 4FF47840 		mov	r0, #63488
 1543 00de FFF7FEFF 		bl	BSP_LCD_Clear
 1544              	.LVL96:
 139:Src/main.c    ****   
 1545              		.loc 1 139 5 view .LVU424
 1546 00e2 FFF7FEFF 		bl	JumpToApplication
 1547              	.LVL97:
 1548 00e6 9EE7     		b	.L78
 1549              	.LVL98:
 1550              	.L79:
 139:Src/main.c    ****   
 1551              		.loc 1 139 5 is_stmt 0 view .LVU425
 1552              	.LBE37:
 182:Src/main.c    **** 
 1553              		.loc 1 182 4 is_stmt 1 view .LVU426
 1554 00e8 1848     		ldr	r0, .L85+84
 1555              	.LVL99:
 182:Src/main.c    **** 
 1556              		.loc 1 182 4 is_stmt 0 view .LVU427
 1557 00ea FFF7FEFF 		bl	printf
 1558              	.LVL100:
 1559 00ee D5E7     		b	.L80
 1560              	.L81:
 1561              	.LBB38:
 213:Src/main.c    ****     }
 1562              		.loc 1 213 7 is_stmt 1 view .LVU428
 1563 00f0 1748     		ldr	r0, .L85+88
 1564 00f2 FFF7FEFF 		bl	printf
 1565              	.LVL101:
 1566 00f6 DEE7     		b	.L82
 1567              	.L86:
 1568              		.align	2
 1569              	.L85:
 1570 00f8 000C0240 		.word	1073875968
 1571 00fc 00000000 		.word	.LC4
 1572 0100 00000000 		.word	txt
 1573 0104 34000000 		.word	.LC6
 1574 0108 48000000 		.word	.LC7
 1575 010c 58000000 		.word	.LC8
 1576 0110 5C000000 		.word	.LC9
 1577 0114 74000000 		.word	.LC10
 1578 0118 84000000 		.word	.LC11
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 51


 1579 011c 98000000 		.word	.LC12
 1580 0120 A8000000 		.word	.LC13
 1581 0124 C0000000 		.word	.LC14
 1582 0128 00000000 		.word	SDPath
 1583 012c 00000000 		.word	SDFatFS
 1584 0130 DC000000 		.word	.LC15
 1585 0134 00000000 		.word	res
 1586 0138 00000000 		.word	.LANCHOR1
 1587 013c 18010000 		.word	.LC17
 1588 0140 44010000 		.word	.LC19
 1589 0144 60010000 		.word	.LC20
 1590 0148 18000000 		.word	.LC5
 1591 014c F4000000 		.word	.LC16
 1592 0150 28010000 		.word	.LC18
 1593              	.LBE38:
 1594              		.cfi_endproc
 1595              	.LFE126:
 1597              		.global	sd_pin
 1598              		.global	fName
 1599              		.comm	res,1,1
 1600              		.comm	hdma_sdio_rx,96,4
 1601              		.comm	hdma_sdio_tx,96,4
 1602              		.global	mcuFirstPageAddr
 1603              		.comm	sdFileSystem,4152,4
 1604              		.comm	SDFile,4144,4
 1605              		.comm	SDFatFS,4152,4
 1606              		.comm	SDPath,4,4
 1607              		.comm	retSD,1,1
 1608              		.comm	txt,30,4
 1609              		.comm	hspi1,88,4
 1610              		.comm	SDCardInfo,32,4
 1611              		.comm	hsd,132,4
 1612              		.comm	huart6,64,4
 1613              		.comm	huart3,64,4
 1614              		.comm	huart1,64,4
 1615              		.comm	htim2,60,4
 1616              		.comm	hsram1,80,4
 1617              		.comm	hrtc,32,4
 1618              		.section	.bss.sd_pin,"aw",%nobits
 1619              		.align	2
 1622              	sd_pin:
 1623 0000 00000000 		.space	4
 1624              		.section	.data.fName,"aw"
 1625              		.align	2
 1626              		.set	.LANCHOR1,. + 0
 1629              	fName:
 1630 0000 6D6B7374 		.ascii	"mkstft35.bin\000\000"
 1630      66743335 
 1630      2E62696E 
 1630      0000
 1631              		.section	.data.mcuFirstPageAddr,"aw"
 1632              		.align	2
 1633              		.set	.LANCHOR0,. + 0
 1636              	mcuFirstPageAddr:
 1637 0000 00C00008 		.word	134266880
 1638              		.section	.rodata.Bootloader_JumpToApplication.str1.4,"aMS",%progbits,1
 1639              		.align	2
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 52


 1640              	.LC0:
 1641 0000 61626F75 		.ascii	"about to jump\000"
 1641      7420746F 
 1641      206A756D 
 1641      7000
 1642              		.section	.rodata.Jump_To_App.str1.4,"aMS",%progbits,1
 1643              		.align	2
 1644              	.LC1:
 1645 0000 56656374 		.ascii	"Vect at %x\000"
 1645      20617420 
 1645      257800
 1646 000b 00       		.space	1
 1647              	.LC2:
 1648 000c 6A756D70 		.ascii	"jump @ %x\000"
 1648      20402025 
 1648      7800
 1649              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 1650              		.align	2
 1651              	.LC3:
 1652 0000 5372632F 		.ascii	"Src/main.c\000"
 1652      6D61696E 
 1652      2E6300
 1653              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1654              		.align	2
 1655              	.LC4:
 1656 0000 53442043 		.ascii	"SD CARD detected %d\012\015\000"
 1656      41524420 
 1656      64657465 
 1656      63746564 
 1656      2025640A 
 1657 0016 0000     		.space	2
 1658              	.LC5:
 1659 0018 53442043 		.ascii	"SD CARD not detected %d\012\015\000"
 1659      41524420 
 1659      6E6F7420 
 1659      64657465 
 1659      63746564 
 1660 0032 0000     		.space	2
 1661              	.LC6:
 1662 0034 74657374 		.ascii	"test lcd text   \000"
 1662      206C6364 
 1662      20746578 
 1662      74202020 
 1662      00
 1663 0045 000000   		.space	3
 1664              	.LC7:
 1665 0048 0A0D0A0D 		.ascii	"\012\015\012\015\012\015Booting\012\015\000"
 1665      0A0D426F 
 1665      6F74696E 
 1665      670A0D00 
 1666              	.LC8:
 1667 0058 302E3100 		.ascii	"0.1\000"
 1668              	.LC9:
 1669 005c 536F6674 		.ascii	"Software version: %s\015\012\000"
 1669      77617265 
 1669      20766572 
 1669      73696F6E 
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 53


 1669      3A202573 
 1670 0073 00       		.space	1
 1671              	.LC10:
 1672 0074 4D4B5354 		.ascii	"MKSTFT3.5-V1\000"
 1672      4654332E 
 1672      352D5631 
 1672      00
 1673 0081 000000   		.space	3
 1674              	.LC11:
 1675 0084 426F6172 		.ascii	"Board Build: \"%s\"\015\012\000"
 1675      64204275 
 1675      696C643A 
 1675      20222573 
 1675      220D0A00 
 1676              	.LC12:
 1677 0098 697A336D 		.ascii	"iz3man loader\000"
 1677      616E206C 
 1677      6F616465 
 1677      7200
 1678 00a6 0000     		.space	2
 1679              	.LC13:
 1680 00a8 4C6F6164 		.ascii	"Loader Variant: %s\012\015\000"
 1680      65722056 
 1680      61726961 
 1680      6E743A20 
 1680      25730A0D 
 1681 00bd 000000   		.space	3
 1682              	.LC14:
 1683 00c0 61626F75 		.ascii	"about to setup sd-card\012\015\000"
 1683      7420746F 
 1683      20736574 
 1683      75702073 
 1683      642D6361 
 1684 00d9 000000   		.space	3
 1685              	.LC15:
 1686 00dc 53442043 		.ascii	"SD Card Open Success\015\000"
 1686      61726420 
 1686      4F70656E 
 1686      20537563 
 1686      63657373 
 1687 00f2 0000     		.space	2
 1688              	.LC16:
 1689 00f4 4D41494E 		.ascii	"MAIN: FatFs Init Failed Code: %d\015\012\000"
 1689      3A204661 
 1689      74467320 
 1689      496E6974 
 1689      20466169 
 1690 0117 00       		.space	1
 1691              	.LC17:
 1692 0118 466C6173 		.ascii	"Flash success\012\015\000"
 1692      68207375 
 1692      63636573 
 1692      730A0D00 
 1693              	.LC18:
 1694 0128 4D41494E 		.ascii	"MAIN: Flash error code:%d\012\015\000"
 1694      3A20466C 
 1694      61736820 
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 54


 1694      6572726F 
 1694      7220636F 
 1695              	.LC19:
 1696 0144 0A0D6A75 		.ascii	"\012\015jump to bl new routine\012\015\000"
 1696      6D702074 
 1696      6F20626C 
 1696      206E6577 
 1696      20726F75 
 1697 015f 00       		.space	1
 1698              	.LC20:
 1699 0160 0D0A4C63 		.ascii	"\015\012Lcd Init Error\015\000"
 1699      6420496E 
 1699      69742045 
 1699      72726F72 
 1699      0D00
 1700              		.text
 1701              	.Letext0:
 1702              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-eab
 1703              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1704              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1705              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1706              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1707              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1708              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1709              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 1710              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1711              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1712              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1713              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1714              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1715              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1716              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1717              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fsmc.h"
 1718              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sram.h"
 1719              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 1720              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 1721              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 1722              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1723              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1724              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1725              		.file 26 "Drivers/FATFS/fatfs/src/integer.h"
 1726              		.file 27 "Drivers/FATFS/fatfs/src/ff.h"
 1727              		.file 28 "Drivers/FATFS/fatfs/src/diskio.h"
 1728              		.file 29 "Drivers/FATFS/fatfs/src/ff_gen_drv.h"
 1729              		.file 30 "Drivers/FATFS/Target/sd_diskio.h"
 1730              		.file 31 "Drivers/FATFS/App/fatfs.h"
 1731              		.file 32 "Drivers/drivers/Fonts/fonts.h"
 1732              		.file 33 "Drivers/drivers/stm32_adafruit_lcd.h"
 1733              		.file 34 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1734              		.file 35 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1735              		.file 36 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1736              		.file 37 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h"
 1737              		.file 38 "Inc/firmware.h"
 1738              		.file 39 "<built-in>"
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:18     .text.JumpToApplication:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:25     .text.JumpToApplication:00000000 JumpToApplication
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:105    .text.JumpToApplication:00000028 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:112    .text.MX_SDIO_SD_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:118    .text.MX_SDIO_SD_Init:00000000 MX_SDIO_SD_Init
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:155    .text.MX_SDIO_SD_Init:00000018 $d
                            *COM*:00000084 hsd
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:161    .text.MX_GPIO_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:167    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:334    .text.MX_GPIO_Init:000000c4 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:341    .text.NVIC_SetVectorTable:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:348    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:374    .text.NVIC_SetVectorTable:00000010 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:379    .text.Bootloader_JumpToApplication:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:386    .text.Bootloader_JumpToApplication:00000000 Bootloader_JumpToApplication
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:477    .text.Bootloader_JumpToApplication:0000003c $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:485    .text.Jump_To_App:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:492    .text.Jump_To_App:00000000 Jump_To_App
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:600    .text.Jump_To_App:0000006c $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:611    .text.HAL_SPI_MspInit:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:618    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:734    .text.HAL_SPI_MspInit:00000070 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:740    .text.HAL_SPI_MspDeInit:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:747    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:794    .text.HAL_SPI_MspDeInit:00000028 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:801    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:808    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:842    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:847    .text._Error_Handler:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:854    .text._Error_Handler:00000000 _Error_Handler
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:871    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:877    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:934    .text.MX_USART1_UART_Init:00000030 $d
                            *COM*:00000040 huart1
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:941    .text.MX_FSMC_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:947    .text.MX_FSMC_Init:00000000 MX_FSMC_Init
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1066   .text.MX_FSMC_Init:00000068 $d
                            *COM*:00000050 hsram1
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1072   .text.MX_SPI1_Init:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1079   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1150   .text.MX_SPI1_Init:00000040 $d
                            *COM*:00000058 hspi1
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1157   .text.SystemClock_Config:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1164   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1344   .text.SystemClock_Config:000000d8 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1352   .text.main:00000000 $t
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1359   .text.main:00000000 main
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1570   .text.main:000000f8 $d
                            *COM*:0000001e txt
                            *COM*:00000004 SDPath
                            *COM*:00001038 SDFatFS
                            *COM*:00000001 res
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1622   .bss.sd_pin:00000000 sd_pin
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1629   .data.fName:00000000 fName
                            *COM*:00000060 hdma_sdio_rx
ARM GAS  C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s 			page 56


                            *COM*:00000060 hdma_sdio_tx
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1636   .data.mcuFirstPageAddr:00000000 mcuFirstPageAddr
                            *COM*:00001038 sdFileSystem
                            *COM*:00001030 SDFile
                            *COM*:00000001 retSD
                            *COM*:00000020 SDCardInfo
                            *COM*:00000040 huart6
                            *COM*:00000040 huart3
                            *COM*:0000003c htim2
                            *COM*:00000020 hrtc
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1619   .bss.sd_pin:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1625   .data.fName:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1632   .data.mcuFirstPageAddr:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1639   .rodata.Bootloader_JumpToApplication.str1.4:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1643   .rodata.Jump_To_App.str1.4:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1650   .rodata.MX_USART1_UART_Init.str1.4:00000000 $d
C:\Users\DARKSP~1\AppData\Local\Temp\cc68vtiq.s:1654   .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_RCC_DeInit
HAL_DeInit
printf
HAL_Delay
HAL_SD_MspDeInit
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_IncTick
HAL_UART_Init
HAL_SRAM_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_GPIO_ReadPin
MX_FATFS_Init
BSP_LCD_Init
BSP_LCD_Clear
BSP_LCD_SetTextColor
BSP_LCD_DisplayStringAt
f_mount
puts
flash
HAL_FLASH_Lock
firmware_deinit
firmware_run
